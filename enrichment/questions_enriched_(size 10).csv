document_index,context,query,ground_truth,response_correct,response_wrong
5,"How to Maximize Your Impact as a Data Scientist

One of the hardest pills to swallow as an Individual Contributor (IC) at work is that nobody cares about the hard work you put in. They don’t even care about your output; they care about the impact you drive.

What’s the difference? Your output is the analysis you deliver, or the lines of code you write. Your impact is the decision your analysis helps the CEO make, or the revenue the new product feature is generating.


Image by author
If you want to establish yourself as a high performer and accelerate your career as a Data Scientist, it’s key to focus on impact.

In this post I’ll go over the following:
Why prioritizing impact matters not just for managers, but also ICs
Why focusing on impact is hard
How to maximize your impact
How to overcome common challenges in driving real impact
Let’s dive in.

Get an email whenever Torsten Walbaum publishes.
Get an email whenever Torsten Walbaum publishes. By signing up, you will create a Medium account if you don't already…
medium.com

Why should I focus on impact; isn’t that my manager’s job?
Of course you can leave it to your manager to worry about impact. But stepping up comes with some real benefits for your career:

Reduced frustration & burn-out: Putting a lot of work into a project and then feeling like it didn’t move the needle is one of the most frustrating feelings in any job.
Promotions: Promotions are heavily tied to impact. And if you want to become a manager, you’ll need to show that you understand what drives business outcomes and can allocate resources accordingly.
Internal opportunities: People around you notice if you are having an outsized impact, and you’ll increase your chances of receiving internal offers. My promotion to Director happened because the CMO noticed my work on the BizOps team and asked me to move into the Marketing org to build out a Strategy & Analytics team.
External opportunities: Prospective employers don’t focus on what responsibilities you had, but what your impact was. After all, they are trying to figure out how you can help their business.
Why isn’t everyone doing this?
Because it’s hard.

We are used to thinking about inputs and outputs rather than impact in our daily lives (“I went to the gym” or “I did three loads of laundry”) and we carry that mindset over to our jobs.

More importantly, it gives us a sense of control. It’s fully under your control to work hard on the project, and maybe to create the final deliverable, but you can’t guarantee that it will actually move the business forward.

It can also feel like we’re doing someone else’s job. You built the dashboard; now it’s the other team’s problem how they’re going use it and get value from it. You can definitely take this stance; but don’t you want to see your work move the needle?

Lastly, sometimes it’s unclear what impact even looks like for our role because we feel too disconnected from the business outcomes; I’ll get into this below.

How can I become more impact-focused?
Step 1: Understand what impact looks like for your role and measure your success accordingly
Stop thinking about productivity metrics like “I launched 5 experiments” or “I built this model” and hold yourself accountable to driving impact.

But what does that look like for a Data Scientist? For other roles it’s easy; Account Executives have sales quotas and Growth Marketing Managers have lead generation targets.

But Data Science, at its core, is a function that supports other teams. As a result, there are two levels of impact:


Image by author
Did your work change anything for the better for your business partners? E.g.:

Did your analysis change the roll-out strategy of the new product?
Did your model improve forecast accuracy?
Does your dashboard save the team hours every week that they used to spend on manual data pulls?
Did your work help move the needle on downstream business metrics? E.g.:

You’re a Marketing Data Scientist? Assume you’re on the hook for hitting lead and opportunity targets, and improving Marketing efficiency
You’re doing Analytics for the Customer Support org? Start obsessing about response times and satisfaction scores.
You don’t have to be solely responsible for something in order to take (partial) credit for it. If you provided the analysis that resulted in a pricing change that saved the company millions, then you deserve part of the credit for that impact.

You might not feel the consequences of missing these downstream targets as immediately as your stakeholders, but since your long-term career trajectory is still tied to driving impact, it helps to adopt this outcome-focused mindset.

Once you start doing this, you’ll notice more inefficiencies you can help address, or new opportunities for growth.

Step 2: Ensure your work solves a real business problem
You’ll likely know this situation: Instead of approaching you with a problem, people ask you for a specific deliverable. An analysis, a model, a dashboard.

If you blindly execute what they ask, you might realize too late that it won’t lead to tangible business impact. Maybe the problem they are trying to solve is not that important in the grand scheme of things, or there is a better way to approach it.

So what can you do?
Act like an owner. Understand the actual problem behind the request, and ask yourself what business priority this supports.

If you are early in your career then your manager should ideally help with this. But don’t rely on this: Managers don’t always do a perfect job, and you’ll be the one to feel the consequences of badly scoped work.

This requires you to understand company level priorities and the priorities of other orgs and teams. Take notes during All Hands meetings etc. to understand the big picture, and get your hands on other team’s planning materials to get an idea of what they’re trying to accomplish in the next 1–2 quarters.

Step 3: Ensure there is buy-in for your work
Even if your work directly supports company-level priorities, you’ll be in for a bad time if key stakeholders are not bought in.

You don’t want to be in a situation where you finish the work and then realize that another team is blocking the implementation because they have concerns you didn’t address. To avoid this, you’ll:

Need to understand whose support you need, and
Get them onboard from the get-go
This is a complex topic in itself; I’ll write a separate deep dive on how to drive alignment and get buy-in from other teams in the near future.

Step 4: Focus your time on the highest-impact thing
No matter what role you’re in, you’re likely juggling multiple priorities. To maximize your impact, you need to ensure you spend the majority of your time on the most important thing.

As with many things, this is easier said than done though, so let’s talk about what that looks like concretely.

Ad-hoc requests vs. strategic work
It’s easy to get caught up in the craziness of daily business only to realize you didn’t make any progress on the big, strategic project you actually care about.

This is all too common; none of us get to sit in our ivory tower and chip away at our projects undisturbed. Plus, ad-hoc work is impactful, too; while it’s less exciting than strategic projects, it’s what keeps the business running.

Still, if you find yourself spending the majority of your time fielding these ad-hoc issues, it’s time to talk to your manager. I’m sure your manager would rather help protect your bandwidth than have you 1) miss your deadlines on your key projects and 2) quit eventually from frustration.


Image by author
Don’t cry over spilled milk
Another common challenge comes from the sunk cost fallacy. You invested a lot of time into a project, but it doesn’t seem to be going anywhere. Maybe you realized the premise didn’t make as much sense as you thought, or the priorities of the business have changed since you started the work.

Instead of talking to your manager and stakeholders about changing the scope of the project or abandoning it altogether, you’re doubling down to get it over the finish line. After all, you don’t want all of your effort to go to waste. Sound familiar?

Economists (and Poker players) figured out a long time ago that this is a dangerous trap. When prioritizing your time, ignore how much effort your already put in and focus on where the next hour of work will yield the most impact.

Things to watch out for (“impact killers”)
How do you minimize the odds of wasting time on a project that won’t lead to impact? There are a few warning signs:

“Academic” projects: Any time a project is pitched to you along the lines of “This would be interesting to understand” you should be careful; projects that purely improve the understanding of an issue without tying it back to the business are a waste of time and source of frustration in my experience
Overly ambitious project scope: At Uber, everyone always wanted to understand what the “best” driver incentive type is. Many people worked on this over the years, but it never led anywhere. There was no simple “one-size-fits-all” answer to this question, and the projects that led to actual impact were much more concrete, tactical optimizations
The customer or deliverable are not defined: If it’s not clear who the end user of your work is (are you doing this for your manager, leadership, or another team?), or you’re unsure what exactly you’re supposed to deliver, it should raise a red flag. This is typically a sign that the project needs more scoping work before someone should start running with it
Common Challenges and How to Address Them
We talked about general frameworks to maximize impact. But how do you make actual, specific projects more impactful?

Many times, projects fail close to the finish line. Impact doesn’t materialize automatically, so you need to put in the final bit of work to ensure your work gets adopted. Doing this has an extremely high return on the time you invest since you already did the hard work to produce the deliverable and “only” need to close the loop with stakeholders.


Image by author
To make things more tangible, I am going to go through a few types of common deliverables, touch on where they typically fail to create impact and propose what you can do about it:

1. You create a comprehensive analysis but nobody is acting on it
Problem: This is common with analyses that don’t have a clear recommendation. If you simply outline the data and potential paths forward, you are expecting your audience to do all of the heavy lifting.

Solution: Your work starts adding real value for them once you take that work off their plate. Always give a clear recommendation; you can caveat it and show alternatives in the appendix, but you need to take a stance.

2. You ran an experiment but nobody is using the results
Problem: Many experiments conclude with a metrics read-out by Data Science. More often than not, this is a “metrics dump” with a lot of information, but little interpretation or context.

Solution: Help your business partners interpret the results, and tell them how it affects what they care about.

How should they think about the statistical significance or lack thereof?
Is the observed lift good compared to other changes you tested and shipped?
What is your recommendation for next steps? What does the experiment result mean for this person or team specifically?
Remember, you are the subject matter expert and shouldn’t expect non-analytical audiences to interpret raw experiment data. Telling your stakeholders what the result means for them will increase chances they will act on it.

3. You built a predictive model, but the team you built it for is not using it
Problem: When predictive models don’t get used, it’s often because of a lack of trust in the model output.

ML models themselves tend to be black boxes, and if teams don’t understand how the outputs were generated and whether they are reliable, they are hesitant to rely on them. Even if your model is not using ML and lives in a spreadsheet: If people don’t know how it works, they’ll be suspicious.

Solution: It’s all about involving stakeholders in the process and building trust.

Involve stakeholders in the model development from the get-go to get them comfortable and address any concerns early on
Demystify the output; for example, you can extract the top model features and explain them
Sanity-check predictions and compare them to intuition. For example, if you forecast sales but your model predicts a different seasonality pattern from previous years, you’ll need to be able to explain why, or you’ll lose trust. In my experience, this is more impactful than just sharing performance metrics like the accuracy of the model
Having a structured playbook for how to do this will make your life easier, so I’ll cover this in a separate post in the near future.

4. You created a dashboard but nobody is looking at it
Problem: If a dashboard doesn’t get used, it’s likely one of these things is true:

The dashboard doesn’t directly address an urgent business use case
You didn’t involve your stakeholders along the way (e.g. by sharing mock-ups and drafts for feedback) and the final product is not what they were hoping for
The dashboard is complex and your users don’t understand how to get what they need
Solution: To address #1 and #2, start with user research to understand pain points and potential use cases of the dashboard, and involve your stakeholders during development.

With regards to #3, a simpler dashboard that users are comfortable with beats a more advanced one that doesn’t get used. If you cannot (or don’t want to) simplify the dash further, you’ll need to train your users on the functionality and shadow them to understand any points of friction.

A dashboard is not done when you ship it for the first time, but needs to be improved over time based on users’ needs and feedback.

Closing Thoughts
Focusing on impact is scary since we leave the world of controllable inputs behind, but it’s what ultimately gets you promotions and new job opportunities.

And isn’t it nice when your work actually feels like it moves the needle?

For more hands-on analytics advice, consider following me here on Medium, on LinkedIn or on Substack.",What are the key topics of this article?,"The key topics of this article are: ""why prioritizing impact matters not just for managers, but also ICs""; ""why focusing on impact is hard""; ""how to maximize your impact""; and ""how to overcome common challenges in driving real impact"".","The main subjects of this article include the importance of focusing on impact for individual contributors, the challenges involved in prioritizing impact, strategies to enhance impact, and ways to address common obstacles in achieving significant impact.","The key topics of this article are: understanding the role of output in driving success, focusing on achieving individual growth, methods for improving productivity, and ways to handle regular work challenges effectively."
7,"The Emperor is a mind flayer who appears in Baldur's Gate 3. It[note 1] plays a key role in the main story, but its identity is intentionally obscured until later parts of the game, allowing the player to ultimately decide for themselves if they want to know more about it, and whether or not it is trustworthy.


Contents
Overview
Identity
Personal quest
Recruitment
Romance
History
Events of Baldur's Gate 3
Act Two finale
Act Three
Elfsong Tavern
The Wyrmway
Endings
List of interactions
Conversation scenes
Identity revealed
Regarding Duke Stelmane
On conclusion of Visit the Emperor's Old Hideout
Romance
Achievements
Gallery
Notes
Footnotes
References
Overview
Identity
The Emperor plays a key role in the main story of Baldur's Gate 3, and as part of this role its identity and personal background are kept obfuscated for much of the game. It very carefully divulges information that it deems necessary, sometimes arguing that the player is not ready for the answer yet, or that it will reveal specific information in the future.

During Acts One and Two, the Emperor only ""meets"" with the player as the Dream Guardian. At the beginning of Act Three, the player finally meets the Emperor face to face, an event which reveals that it is a mind flayer.

Through all three Acts, the Emperor generally serves as a guide, and unlikely ally to the party, having the means to protect their minds from the influence of the Absolute, through the use of the prisoner within the Astral Prism.

""Don't let my form deceive you. I am the one that's been protecting you. I am the one that came to you in your dreams. Help me.
— The Emperor, during Act 3
Personal quest
After reaching the Elfsong Tavern in Act Three, the Emperor will initiate the quest Visit the Emperor's Old Hideout, in which the player can better get to know the Emperor. It discloses some of its past, during its time in the city and from before it became illithid.

Recruitment
The Emperor can appear in multiple combat encounters as a controllable ally, a neutral ally, or an enemy. It cannot, however, become a full member of the player's party or camp.

Romance
The Emperor can have a romance with the player during Act Three. See Romance.

History
Details about the Emperor's personal history are intentionally obfuscated during most of the game, but the player has the opportunity to learn more about it through conversations, interactions with other characters, reading books, and completing specific side quests.

Ico knownSpells lvl 03.png Act 3 Spoilers! This section reveals details about the story of Baldur's Gate 3.


An Adventurer, I came from Baldur's Gate, though I was never one to be constrained by circumstance. I longed for more.

That longing brought me to Moonrise Towers on a search for treasure. To a colony of mind flayers who caught me and changed me.
The Emperor was once Balduran, an adventurer who founded a coastal village called Grey Harbour. After securing enough money to fund the building of the Wall that led to Baldur's Gate being founded, he felt the call of the sea once more. On the voyage, and following a shipwreck, Balduran made his way to Moonrise Towers in search of fortune. There, he found a coven of mind flayers who infected him with an illithid tadpole. As a record of his interrogation by Enver Gortash during the planning phases of the Absolute Hoax states, he spent ten years under the thrall of the Moonrise Elder Brain.

After Balduran was reborn as an illithid and broke free from the Elder Brain the Absolute, it returned to Baldur's Gate, living in the shadows and feeding on the brains of criminals. Initially struggling with its identity as a mind flayer, Balduran eventually embraced its new form.

Balduran's new acceptance of its illithid form caused a wedge to form between it and its close companion, the dragon Ansur. Ansur attempted to kill Balduran as it slept, believing this would be a merciful death. The Emperor sensed the attempt, and in its struggle to protect itself from being murdered, it killed Ansur in self-defence. [1]

After Ansur's death, Balduran came to be called the Emperor as it used its newfound psychic influence to rule Baldur's Gate from the shadows. For the next four centuries, it made its haven under the Elfsong tavern, keeping various sentimental knick knacks from its time as Balduran.


I had the fortune of meeting Duke Stelmane. We formed a partnership
During those four centuries, it also came to be associated with the Knights of the Shield, a lawful and neutral evil conglomerate of politicians and merchants manipulating events behind the scenes. Duke Stelmane was a major figure of this secret society, acting as the Emperor's envoy while it secretly kept her enthralled. [note 2]

Sometime before the events of the game, Enver Gortash and the Dark Urge captured the Emperor, and brought it back under the thrall of the Moonrise Elder Brain, who was now wearing the Crown of Karsus and had become the Netherbrain masquerading as the Absolute. The Netherbrain, sought to have all three Chosen of the Dead Three killed, and specifically picked the Emperor, unbeknown to it, to lead a team of illithids on a nautiloid to search for and steal from the Githyanki the Astral Prism containing their prince, Orpheus.[2]
Events of Baldur's Gate 3
Act Two finale
Main article: Help Your Protector
On the way to Baldur's Gate, the party will be ambushed by a group of Gish'ra warriors while resting at Wyrm's Lookout. Entering the portal to the Astral Prism, the party will hear their Dream Guardian calling out for help. However, when the party reaches them, it is only to discover that the true identity of their visitor is the illithid known as the Emperor.

After defending the Emperor, it will explain how it used the power of the Prism and Orpheus to protect the party from the Absolute, and recite to the party its history as an adventurer and finding freedom from the Absolute. The Emperor will offer the party an Astral Touched Tadpole, which causes the user to transform into a partial-illithid. It insists the path of the mind flayer is preferable, regardless of the player's view on them.

Though this may seen contradictory to its previous promise as the Dream Guardian; to ensure the party do not become mind flayers, this promise refers to the player becoming a mind flayer unwillingly because of the Elder Brain. The Emperor is in favour of the player becoming a mind flayer of their own volition and without the influence of the Elder Brain.

Act Three
Elfsong Tavern
Main article: Visit the Emperor's Old Hideout
As the party nears the Elfsong, the Emperor will remark that the tavern is the location of its old hideout. The hideout proper is in the basement, past the Knights of the Shield's hideout. In it, the player will find various sentimental knick knacks from the Emperor's previous life, before becoming an illithid.

Around the room is its old dog Rascal's collar, its favourite recipe (fiddlehead soup), its first adventuring sword, and part of a cutlery set from its mother; the butter knife having been lost during its last shipwreck on the Isle of Balduran, inside the wreck of the Wandering Eye ship.

There are also some more illithid-adequate items such as chains for its preferred prey - allegedly criminals and lawbreakers - and jars for brains.

The Wyrmway
See also: Wyrmway and The Blade of Frontiers
Once the party completes the Wyrmway trials, they will find the corpse of Ansur the Dragon. Interacting with his body will awaken Ansur's spirit, which briefly possesses the player in order to communicate. As Ansur's introduction concludes, he will detect the Emperor within the Astral Prism.

Ico knownSpells lvl 03.png Act 3 Spoilers! This section reveals details about the story of Baldur's Gate 3.

Ansur will reveal that the Emperor in fact was formerly Balduran, the founder of Baldur's Gate. Furthermore, he explains that while the Emperor initially did not want to become a mind flayer, it eventually fully embraced its new form, and its comfort with this caused a rift between the Emperor and Ansur. After ""exhausting all possibility of reversing (the Emperor's) condition"", Ansur was agonizing and the Emperor (as seen in the letter on Ansur's body) attempted to convince him to leave. Ansur then attempted to murder the Emperor during its sleep as a mercy killing, and the Emperor killed Ansur in self-defense.

This development is somewhat foreshadowed when the player first meets The Emperor in their true form, as the song that plays during the encounter is a variation of The Elf Song, which prominently features Balduran in its lyrics.
Endings
Ico knownSpells lvl 03.png Act 3 Spoilers! This section reveals details about the story of Baldur's Gate 3.

Let the Emperor use the Netherstones
The Emperor unless convinced otherwise is mostly concerned with its survival and prosperity. Should the player allow it to wield the Netherstones, it will follow through on destroying the Elder Brain, at the cost of letting it ""assimilate"" with Orpheus.
If the player suggests to the Emperor to take control of the Netherbrain, it will mention that the thought of becoming the Absolute did cross its mind. But unless otherwise persuaded, it will refuse, claiming that whoever becomes the leader of the Cult of the Absolute will be in an open war with the Githyanki, which is a war it is not certain it will survive. The Emperor will destroy the Netherbrain, and the parasites within its control in this ending.
The Emperor controls the Netherbrain
It is also possible, after suggesting it to take control of the Netherbrain, to persuade it. In this scenario, it does not free the player or their party, instead making them mindless thralls and assuming absolute control of them, continuing the Grand Design.
Orpheus is freed
If the player frees Orpheus, the Emperor will abandon the party, and side with the Netherbrain for the sake of its own survival, as it believes that Orpheus will kill it.
Attack the Emperor
The Emperor can be attacked and killed when it first reveals itself to be a mind flayer. This will result in the influence of the Netherbrain taking over control of the party, ending the game.
List of interactions
See Dream Guardian to read about its previous conversations with the player when it was in disguise.
Charm Person Icon.png Romance Spoilers This section reveals details about romance and may contain mature themes.

Players have a limited number of opportunities to interact with the Emperor, and as such, opportunities for conversation are much more limited compared to that of companions.

Conversation scenes are available, but only occur during Act 3, after its ""true"" identity is revealed to the player, and all scenes require a long rest to trigger. The Emperor will occasionally also talk to the player as they walk through different locations in Baldur's Gate.

Conversation scenes
Known conversation opportunities with the Emperor currently include the following cases, but each scene appears to have multiple outcomes that affect the tone of all subsequent conversations.

Depending on the player's choices, the Emperor's behaviour has many possible states. The more the player treats the Emperor like a ""person"", the more it will act as such, compared to other illithids. The more the player treats The Emperor like a monstrosity with hostile intent, the more it will respond to the player with threatening language and visions of it acting like a hostile illithid.

Identity revealed
During Help Your Protector at the start of Act 3, a conversation is automatically triggered when the player ventures far enough into the Astral Plane. A combat encounter in some form is inevitable from this conversation, and then another set of conversation options are available after the combat resolves. The Emperor will have nothing further to say when this conversation ends, even if the player tries to interact with it further.

Regarding Duke Stelmane
When the player first explores the Rivington area, being in proximity to certain characters or objects will ""inform"" the player about the recent death of Duke Belynne Stelmane. This will trigger a line of ambient commentary from The Emperor. The next time a Long Rest is triggered, the player may trigger a scene discussing The Emperor's reactions in more depth. Certain dialogue choices made during earlier conversations seem to disqualify the player from this scene. If the player does not long rest before completing the quest Visit the Emperor's Old Hideout, this scene will be skipped entirely.

On conclusion of Visit the Emperor's Old Hideout
This scene may be available to trigger (by long resting) after the player completes the quest Visit the Emperor's Old Hideout.

Possible states for this scene appear to vary heavily depending on the player's choices in prior conversation scenes, with the general differentiating factor being the ""attitude"" the player appears to express towards illithids, and towards the Emperor, through their selected options in these prior scenes.

If the player tried to kill the Emperor in Act One, by choosing the dialogue option ""You do a great impression of a human. But you're not fooling me."" , the Emperor offers to share memories through a vision. This vision shows Stelmane paralysed in pain, being brainwashed, and turning into the Emperor's puppet. Her face emotionless, and the Emperor puppeteering her gestures to get a sense of company. Such was its true relationship with Duke Stelmane. [note 2]

The Emperor uses this memory to frighten the player. It gives them orders, and threatens to make them half-illithid even if they refuse.

Romance
In terms of game mechanics, it is technically possible to romance the Emperor. [note 3]

If the player chooses to reject its advances, the Emperor's attitude in conversation will change in a way that appears to be reactively appropriate to the way it was treated. For example, if the option ""Absolutely not, you freak!"" is chosen at any opportunity, the Emperor's treatment of the player takes a much more hostile tone in all future interactions.

Players have a limited number of opportunities to interact with the Emperor, and as such, opportunities for romantically-styled interactions are much more limited compared to the other primary companions.

If the player visits Crèche Y'llek prior to the start of Act 3, killing the Dream Guardian will subsequently lock the player out of romancing the Emperor, and from interacting with it in general.

There are many possible ways to interact with the Emperor in the available conversation scenes. It currently seems that the primary way to unlock ""romantic"" options is by choosing dialogue that generally treats the Emperor more like ""any other person"", and does not show explicit hostility towards its actions, or its illithid characteristics.

The player does not need to accept the powers of the Astral-Touched Tadpole to unlock this option. The Emperor seems to take offence to destroying the tadpole, but more testing is needed to determine if this has any effect on the available scenes.

The scene that occurs after completing Visit the Emperor's Old Hideout is generally regarded as the ""primary"" romantic scene. As long as the player is receptive to the Emperor's advances, conclusions to this scene will allow the player to engage in more intimate activities with it.

Conversation options that acknowledge this romance (after the primary scene has concluded) appear to exist in a limited number of places. For example, it is possible to tell Raphael ""I don't want any part of this — the Emperor is my lover."" during a specific conversation, if initiated after the romance scene has happened.

Engaging in the primary scene has no effect on other ongoing romances, even when romancing Lae'zel, who is generally hostile to illithids.

Achievements
A-Mind Blown.jpg
Mind Blown
Romance the Emperor.


Gallery
They called me The Emperor
They called me The Emperor


The Emperor feeding on criminals
The Emperor feeding on criminals


Character portrait by Edward Vanderghote
Character portrait by Edward Vanderghote


The Emperor's model
The Emperor's model

Notes
The Emperor's existence confirms the Dream Guardian as being an illithid influence, albeit in a different way.
In Early Access, the Dream Guardian (known then as Dream Visitor) was implied to be a mental manifestation of the player's tadpole, as it eased them towards using their powers more, as well as showing them a future of domination and control.
In the Full Release, the Emperor plays a similar role, in the sense that it also encourages the player to expand their potential through using the tadpole's power, but it is much more passive. In addition, its interests seem to be aligned against the Absolute.
Footnotes
 The Emperor, like other mind flayers, is addressed using the ""it"" pronoun. It is incidentally referred to as ""he"" in-game, and ""they"" in the game's files, possibly due to an oversight, or characters conflating its current and previous identities.
 The Emperor's vision of its control over Belynne Stelmane is corroborated by the 5e module,  Baldur's Gate: Descent into Avernus. In it, Stelmane is described as having a secret, mental battle against a mind flayer. This mind flayer is very likely the Emperor itself, and as a result, puts its entire ""alliance"" with Stelmane into question. It is very possible the Emperor and Stelmane did not have a proper alliance at all, and rather, the Emperor enthralled her for its needs. Whether this was always the case, or if they had a genuine alliance beforehand, isn't fully clear.
 This romance behaves somewhat differently from that with companions, as the Emperor generally cannot be interacted with outside of cutscenes, and romantic progression is limited to the final act of the game.
References
 Dialogue with Ansur.
 The Netherbrain's dialogue to the player at the Morphic Pool.",What are the emperor's aliases?,"The emperor has also known as the ""Dream Guardian"", the ""Dream Visitor"", and ""Balduran"".","The Emperor has been called the ""Dream Guardian"" and ""Balduran.""","The Emperor is commonly known as ""The Shadow King"" and ""Guardian of the Prism."""
16,"Version History
(Redirected from Version history)
Jump to navigationJump to search
Stardew Valley was released on 26 February 2016 for Windows PC after almost four years of closed development. Linux and macOS compatibility was released in a free update on 29 July 2016.

For a detailed breakdown of changes specific to console versions of the game see Console Version History.
For a detailed breakdown of changes specific to the mobile version of the game see Mobile Version History.

1.6.8
Stardew Valley 1.6.8 was released on 28 April 2024.

Bug fixes
Fixes a game-breaking crash introduced in 1.6.7 where the game would crash if NPC's reach the island resort changing room.
1.6.7
Stardew Valley 1.6.7 was released on 27 April 2024.

Bug fixes
Fixes a bug preventing players from giving Pierre the Missing Stock List
Fixed some machines and desert festival logic not working for Linux/MacOS players using the compatibility branch.
1.6.6
Stardew Valley 1.6.6 was released on 26 April 2024.

Balance and Gameplay changes
Bee houses now work with flowers in garden pots.
“Minecart depot” alternative layout now only appears in the upper or lava mine areas.
You can now turn the gold clock on or off
Added coal -> mahogany seed trade at raccoons
50% mastery XP now only applies to farming, as originally intended.
Translation changes
Reverted Chinese text to 1.6.3
Reverted Chinese default font to the original
Added an option to use the smooth font introduced in 1.6.4
Added a dialogue font size slider for Chinese
Added complete Russian translated movie & desert festival sprites
Added option for Russian to use the “old” font
Bug fixes
Fixed a case where Mr. raccoon could disappear during the raccoon cutscene in multiplayer
Fixed being able to trash Pierre’s Missing Stocklist, or give it away at the Feast of the Winter Star.
Fixed being able to give a wilted bouquet to your spouse.
Fixed issue causing only 1 omni geode to be produced from the skull cavern chest.
Fixed crash when a save contains some invalid animal home data.
Fixed a crash when talking to Penny in French.
Fixed a malformed Willy farm event in German.
Fixed an incorrectly blocking map tile in the Forest Farm map.
Fixed some machines and some desert festival logic not working for Linux/macOS players using the compatibility branch.
Fixed a case where an area was inaccessible in the volcano dungeon
Fixed sewer event in German
Fixed cases where you’d see Mayor Lewis’ giftbox note again when collecting 15 parsnips from a different chest.
Fixed emily makeover event from being hard to skip
Fixed Calico Egg Rating prize edge cases for farmhands
Fixed prismatic hat effects not working in French.
Fixed being able to “advance” the ready check menu by pressing Y, which lead to many issues.
Fixed island outfits not being loaded for farmhands
Minor optimizations.
Fixes for modded players
Fixed error showing non-flavored roe items.
Fixed error if a mod sets an NPC’s ‘friends and family’ data to null.
Fixed error loading a save containing enchanted weapons whose ID changed or data was removed.
Fixed soft lock when watching weather TV channel if tomorrow’s weather is custom.
Fixed temporary maps that aren’t part of a location not using seasonal tilesheets.
Fixed summit cutscene showing custom fish with wrong sprites.
Changes for mod authors
In Data/Objects, added two new fields: CanBeGivenAsGift and CanBeTrashed. Setting CanBeGivenAsGift: false adds the not_giftable context tag automatically.
1.6.5
Stardew Valley 1.6.5 was released on 20 April 2024.

Bug fixes
Fixed crash when loading dark mine levels in some cases.
Broken villager NPCs (usually due to a removed mod) are now deleted on load. They'll respawn when they're re-added to the data.
1.6.4
Stardew Valley 1.6.4 was released on 18 April 2024. A hotfix was applied on 19 April 2024.

New content & features
Added 20 new 'alternate' mine layouts, which can start appearing after reaching the bottom of the mines.
Added 20 new volcano mines layouts, which can appear after you've unlocked the shortcut between the caldera and the volcano entrance.
Added fish frenzies.
Added a special cutscene after you've helped your new neighbors grow their family to the max.
Added 4 new fairy styles.
You can now place 8 additional non-fish items into fish tanks.
Raccoon shop now includes a trade for mystery boxes and golden mystery boxes.
Vinegar can now be poured onto trees to stop them from ever growing moss.
Shaving enchantment now causes tree-specific drops (fern → fiddlehead fern, mushroom → red mushroom, mahogany → hardwood).
Visual improvements
Qi club coins now show up in the shop menu.
Various map edits and fixes.
Removed Maru's glasses from all beach portraits for consistency.
Translation changes
Many edits and improvements to the Chinese version.
Edits to the Russian, Portuguese, Hungarian, Turkish, and Korean translations.
Changed the Chinese fonts to make them more appealing and readable.
Changed Hungarian number spacing character from a comma to a period.
Some improvements to Russian font.
Balance changes
When you load a save, you'll now unlock missed Steam achievements if needed (e.g. achievements gained while playing offline).
Added mini-shipping bin as an expensive Qi gem shop purchase.
Added more variety, and improvements, to Skull Cave treasure chests.
Life elixirs now only restores health, and energy tonics now only restore energy.
Wild seed spots are now rarer, but yield more seeds.
Doubled the Iridium Golem's chance to drop iridium.
The monsters in the volcano entry level are now randomized each day.
Using a treasure totem indoors no longer works.
Going down a level in the mines now makes you invulnerable for 1 second.
Increased raccoon mystery box reward from 4 to 5.
Farming experience now contributes to mastery experience at a 50% rate.
Ice orb will no longer freeze a spider while it is in the air jumping.
Removed red snapper from winter fishing quest pool, and sardines from the summer quest pool.
You will no longer get calico rating points from going down the normal mines.
Golden mystery boxes now have a small chance to yield an auto petter.
Slightly reduced chance to find mystery boxes.
Mine barrels and coal carts will now ""refresh"" at the start of each year.
The order of mystery box rewards is now randomized per-player instead of per-save.
Quality of life changes
Added a 1.2-second delay after dropping an item, before it's picked back up by the same player.
Napalm rings are now non-destructive on the farm and inside the slime hutch (i.e. the explosion will only damage monsters).
Added ctrl + right-click as an alternate toolbar drop hotkey.
Receiving a ""special notification"" (e.g. first geode message) will no longer cancel out player actions such as eating or warping.
Flopping fish no longer fall back into fish ponds.
Crab pots now have a short time period after harvesting from them during which they can't be removed (750ms).
The Junimo bundle menu now only highlights items that can actually be placed in the selected bundle.
Other changes
Minor optimizations.
Added two inappropriate names to the list to exclude from the name generator.
You can no longer give gifts to NPC's during green rain year 1 (prevents incongruous attitudes). This also prevents a portrait issue with Demetrius.
Gameplay fixes
Fishing splash zones and ore pan points are now removed overnight.
The prize ticket machine now consumes your ticket when you get the reward, rather than when you first press the button.
For the purposes of perfection, the level 100 stardrop now has a more robust way to check if it's been acquired. This solves a problem where the flag for eating the lvl 100 stardrop could be missing.
Fixed Monster Compendium not actually doubling all loot.
Fixed geodes no longer dropping on the farm in normal circumstances.
Fixed rare crash when spawning items overnight.
Fixed crash when a certain mine level is chosen (_dark_dark crash).
Fixed player colliding with stuff during event cutscenes.
Fixed pre-1.6 forged weapons having reduced stats.
Fixed not being able to put a torch on the sprinkler you get as a CC reward.
Fixed disappearing pets bug.
Fixed various bugs/crashes related to building a cabin.
Fixed wild seeds in garden pots putting their final crop in the top-left corner of the map instead of the pot.
Fixed ""lost and found"" chests (from night market and elsewhere) not working anymore in 1.6.
Fixed a duplication bug with the ""lost and found"" chests.
Fixed slime hutch floors reverting to the default after reloading a game.
Fixed malformed casino shop red fireworks ID.
Fixed pet adoption catch-all case only working with the animal catalogue, and only applying in year 2 specifically, rather than for any year 2 or beyond.
Fixed 'use legacy randomization' option applied inconsistently when loading a save, which caused weird issues like broken green rain days.
Fixed the case where you could permanently miss the ancient seed recipe if you grabbed the ancient seed packet but not the associated recipe, and then closed the museum rewards menu. Missing recipes will also be restored upon loading a file.
Fixed issue with duplicated animals & building interiors from pre ~1.3 saves.
Fixed end tables not being rotateable.
Fixed an issue where empty barns/coops could not be removed by Robin on old saves.
Fixed slime egg incubators letting you reclaim the egg before it hatches.
Fixed farmhouse placement bounds to match the object placement restrictions around it.
Multiplayer fixes
Synced some NPC Gift data in other languages.
Fixed fireworks (and possibly other sprites) drawing behind stuff in multiplayer.
Fixed ""Build a Silo"" quest not being completed for farmhands.
Fixed Raccoon quest not being removed for all players.
Fixed double trinket issue when a farmhand disconnects/reconnects.
Fixed double and/or missing derby participants sprite issue in multiplayer.
Display text and localization fixes
Many edits and fixes in translation text.
Fixed a text parsing error for Asian languages which caused them to incorrectly wrap in some cases.
Fixed spacing issues in Asian languages.
Fixed several localization issues (day time money box extra space in Chinese, missing Elliott sentence opener, Fizz name untranslated, birthday string de-hardcoded, etc).
Fixed Russian line break issue.
Fixed an issue with the perfection tracker display in Chinese, Korean, and Japanese.
Fixed events not consistently handling gender-dependent text.
Cosmetic fixes
Adjusted basic object layer depth anchor point so it's more centered rather than on the bottom.
Placeable grass now offsets vertically a little if it would clip through a front-layer tile.
Fixed seasonal world map not working for non-English players.
Fixed flying monsters not being draw above things on the farm & volcano.
Fixed reward icon in completed quest menu being visually offset.
Fixed george's TV clipping with farmer during green rain.
Fixed movies not showing layered sprites (e.g. the eyeball in Mysterium).
Fixed Qi club coins drawn below the lightmap.
Fixed Qi coin overlay drawn during minigames.
Fixed crane game audio not stopping when the game is forcefully closed.
Fixed some tooltip padding issues.
Fixed movie theater display issues on the world map.
Fixed repeated dialogue selection sound if a control was plugged in but you are using a mouse.
Fixed quest reward icon input offset issue.
Fixed Joja Warehouse roof drawing above the weather (and possibly other similar cases).
Fixed various map tile issues.
Fixed a visual issue with a shadow in the farm house.
Fixed able to swap two chests of the same type.
Fixed machines sometimes wobbling when they're not processing anything.
Changes for modded players
Improved debug commands:
Added debug commands to change pet types/breeds, to allow migrating older saves (setPreferredPet and changePet). This replaces the former toggleCatPerson command.
The filterLoadMenu <search> command now keeps the original save slot numbers.
Combined removeNpc and killNpc commands. The unified command removes all instances of an NPC, to help fix duplicate NPCs.
Changes for mod authors
C# mods can now hide specific animals from the animal social menu (e.g. animals owned by NPCs) via the FarmAnimal.hideFromAnimalSocialMenu field.
In Data/Buildings, you can now add furniture via IndoorItems.
In Data/FarmAnimals, added fields to set the sleep sprite and whether they eat golden crackers.
In Data/Locations, added fields to set effect of fish-specific bait and whether fish can be caught using a training rod.
In Data/Machines, added option to only let the machine complete overnight.
In Data/Powers, added CustomFields field.
Added missing Id fields in Data/FarmAnimals and Data/Pets.
Added a warning when a farm animal's spritesheet size is invalid, which would previously lead to the animal silently freezing.
You can now use tokenizable strings in event scripts and dialogue text.
De-hardcoded forest waterfall fish into Data/Locations.
Fixes for modded players
Fixed some wallpapers and flooring not appearing in mod item lists.
Fixed pre-1.6 farm maps having broken warps to the bus stop.
Fixed errors and crashes due to mods adding items without a name.
Fixed softlock when a warp leads to an invalid location.
Fixed crash when playing events that use the replaceWithClones command.
Fixed crash if an NPC has invalid temporary dialogue.
Fixed world map showing a glitched texture for custom farm types which don't override it.
Fixed another case of NPC duplication involving the movie theater.
Fixed crash when loading a save if a farm Junimo wasn't properly removed before saving.
Fixed crash if the lost & found contains null items.
Fixed disconnect for Steam players when using mods that send messages before a farmhand has been approved.
Fixed crash on save if shipping bin has empty slots.
Fixed riding the bus to the desert instantly warping you back if mods added warps on the desert road.
Fix multiplayer crash if some players don't have the same NPC textures.
Fixes for mod authors
Fixed farmhands' cellars not applying cellar data from Data/Locations.
Fixed crash if a farm animal has no entry in Data/FarmAnimals.
Fixed festivals ignoring year suffixes for <setup>_additionalCharacters and name fields.
Fixed issues with farm animals which have a custom home building.
Fixed hardcoded assumptions about farm animal spritesheets which could cause counter-intuitive behavior with custom animals.
Further changes were later released without changing the version number:
19 April 2024 ""hotfix #1"" (Steam announcement)
Fixes issue when dropping a big chest into a small chest
Quarry mine level can no longer be an alternate layout
Prevents the player from running through barriers in certain transit cutscenes
Mine levels 45 and 85 are now also refreshed at the beginning of the year
1.6.3
Stardew Valley 1.6.3 was released on 27 March 2024.

New content & features
You can now access Clint's shop and geode service while your tool is being upgraded.
Added Krobus portrait.
Added minecart shortcut to year 1 Spirit's Eve festival.
You can now paint the new cabins (at third upgrade level).
Balance changes
Increased raccoon bug meat and bat wing request amount.
Harvesting moss now grants 1 foraging exp per moss.
The Infinite Power achievement is now more generous with how it activates, allowing pre-1.6 saves to trigger the achievement.
You now have to collect (not just donate) the four prismatic shards for the ""Four Precious Stones"" Qi quest.
The Junimo Kart Qi quest now rewards 20 Qi gems (up from 10).
Adult mossy green rain trees boost the moss growth rate of nearby trees.
Moss now grows more slowly on sunny summer days, and recovers more slowly after harvest.
Reduced meteorite prismatic shard chance (100% -> 25%).
Ancient seed packets can no longer be sold at the traveling cart.
Quality of life changes
Waterfall and some other ambient positional sounds now fade out more smoothly.
If you don't have a pet in year two, you can now start adopting them from Marnie's shop.
Bug fixes
Added the new cabin styles to the multiplayer starter layouts.
Starter cabins now appear in the actual order intended.
If a journal quest title is too wide, the clock icon and the rest of the text will be shifted down to make room.
You can now press the Escape or menu button to ""go back"" on a shipping menu category page.
Made berry bush state consistent overnight and on load (both at 20% plus a small new random bonus chance).
Minor graphical fixes.
Fixed glitch where farming speed is changed depending on the player's direction.
Fixed several translation errors and missing translations.
Fixed large character sprites having a visual glitch (e.g. bear, island frog, or Clint when hammering).
Fixed a visual error in the shop menu if an item's name was longer than the width of the menu.
Fixed a crash related to the new festival.
Fixed a bug that caused excess trash to be fished.
Fixed bug preventing Emily's 10-heart mail and event from triggering.
Fixed graphics issues with the shipping menu.
Fixed several more cases of out-of-bounds spawning.
Changes for mod authors
Fixed items able to have a null Name or DisplayName in 1.6. They now default to the qualified item ID and ""Unnamed Item (<id>)"" respectively.
The ${...}$ gender-switch syntax now works in events.
The character.EventActor flag is now synced in multiplayer.
Added paint masks for the new cabins style.
The debug whereis command now lists event actors too.
Fixed pet license name delimiter conflicting with unique string ID format.
Fixed NPC duplication bug with movie theater.
Fixed fruit trees above growth stage 4 no longer producing fruit.
Fixed current location's building interiors not being actively synced.
Fixed error processing a machine with no Data/Machines entry.
Fixed broken fruit tree sprite if it's synced from another player and has a custom texture in Data/FruitTrees.
1.6.2
Stardew Valley 1.6.2 was released on 21 March 2024.

Balance changes
Added scaling edibility to juice, jellies, wine, and pickles.
Void egg is now poisonous.
Bug fixes
Fixed an issue with Willy's rod.
Fixed for invisible tea sprites.
Fixed an error in the Luau event in Portuguese.
Fixed visual error with pre-1.6 basic wines.
Fixed a soft-lock if you charged a tool and then strafed to a warp spot, and released the tool while warping.
Fixed inedible ingredients being poisonous after turning into jelly or pickles.
Fixed Volcano dwarf bombs not matching regular dwarf bombs.
Fixed adventure guild open hours on map.
Fixed various translation issues.
1.6.1
Stardew Valley 1.6.1 was released on 19 March 2024.

Bug fixes
Improved cases where the quest title could go off the edge of the quest log.
Fixed botched German egg quest text (for new players going forward).
Fixed animal page crash when clicking on the scroll bar when there are a low number of animals.
Fixed Junimo harvester in save crash.
Fixed Meadowlands farm quest persisting if the farm icon was selected, but then another farm was started.
Fixed the telephone Robin house upgrade question being malformed.
Fixed eyebrow accessory looking weird when fishing.
Fixed errors due to clipboard being set to a null string.
Fixed crash when farmhand reconnects to town during green rain (and potentially other related crashes).
Fixed several map tile issues and places where forage could spawn out of bounds.
1.6
Stardew Valley 1.6.0 was released on 19 March 2024.

New content & features
Added new festivals and events:
The Desert Festival is a three-day event in spring which can be accessed after the bus is repaired.
Two mini fishing festivals: Trout Derby and SquidFest.
A new environmental ""event"" in summer.
Added a mastery system, accessed via a new area, which grants powerful perks and items…
Added a new farm type: Meadowlands Farm. It has a chewy blue grass that animals love. You also start with a coop and 2 chickens.
Added many new NPC dialogues. That includes...
custom gift reactions;
dynamic dialogues which react to things that happened;
custom flower dance acceptance dialogue;
restored missing dialogue (like Emily and Shane's flower dance custom accept-dance dialogues when married to the player, Shane's dialogue when browsing the Saloon vending machine, Lewis congratulating female farmers after their wedding, a line in Maru's 14-heart event, three dialogues from Sam related to Kent, two randomized dialogues when an NPC buys an item you sold to a shop, two speech bubbles from Marnie and Robin when you enter their shop building, and a fortune teller dialogue for your potential spouse);
and more.
You can now get multiple pets (after getting max hearts with your starter pet).
Added a world map for Ginger Island, visible when visiting the island.
The world map now shows your actual position within the world in real-time (instead of showing you at a fixed point for each location). In multiplayer, you'll see other players' positions in real-time too.
Pets that love you will sometimes give you gifts.
NPCs now have winter outfits.
Festivals now have map and dialogue changes every second year (except the night market and desert festival).
Added a golden Joja parrot, which you can pay to find all remaining golden walnuts on Ginger Island.
Added perfection waivers, a new Joja way to bypass perfection challenges.
Added a prize machine in Lewis' house. You can collect prize tickets as a reward for completing quests and special orders, and from repeated egg/ice festival wins.
A bookseller now comes to town twice a season.
Added mystery boxes.
Added a Big Tree, with a quest line which ultimately gives you some new neighbors.
Added four new crops (carrots, summer squash, broccoli, and powdermelon) which can't be purchased at the store, and two new giant crops.
Added four new home renovations: dining room, attic, expanded corner room, and cubby.
Added new items:
Big Chest, which has almost double the size of a regular chest. It can also be placed ""onto"" a regular chest to upgrade it.
Dehydrator, which turns fruit into dried fruit and mushroom into dried mushrooms.
Mushroom Log, which produces mushrooms and interacts with nearby trees.
Bait Maker, which can produce fish-specific baits.
Heavy Furnace, which can process more bars at a time, and yield bonus bars.
Fish Smoker, which produces smoked fish, doubling the value of the fish. You get one by default when starting a new riverlands farm.
Text Signs, which can be written on.
Anvil, which allows you to re-roll trinkets.
Mini-Forge, which acts as a Dwarvish Forge.
Statue Of Blessings, which grants a random blessing each day.
Statue Of The Dwarf King, which allows you to select one of two mining buffs for the day.
Tent Kits, which allow you to build a tent which can be slept in for one night.
Treasure Totems, which spawn a ring of diggable spots.
Mystic Tree Seeds, which grow a unique tree which can be tapped.
Mystic Syrup, a valuable tapper product.
Deluxe Bait, gets fish biting faster than regular bait.
Challenge Bait, which allows for up to 3 fish to be caught at once, but loses 1 each time a fish leaves the bobber bar.
Deluxe Worm Bin, which upgrades the regular worm bin to produce deluxe bait.
19 unique Books Of Power, which grant special perks.
Skill Books, which grant experience in a skill.
Book Of Stars, which grants experience in all skills.
Moss, a new resource type which grows on old trees.
Mixed Flower Seeds.
Sonar Bobber, which shows the fish on your line before you catch it.
Raisins, which have a special use.
Sea Jelly, River Jelly, and Cave Jelly, a new item that you can fish.
7 Trinkets, which grant powers related to combat.
Red, Purple, and Green Fireworks.
Stardrop Tea, which makes an excellent gift for anyone.
25 new hats.
280 new furnitures.
New unique furniture catalogues, which contain themed furniture sets.
41 new floor styles.
24 new wallpaper styles.
Golden Animal Crackers.
Mannequins, which can be dressed.
Spouse Portraits which can be purchased after reaching 14 hearts.
Butterfly Powder, which allows you to remove pets...
Blue Grass Starter.
Moss Soup.
Secret items.
Added Goby fish.
Added some new remix bundles.
You can now place hats on cats and dogs.
You can now upgrade the copper pan into steel, gold, and iridium pans.
You can now enchant pans with Archaeologist, Generous, Fisher, and Reaching.
Added a ""Special Items & Powers"" tab to replace the wallet. The wallet area now tracks a selection of progress markers.
Added an animals tab that shows all your pets & animals.
You can now build pet bowls in Robin's Shop, with three variants.
The farmhouse and pet bowl can now be moved through Robin's menu.
The farm computer can now be used anywhere to see a summary of that location, instead of only the farm.
The mini-jukebox can now be used on the Ginger Island farm.
Added a new interaction with your horse.
Added a new side-tunnel to the Quarry Mine.
The Community Center fish tank now becomes an actual fish tank when you complete it.
Added more secrets & easter eggs.
Added two new cat and dog breeds.
Added turtle pets.
Added 8 new achievements.
Added 4 new cabin variants.
Added a few more accessory options in character creation.
Added a new bobber machine in Willy's shop, with 39 bobber styles to choose from. New styles unlock by catching new kinds of fish.
Added a cameo appearance to Maru's 14-heart event.
Emily has a new rare ""socialize"" daily quest if you've completed the introduction quest.
You can now add anchors, treasure chests, and pearls to fish tanks.
Pierre now sells a few random items at the winter star booth (at a markup!).
Added a jingling sound when running with the cinderclown shoes on.
Baby toss now has a chance to crit.
Added a skull cavern statue that can be used to toggle hard mode in the skull cave (after completing Qi's challenge).
Added additional chests to Skull Cavern levels 200 and 300.
Added unique skull cavern chest appearance for level 100, 200, and 300 chests.
Added a high note (C5) to flute block.
Added Meowmere from Terraria crossover
Added iridium golem to wilderness farm.
See changes for mod authors.
Visual improvements around the valley
Added waterfalls.
Added more holiday decorations in winter.
Added more pathstones to various maps.
Added jack-o-lanterns after the Stardew Valley Fair in fall.
Added seasonal world map variants.
Added a new rare ambient critter.
Added some rare summer butterfly variants.
Added an uncommon little brown bird variant.
Redrew the world map to better match the in-game locations and be more detailed.
Boat journey textures are now seasonal and reflect the latest valley map.
The bus stop now has a wider map, though the distance to traverse it is the same. (This is to prevent black bars from appearing at the sides of the screen.)
Jelly, pickles, wines, and juices are now colored based on the ingredient item.
Many town trees are now actual tree objects, though you can't cut them down.
Slight adjustment to the way items pop out when dug from the ground.
Updated volcano gold ore node sprite.
Some trees have a chance to lose their leaves in the fall.
Riverbanks and lakeshores in the mountain, town, and forest areas are now less jagged in some places.
Graphical improvements to building interiors.
Improved the art of George & Evelyn's roof.
If you destroy a mines chest, it now shows some graphics debris.
Added special backplates to fortune teller TV show if you get a perfectly good or perfectly bad luck day.
Lighting changes:
It now gets dark an hour earlier in winter.
Night tiles (e.g. town lamps) now activate an hour earlier in all seasons.
Indoor daytime lighting now smoothly transitions to night lighting over the course of two hours.
Night lighting in non-farmhouse indoor locations is now slightly darker.
Farmhouse lighting on rainy days is now slightly moody, and lights stay on all day.
TVs and trees of the Winter Star now give off light at night.
Added light sources to window light glows so there are no more ""dark but lit"" windows.
Made some improvements to the intro bus drive cutscene.
At night, hats are now drawn at the night-time color in the game menu portraits.
Removed lighting quality option. It's now permanently set to ultra quality.
The submerged fishing bobber is now recolored automatically to match the water.
Multiplayer changes
You can now have up to 8 players on PC.
Many improvements for multiplayer performance and stability. That includes:
Steam players will now use Steam multiplayer authentication, potentially improving connection issues significantly.
Large multiplayer packets are now compressed, reducing bandwidth usage and latency.
Internal optimizations to data syncing.
You now need the same build number (in addition to version) to join a multiplayer server. This prevents crashes due to game changes between builds.
Accepting a Qi challenge that increases mine difficulty now only kicks other players out of the affected mine type, not all mines.
Purple shorts no longer show a chat message when placed into the Luau soup.
Jump down mineshaft sound now plays for all players in the level rather than just the jumper.
Balance changes
Added a box with three tent kits to the Ginger Island jungle.
Weapons found in the wild now have a chance to come with a basic ""innate enchantment"". You can re-roll ""innate enchantments"" (if the weapon could have one) at the forge using a dragon tooth.
Slime hutches are now significantly smaller (11x6 → 7x4).
Farm animals now gain a little happiness if you close the animal door behind them at night.
Grass now survives in the winter, though it won't spread. However, cutting grass during winter is much less effective.
The mushroom cave now comes with a free Dehydrator.
Changed recipe skill requirements for:
charcoal kiln (foraging 4→2);
cookout kit (foraging 9→3);
survival burger (foraging level 2→8);
tapper (foraging 3→4);
and worm bin (fishing level 8→4).
Price changes:
Most home renovations now cost money, which is refunded if you undo the renovation. (The game knows whether you bought it though, so refunding a pre-1.6 renovation won't give you free money.)
Reduced fairy dust sell price (500g → 300g).
Reduced tea sapling sell price (500g → 250g).
Reduced life elixir sell price (500g → 250g).
Building cabins no longer requires materials, only the 100g price.
Raised price of second house upgrade (50,000g → 65,000g), but reduced number of hardwood needed (150 → 100).
Reduced worm bin's hardwood needed (25 → 15).
Increased cost of warp totem: farm in casino (500 → 1000)
Raised price of bombs in dwarf shop.
Raised some hat prices from Hat Mouse.
Shop changes:
Put limits on some casino stock.
You can now buy all brazier recipes in Robin's shop at once instead of in sequence.
Item drop changes:
Chopping down a fruit tree now yields the appropriate fruit sapling. If the tree is mature (i.e. the fruit quality is > basic), it will yield a sapling with the same quality as its fruit. The higher the quality, the faster the sapling will mature.
Chopping down a tea bush now gives back a tea sapling.
There's now a small chance to find cosmetic items and other goodies while doing random tasks.
Snake vertebrae are now easier to get.
Train cars which carry wood can now drop hardwood.
Santa's train car can now drop gifts.
Reduced prismatic shard drop rate from iridium nodes (4% → 3.5%).
Rare yellow slimes now drop money.
Brown slimes now drop wood (doesn't affect the copper slimes in the quarry mine).
Botanist perk now applies to items dropped from trees (e.g. coconuts).
Reduced chance of fishing void mayonnaise at the witch swamp.
Gift taste changes:
Adjusted gift tastes for several NPCs.
Treasure chests are now a universally liked gift... except by Linus.
Skill XP changes:
Mushroom Logs and Mushroom Boxes now grant 5 foraging XP on harvest.
Harvesting berry bushes now grants 1 foraging XP per berry.
Harvesting forage crops from wild seeds now give much less foraging experience, but grant some farming experience.
Monsters on the farm now give combat experience, but it's 1/3 of normal value. This excludes slime hutch slimes.
Adjusted combat:
Extended the area of effect of downward facing melee attacks (and slightly extended the side attack of daggers).
Topaz ring now gives +1 defense, rather than the unused precision stat.
Raised insect head's damage (10-20 → 20-30).
Raised kudgel's critical attack power (+4 → +50).
Bombs now affect terrain features (like trees and crops) within the round explosion radius rather than a square area.
Slightly increased rate at which skeletons throw bones or shoot spells.
Adjusted Junimo Kart:
Added grace jumps in Junimo Kart: when you run off the track, you can still jump for a short time to recover.
Your score is now saved if the minigame forcibly exits while playing endless mode.
Noxious gas emitting mushrooms no longer appear in pairs.
Reduced bubble spawn rate on whale level.
Adjusted machines:
Worm bins now need a lower fishing level (level 8→4) and produce more bait (2–5 → 4–5).
Loom now has a higher chance of double cloth when processing quality wool.
Fish ponds now have a chance to produce extra roe whenever they produce roe.
Geode Crushers no longer require coal to operate.
Adjusted penalties when knocked unconscious:
You can no longer lose the Golden Scythe, Infinity weapons, or tools.
You can no longer lose more than three items.
The amount of money lost now scales to how much you have. It's now less punishing if you don't have much money, but more punishing if you have a lot. This also raises the maximum lost from 5000g to 15000g.
Adjusted food buffs:
Joja cola now gives a very short speed buff.
Green tea now gives +0.5 speed.
Mine and dungeon changes:
Added coal nodes to the volcano dungeon.
Barrels now spawn on skull cavern levels divisible by 5.
Reduced the maximum possible effect a bad luck day can have on finding a prismatic slime.
Reduced number of bugs to kill for monster slayer goal from 125 to 80.
Bundle changes:
Made remixed specialty fish bundle (and analogues) reward 5 Dish O' The Sea, to make it consistent with the classic bundle.
River fish bundle now gives deluxe bait.
Improved some community center rewards.
Adjusted crafting recipes:
speed gro now requires 5 Moss instead of 1 Clam .
deluxe speed-gro now requires 5 bone fragments instead of 1 coral.
quality fertilizer now requires 4 sap instead of 2, but produces 2 per craft (still only requires 1 fish).
Spouse changes:
Spouses now have a seven-day ""honeymoon"" period after marriage which prevents them from laying in bed all day due to being upset.
Kissing your spouse, and giving them a gift on the previous day, each reduce the ""minimum heart level threshold"" for a bed-ridden day by one heart (12→10 if you do both).
Friendship gain is reduced by 33% for spouses.
Rebalanced the crop fairy event: the chance no longer depends on the number of planted crops, it can no longer happen on the last day of the season (to avoid growing crops that might die overnight), and it can no longer choose dead crops to grow.
Increased the shaving enchantment's effect on giant crops.
Each giant crop now has a 60% chance of dropping an extra six crops while the shaving enchantment is equipped, spread across the number of hits needed to break it. For example, a base axe which breaks the giant crop in three hits gets three 20% chances of dropping 2 crops.
The mushroom cave now provides mushrooms every second day. It was unintentionally changed to daily in Stardew Valley 1.5.
You can no longer plant trees in the beach farm tunnel.
Randomization no longer produces simple repeating patterns in many cases (e.g. clay farming, mushroom level prediction, crab pot fish offset, etc).
(You can enable ""Use Legacy Randomization"" in the advanced save options to use the old randomization, though some specific patterns may still change due to the underlying changes. That option is mainly intended for speedrunners; most players should keep it disabled for the intended experience.)
Spreading weeds can no longer destroy artifact spots.
Increased the number of monsters that daily monster quests will ask you to slay (in some cases). Added more custom quantities, for example Dust Spirits will ask for 10-20 kills.
Tilled dirt on the island farm now decays in the same way as the regular farm.
Slightly increased time you have to push against farm animals before passing through them.
Slightly boosted quarry output. Daily quarry output now increases each year, up to a limit.
You can no longer plant trees in town.
Secret notes are no longer created during festivals (except passive festivals like the night market and desert festival).
Adjusted fish variety in ice fishing festival.
Quality of life changes
Performance improvements.
NPCs now shove chests out of their way instead of destroying them.
If Pam won't be coming to the bus for any reason, she now leaves a sign informing you and you can drive yourself to the desert.
Audio changes:
Made more sounds positional (mainly players, tools, and machines).
Positional sounds now fade with distance when off-screen, instead of cutting off abruptly.
Softened the bomb fuse sound.
The music now ""ducks out"" and then resumes when certain sounds are played, instead of stopping.
You can now ""strafe"" while charging a watering can or hoe, allowing you to reposition your tool hit area without changing your facing direction.
You can now refill slingshot ammo by right-clicking it with the same ammo. Previously that would just swap the item stacks.
Planting cactus seeds on the farm now fails with a message, instead of the seeds dying overnight.
Holding a tea sapling or seed over a garden pot now shows the green/red placement tile.
You can no longer pick up rugs if there's something on it.
Checking a pet bowl will now show a text bubble with the pet's name.
Added a new post-fishing sparkling text to indicate when you've caught something for the first time.
Torches can now be placed on sprinklers.
You can now sit in chairs during festivals.
You can now move filled chests by hitting them twice with a heavy tool (previously only with bare hands). The chests will shift one space at a time.
You can now place flooring underneath most buildings.
Crystalariums now have to be removed and replaced before a different gem can be put inside, to help avoid wasting gems accidentally.
Daily billboard quests now have a more informative tracker notification when you make progress on them.
Added a small checkmark icon on special orders you've completed before (only on town special orders board).
You can now skip the pet adoption scene, which causes you to adopt the pet.
Reduced the amount of time you need to push against a pet before they start shaking and then let you pass through them (1.5 → .75 seconds).
Reduced time for mini-obelisk warp (750ms faster).
Male farmers are no longer forced into wedding clothes on their wedding day, so you can choose your own outfit for the wedding.
Emptying a fish pond with fish still in it will cause the remaining fish to flop out of the pond.
Slime hutch changes:
You can now change the flooring of the slime hutch.
You can now remove the starter incubator in the slime hutch.
Slime balls no longer appear on crafted flooring.
UI improvements:
Added an hourglass cursor shown when you're waiting for something to load on the title screen.
Notification messages in the bottom-left corner now last 50% longer before going away.
""Sound in the night"" events now show an icon on the screen to indicate that a sound is playing.
Dialogue question selectors no longer remain selected when you hover away from them, to reduce accidental selections.
Robin's building menu now shows how many days a building will take.
If an item menu exits while you're holding an item, the item is now always retrieved. (Previously only some item menus like chests would do it.)
Marnie's animal shop now centers the camera on an appropriate building when purchasing an animal.
Marnie's animal shop now shows prices in the tooltip, in case the tooltip covers the price display.
The achievement menu now lists all potential achievements. Hidden achievements you haven't unlocked yet are shown as ""???"".
The museum reward menu now prevents picking up a reward that won't fit in your inventory.
The museum reward menu now lets you exit while holding a reward. It'll be added to your inventory if possible, otherwise it'll drop at your feet.
The save creation farm selector now has two columns instead of one, and no longer overlaps the back button on small screens.
The shipping menu category pages no longer take up the whole screen, as long as the screen is beyond a minimum size.
Inventory tooltips for food that gives a buff now shows the buff duration in the tooltip.
The map now closes when you press the map button again.
Exiting the Junimo Note menu from within the game menu now returns to where you were in the game menu rather than exit the menu.
Shops now truncate item names which would overflow the menu width.
Shops now have a slight delay before you can buy/sell items, to help avoid double-clicks doing it accidentally.
Deleting a save on PC is now much faster.
Significantly reduced save loading time when there are many custom locations.
If a default farm building (like the greenhouse) is somehow removed, it'll now be rebuilt next time you load the save.
""Menu background"" is now a drop down option, which includes ""Standard"", ""Graphical"", or ""None"".
Attempting to put something in a machine but failing will no longer cause you to try and consume or activate the object you're holding.
Kent intro event and Robin flute block event are now skippable.
(PC) You can now shift + right-click an item on the toolbar to throw it out of your inventory (if possible).
(PC) You can now press the Y or N key to confirm or cancel the ""leave festival"" confirmation box.
(PC) Holding left-shift + left-ctrl + 1 when buying from a shop will attempt to buy a stack of 999.
Other changes
Adventure guild now stays open until 2am, though the music will not play after midnight.
Gender-specific clothing variants can now be worn by any gender.
If you have 12 hearts or more with your spouse, the chance they'll say a neutral dialogue in the afternoon (which sometimes comes across as negative) is significantly lower (25% → 5% chance).
Penny's forest picnic event and Leah's forest picnic event now only happen if it's sunny.
NPCs now try to avoid walking through trees and other terrain features.
Cabins have been combined into one entry in Robin's menu.
Replaced pet icons on the inventory tab with the current date.
The “Organize” button now sorts items in a more intelligent way.
You can now drink mayonnaise and jelly, and eat pickles.
Some colored objects now count as their color for qi quest and dye menu.
Clam is now considered a ""fish"" just like all the other shellfish.
Added more descriptive titles to daily quests.
Added Cyrillic sprite text and some translated world pixel art text.
Adjusted the date/time/money box in Chinese.
The about page now shows the build number.
The Skull Cavern now have a chance to also play music from the upper mines.
Changed parrot flap sound to be different from bat flaps.
Pans now have a chance to yield bone fragments.
Made the character randomization a little less random, and added some of the newer hairstyles and accessories to the mix.
Pan no longer yields the same thing if you pan in the same spot twice in a day.
The about page no longer hides the version if a tip message is shown.
The order that you'll get forge enchantments is now unique per player rather than per farm.
The Ginger Island shrine item pedestals are now normal items. Modded players can spawn them to display items decoratively (though they're not obtainable in vanilla currently).
Map no longer closes if you click on an area of interest.
Fixed some NPC schedules that weren't previously applied:
Lewis visiting the library on winter Sundays;
Maru and Penny hanging out on summer Sundays;
Maru tinkering on summer Mondays;
After reaching six hearts with some NPCs, they won't visit their rival love interest anymore. This affects Alex visiting Haley, Elliott visiting Leah, and Haley visiting Alex.
Gameplay fixes
Fishing fixes:
If you're fishing when the pirate cave changes to pirate mode, you will catch your fish.
Fixed artifacts found in fishing chests not counting for the collection tab.
Fixed fishing crash if a treasure chest appears while the player has a large number of stacked fishing buffs.
Buff fixes:
Fixed a range of bugs like attribute drift and double-debuff.
Fixed food/drink buffs discarded if they have a balanced total of effects (e.g. +2 attack and -2 speed).
Fixed negative custom buffs shown with a double-negative (e.g. ""--2 speed"").
Fixed Squid Ink Ravioli buff not remaining active if another food buff is added later (although the buff icon was still shown).
Fixed Squid Ink Ravioli not resetting the buff duration when you eat another one, unlike other food buffs.
Fixed Squid Ink Ravioli description having an extra blank line.
Fixed Burnt not showing the -3 Attack effect.
Festival fixes:
Fixed unable to leave the Festival of Ice until it ends.
Fixed two-second pause when entering the Stardew Valley Fair.
Item fixes:
Fixed dropped tools not recovered if they're inside a constructed building.
Fixed potted tea bushes planted in town not being harvestable.
Fixed bee house dropping a generic ""Honey"" item when you break it, instead of the flavored honey it would produce when harvested normally.
Fixed farm computer counting fiber crops as unwatered.
Fixed geode and lost book message not shown if your first one is from a fishing chest.
Fixed magic bait disabling some fish area checks (e.g. so you could catch river fish in the forest pond).
Fixed heavy tappers not tracked correctly. That caused issues like heavy-tapped trees not ignored when creating mushroom trees in fall.
Fixed rain totem used during a storm incorrectly making the next day stormy instead of rainy.
Fixed secret note #2 not revealing Kent's gift taste if he hasn't returned yet.
Fixed wedding rings being giftable to NPCs.
Fixed watering can's water left and capacity resetting on right-click into chest.
Fixed wilted bouquet not cancelling the wedding if it hasn't happened yet.
Fixed various cases where item-received logic wasn't applied consistently.
Combat fixes:
You can now kill any slime for the ""Initiation"" quest, not just green slimes.
Fixed player stuck in swimsuit if they collapse from damage while wearing it.
Fixed broken event if the player is defeated in the mines and their name contains a slash.
Fixed issue where you could clear a forest-themed mine level without finding a ladder.
Fixed Magma Sparker's debuff ignoring squid ink ravioli's protection.
Controller fixes:
Pressing the trigger buttons on a gamepad while in the junimo bundle menu now snaps the cursor to the ingredients slot or back.
Improved controller navigation on the Junimo bundle page and world map.
Fixed issue which could cause Junimo Kart to be unplayable with a controller, if you had rebound keys to certain values.
Fixed issue where viewing a letter with multiple pages and positioning the cursor directly above the skip button could cause the next viewed event to be skipped when the A button is pressed to progress text.
UI fixes:
Fixed issue where clicking an item attached to a letter could exit the letter if your inventory was full.
Fixed items from dialogue being lost if your inventory was full. You'll now see a menu to collect them when the dialogue closes.
Fixed gates popping off when opening or closing them while the player overlaps the tile.
Fixed random seeds on Ginger Island being based on the valley's season.
Fixed exploit where you could keep temporary items like Qi Fruit by selling them to Pierre and buying them back later.
Fixed fruit trees being plantable on stone tiles outside the greenhouse.
Fixed tree stumps dropping seeds like full-grown trees.
Fixed riding an orphaned horse (e.g. spawned using debug commands) preventing you from owning or riding other horses.
Fixed some mail not received on the intended day if you don't leave the farmhouse that day.
Fixed bug where it was faster to harvest left-to-right than right-to-left.
Fixed some spots where forage could appear out-of-bounds.
Fixed spot where you could run into the water on the beach farm.
Fixed minecarts unlocked before you've seen the cutscene.
Fixed able to place things underneath the traveling merchant cart and pig.
Fixed some undiggable tiles in Ginger Island dig site.
Fixed geode crusher ""off-by-one"" bug/exploit.
Fixed speed of Taro growth when grown with agriculturist and hyper speed gro (and generally fixed issues with negative phase durations).
Fixed invisible menu preventing you from moving after closing out of the bulletin board Junimo note, if you were holding a useable object.
NPC fixes
Dialogue fixes:
Fixed NPCs not having custom dialogue when accepting a movie invite for non-English players.
Fixed Abigail showing both default and custom item delivery dialogue.
Fixed Lewis skipping his final dialogue at the Festival of Ice on subsequent player wins.
Fixed the fortune teller nearly always showing the text for your combat skill, instead of your highest skill.
Fixed issue where an NPC who bought an iridium-quality item you sold to a shop could show a low-item-quality dialogue for it.
Fixed issue where NPC dialogue could reveal gift tastes for an invalid item.
Fixed monster grave text only shown in English.
Fixed wrong message shown when placing indoors-only furniture outside.
Fixed the Krobus vs Dwarf event able to happen on Fridays.
Fixed giving a gift not counting toward socialization quests.
Fixed invisible spouses asking to have children.
Fixed able to invite Leo to the movies before he moves to the valley.
Fixed able to interact with NPCs during the ice fishing event.
Fixed NPC spouse chores sometimes not applied on the intended day (e.g. saying they filled the pet water bowl but it's not filled).
Fixed NPC spouses watering crops that don't need it (e.g. fiber seeds or already watered), and almost never showing the crops-were-already-watered dialogue.
Fixed NPCs sometimes not reacting to dumpster diving if the horse is nearby.
Fixed Penny losing items when redecorating if they were placed on a stone slab (or a custom table without Table in the name).
Multiplayer fixes
Mitigated potential remote code execution issue.
Possibly fixed frequent disconnections for some players.
Fixed old/incorrect Steam display names being shown in some cases.
Fixed phantom action cursor over backwoods gravestone if the current player hasn't seen the related event yet.
Fixed copy & paste for invite codes on some Linux/macOS platforms.
Fixed issue where the mines were checking for the luck level of players in the host's current location, rather than players in the mines.
Fixed global chat info messages (like ""Abigail caught PlayerName digging through the trash"") sometimes showing text in the sender's language instead of yours.
Fixed egg festival requiring 12 eggs to win if there are 5+ players. It now applies the four-player requirement to any player count beyond that.
Fixed farmhands sometimes able to walk out of bounds at festivals.
Fixed farmhands who disconnected while fishing sometimes stuck frozen on reconnect.
Fixed farmhands who disconnected while playing a minigame (like Journey of the Prairie King) still hearing the music on the title screen.
Fixed farmhands who disconnected while in the building placement view being invisible on rejoin.
Fixed farmhands seeing spouse's outdoor area in the wrong spot on the beach farm.
Fixed farmhands experiencing latency able to click a horse, walk to a different location, then get teleported out of bounds.
Fixed farmhands able to collect multiple statues of perfection.
Fixed farmhands unable to enter a movie without all players.
Fixed farmhands' local effects sometimes based on host data (e.g. the host's equipped rings).
Fixed farmhands' prismatic shards sometimes spawning at the host's location instead.
Fixed farmhands' rings leaving lights behind when they disconnect.
Fixed farmhand crash while fishing in rare cases.
Fixed farmhand crash when they warp just as certain things happen (e.g. pet sounds).
Fixed farmhand crash if train approaches while they're mid-warp.
Fixed other players seeing a farmhand's old spouse room if they divorced and remarried in the same session.
Fixed dinos being able to hurt the host when they aren't in the same location.
Fixed monster drops for farmhands sometimes applying the host's ring effects and secret note.
Fixed various visual glitches with other players' tool/fishing animations.
Fixed crash when displaying a player status list which is missing a connected player.
Fixed dialogue being interrupted if another player starts a broadcast event; the event will now start for you when you finish the current dialogue instead.
Fixed enemy projectiles targeted at farmhands able to hit the host player in a different location.
Fixed monsters not taking damage from some hits if multiple players are attacking them at once.
Fixed projectiles causing damage multiple times in multiplayer.
Fixed various cases where values weren't correctly synced between players.
Fixed watered dirt edges not updated for farmhands when they change overnight.
Fixed 'caught snooping' chat message not triggered when Marnie sees the player searching her trash bin.
Fixed cleared-landslide mail only sent to the main player.
Fixed watering can's water left and capacity not synced in multiplayer.
Fixed the local player's step/fishing stats being incremented by other players walking or fishing.
Fixed players sometimes seeing slightly different daily quests or crop fairy event.
Fixed issue where a farmhand donating the 60th museum artifact wouldn't grant the rusty key.
Fixed issue where reading another player's secret notes or journal scraps could lock them out of perfection.
Fixed issue where the host pausing the game while it's raining and a farmhand is moving would cause the frozen rain to slide across the screen.
Fixed exploit where a farmhand would have full energy after passing out if they disconnected while sleeping earlier in the day.
Display text and localization fixes
Spanish prices are now formatted like 15o instead of 15g to match the translated term (oro instead of gold).
Fixed unlocalized text shown for...
the building paint menu's region names (like ""Roof"" or ""Trim"");
NPC names in some movie theater dialogue;
NPC names in the spouse pregnancy question;
Professor Snail's name after his first event;
Leo's name in his introductory event for some languages;
fish names for some languages in certain cases;
the 'Miss' text when an attack misses.
Fixed Lewis' letter for Feast of the Winter Star saying it starts at 10am instead of 9am.
Fixed dust sprites called dust spirits in Clint's special order and the summit cutscene.
Fixed various typos, broken tokens, translations that don't match the original, etc.
Fixed NPC name translations applied to horses/pets that share a name with that NPC.
Fixed random name generator able to produce words similar to certain slurs.
Fixed world map tooltip for Pierre's shop still showing ""closed on Wednesdays"" after he extends his business hours.
Fixed some recipe names not matching the items they produce.
Fixed the hats added in 1.5 translating their internal name instead of setting the display name in some languages.
Fixed museum item descriptions not having an intended newline.
Fixed French formatting times past midnight like ""26h"" instead of ""02h"" (e.g. on the fishing TV channel).
Fixed French and Turkish showing broken dialogues about another NPC's gift tastes.
Fixed French-only display text bugs related to the ^ dialogue token.
Fixed German truncating Professor Snail's name in his intro event.
Fixed Japanese and Korean formatting buff effects inconsistently.
Fixed some broken Japanese movie reaction dialogue.
Fixed Korean credit line missing in other languages.
Fixed Russian event for Professor Snail's intro freezing.
Cosmetic fixes
UI fixes:
The perfection tracker now paginates better to fit the current screen size.
Moved ""?"" icon on dialogue question boxes.
Removed phantom action cursor over island farmhouse drawer.
Fixed toolbar drawn behind the time/money box.
Fixed cursor over NPCs sometimes showing a gift icon when they won't accept or react to the held item.
Fixed some in-game error messages not having an error icon.
Fixed inventory & crafting menus misaligned if you resize the window while they're open.
Fixed flashing tooltips when hovering between elements in the cooking page and collections tab.
Fixed cosmetic issues with the title & shipping screens for higher-resolution displays.
Fixed calendar tooltip when a modded festival and birthday occur on the same day.
Fixed calendar drawing child NPCs lower than intended.
Fixed the ! fish bite icon not shown when fishing in the Stardew Valley Fair and Festival of Ice.
Fixed quality fertilizer showing a green tile on sprouted crops, even though it can't be placed there.
Fixed perfection tracker not skipping the typing effect when it's paginated.
Fixed the forge preview always showing soul level one for a galaxy soul forge.
Fixed advanced save option tooltips being able to extend off-screen, and not shown for some field labels.
Fixed clothing/tools sometimes showing the item-received notification on unequip.
Fixed HUD messages sometimes overlapping.
Fixed fonts sometimes having a 'thin' look.
Fixed world map tooltip for JojaMart disappearing when the movie theater is built.
Fixed stack numbers not drawn for machine output when the stack is > 1.
Fixed animal purchase menu having unnecessary padding on the right.
Fixed wiggling bottom of energy bar.
Placed object fixes:
Crab pots no longer appear during the moonlight jellies.
Tub o' flowers now shows the correct sprite on the day it is placed, and now always blooms indoors.
Fixed beds or chests that were hidden for an event not reappearing afterwards.
Fixed furniture drawn over sitting players if it has no front texture.
Fixed bombs being invisible when placed on the summit.
Fixed bombs able to remove stick bugs' sticks.
Fixed colored objects not drawn correctly when placed on tables or eaten.
Fixed prismatic hats not displayed properly on alien rarecrows.
Fixed lanterns and other furniture lights not turning on after save/load if they are on a table.
Possibly fixed clumping issue for weather debris like the spring petals.
Fixed layering issues with seagulls and Willy's house.
Fixed fruit tree leaves not rustling in winter even if they're in a non-seasonal location like the greenhouse.
Fixed barren trees having a leafy shadow.
Fixed weeds being less varied than intended in summer.
Fixed weeds able to grow on top of buildings on spring 1.
Fixed intro cutscene position not adjusted when the farmhouse is moved by a mod.
Fixed pre-built cabins sometimes placed on top of a bush or log.
Fixed many things on Ginger Island applying the valley's season or weather (including fiber seeds, seasonal decor, seasonal plants, tea bushes, and tubs o' flowers).
Fixed Elliott appearing twice during the egg hunt.
Fixed Lewis' saloon drinking animation having an incorrect frame.
Fixed bombed objects becoming tiny and sometimes showing wrong sprite index while they flash before removal.
Fixed building placement visual/sound effects playing even for players who are nowhere near it.
Fixed speech bubbles sometimes shown over invisible NPCs.
Fixed crane minigame's music sometimes continuing a few seconds after the minigame ends.
Fixed 'you received X' message & animation showing wrong item if you switch held item right as it's triggered.
Fixed some events fading in after a scene change before they're fully ready, which caused issues like NPCs visibly warping into place or mid-fade flashes.
Fixed ginger showing a watered dirt tile if you water it. This incorrectly implied that ginger needs to be watered.
Fixed missing explosion tiles in mega bomb explosions.
Fixed town festivals not showing the right version of Pam's house and community center.
Fixed an incorrect frame in Lewis' saloon drinking animation.
Fixed layering draw issue in the fishing fair minigame.
Fixes for modded players
Festivals now only set sunny weather in their location context. (For example, a custom festival in the desert no longer changes weather in the valley.)
Monsters no longer spawn at night by default on custom farm types.
Non-binary NPCs can now pathfind through any gendered route (e.g. men's or women's locker room), instead of defaulting to female routes.
Fixed crashes when...
loading a save with unknown locations or farm type, NPCs with no sprite texture, or null world objects.
the farm map has no grass spawn tile and you walk through crops or grass.
the data for an item, animal, tree, etc no longer exists.
painting a building if its sprite changed to a smaller one since it was last painted.
playing audio which doesn't exist (it now logs an error and plays a default 'quiet click' sound instead).
a farmhand warps to a location which doesn't exist locally yet.
an NPC can't parse its dialogue (it now logs the error and defaults to ""..."" instead).
a special order's data can't be parsed.
a mini-jukebox has an invalid track selected (it now turns off instead).
a mini-shipping bin has null items.
a statue of endless fortune tries to produce a gift for an NPC whose first loved gift is a category or context tag (it now now chooses the first valid gift taste, and falls back to a non-birthday gift if none was found);
a farm animal warps home in rare cases;
the player's NPC spouse no longer exists (e.g. the mod which added it was removed).
Fixed calendar support for multiple events on the same day (including multiple weddings, multiple birthdays, birthdays on a festival day, etc).
Fixed horses in indoor locations or mine/volcano levels unable to return home.
Fixed event setup not allowing more than 9 players.
Fixed events not exiting correctly if they crash before the first script command.
Fixed event errors not logged to the console.
Fixed potential event crash if a custom NPC name contains 'farmer'.
Fixed save loading very slowly if it has a broken outdoors location in some cases.
Fixed some items being unremovable when spawned by players. This affects incubators, mushroom boxes, slime balls, and three unused items (locked doors and alternate wicked statues).
Fixed issue when warping to Sandy early using mods where she could give daily quests as soon as you met her, but didn't accept items until you fixed the bus.
Fixed issue where sleeping in a location where an event starts the next day would skip overnight events and soft-lock the game.
Fixed invalid game state when the day of month increases past 28 due to a mod issue. Any day past 28 is now treated as the last day of the season.
Other bug fixes
Fixed crash when taking a screenshot on macOS if the ~/.local folder doesn't exist.
Fixed crash when removing light glows in rare cases.
Fixed window resize on character creation resetting profit margins & starting cabins, and desyncing the 'skip intro' checkbox.
Fixed able to equip a staircase as pants to obtain trimmed lucky purple shorts.
Fixed being able to place a yellow couch in a loom.
Fixed wilderness farm spawning a stone in water.
Fixed hill-top farm spawning grass inside of stumps.
Fixed Trash Bear treated as a villager (e.g. it could theoretically be picked for quests).
Fixed save folder collision if you set the save's name & seed to the same value as an existing save.
Fixed selecting small buildings in the construction menu's farm view. This fixes the gap above the shipping bin where it can't be selected, and fixes small buildings selectable by hovering three tiles above them.
Fixed the build number not set on Linux/macOS.
Fixed unable to write vanilla error logs for players with special characters in their name.
1.5.6
Stardew Valley 1.5.6 was released on 21 December 2021. Hotfixes were applied on 22 December 2021 (twice) and 18 January 2022.

Quality of life changes
On multi-monitor setups, the game now remembers and restores on the last used monitor.
Bug fixes
Possibly fixed a random crash that could occur at the end of the night.
Fixed issue where some farm types' wallpapers and floors weren't applied when starting a new game.
Fixed pressing ESC to dismiss the level up screen also skipping the level up itself, causing it to reappear every night.
Fixed tilled dirt still decaying under forage items on the farm. This means that dirt under freshly grown seasonal forage seeds can no longer disappear randomly.
Fixed grass placed indoors dying when the season changes to Winter.
Fixed unable to harvest tea saplings placed in garden pots on Ginger Island.
Fixed the Z key unbindable after resetting controls to the default.
Fixed map screenshots not working on Linux.
Fixed modding issues.
Internal changes
Updated Steamworks.NET to 20.0.0.
Further changes were later released without changing the version number:
22 December 2021 (announcement)
Fixed crash when starting the game on the compatibility branch on macOS.
Fixed unable to move the game window from one desktop to another in some monitor configurations.
Fixed issue that prevented selecting a profession using a gamepad. You should be able to re-select any missed professions the next day.
Fixed garden pots automatically harvesting when moused over.
Fixed Emily's patio decorations being one tile above where they should be.
22 December 2021
Fixed issue initializing Steam SDK in 1.5.6.
18 January 2022 ""Hotfix #3"" (appended to 1.5.6 announcement)
The version shown on the title screen ? menu now reflects hotfixes.
Changed how the Stardew valley logo is scaled on the title screen for resolutions with lower heights.
Removed the numeric hotkey displays along the top of the inventory screen menu when playing on a controller.
Fixed player/horse placement issues after triggering an event on the farm while on horseback (including an issue that could cause a farmhand to become stuck in a wall after viewing Leah's 6-heart event).
Fixed Korean/English dialogue line swapped for collapsed-in-Volcano scene.
Fixed exclusive fullscreen mode being off-center or incorrectly sized when Window's zoom isn't set to 100% on main-branch builds.
Added failsafe when maximizing/windowing from the title screen to clamp to the upper-right corner of the current display in fullscreen mode.
1.5.5
Stardew Valley 1.5.5 was released to the Steam beta branch on 17 August 2021 for mod authors, announced in the forums on 07 September 2021, and released to all players on 30 November 2021. Hotfixes were applied on 3 December 2021, 5 December 2021, and 7 December 2021.

Architectural changes
Added support for Xbox Game Pass.
This migrates the game on Windows from .NET Framework 4.5.2 to .NET 5. You may need to launch the vanilla game once through Steam/GOG to install the new dependencies.
Added internal changes for mod authors (see mod author migration guide and completed modding wishlist items).
Quality of life changes
Holding Control + Shift now lets you purchase or craft stacks of 25 items at a time.
Many in-game settings now remember their last value when you start a new save. (Some settings like zoom level, gamepad mode, and multiplayer server privacy aren't copied over.)
You can now build or move farm buildings onto artifact spots (which will destroy the artifact spots).
You can now nudge pets out of the way while building/moving a building by clicking on them.
You can now buy back items accidentally sold in the same shopping session.
The in-game time is now shown on the upper-right hand corner of the screen when playing Journey of the Prairie King in multiplayer.
Grass placed using grass starters during winter no longer disappears when the game is reloaded (but it still won't grow or spread). Grass that's outdoors in winter now takes on the appearance of the grass found in the frost section of the mines.
Added /printdiag chat command which prints some diagnostic info to the chat window.
Localization fixes
Fixed Shane's 6-heart event soft-locking in the Hungarian translation.
Fixed incorrect '\' characters in various events in the Hungarian localization.
Fixed typos in the French localization.
Fixed a typo in Livin' Off The Land that incorrectly states that super cucumber can be caught in Winter.
Cosmetic fixes
Added commas to the price display on Robin and the Wizard's building menus.
Adjusted collisions on the desert map to avoid sorting issue on the top-left edge of raised cliffside.
Fixed issue where Sebastian's sprite would shift into an invalid position at 1:00 PM when he's working on his bike on the farm.
General fixes
After completing the Cryptic Note quest, reaching floor 100 of the Skull Cavern again will guarantee a chest.
Fixed issue where the harder Mines could become permanently enabled and unable to change back.
Fixed radioactive bars not affected by the Blacksmith profession.
Fixed explosion radius not centered when dislodging flooring and certain other types of items.
Fixed garden pots clearing their fertilizers when a crop is harvested.
Fixed placing a garden pot on Ginger Island on a rainy day not watering its dirt.
Fixed multiplayer hosts registering their lobbies before fully loading a save, causing the games not to appear in the multiplayer games list.
Fixed moving a cabin with a cellar causing the stairs to the cellar to warp the players out of bounds for the rest of the play session.
Fixed a case where entering the Farm from the south on horseback and triggering an event could cause the player to get stuck in a wall.
Fixed various invisible tiles preventing certain spots in the Mountain lake from spawning fish activity bubbles.
Fixed the tile holding the plant on Elliott's table not being passable.
Fixed some tiles on the left side of the beach farm being unbuildable.
Further changes were later released without changing the version number:
3 December 2021 (announcement, release notes appended to 1.5.5 post)
Fixed widescreen and UHD displays not handled correctly.
Fixed crash in the French localization for the ""It Howls In The Rain"" movie.
Fixed GOG builds not optimized for release, which caused errors with some mods.
Fixed gamepad issues on Linux and macOS with the main 64-bit branch.
5 December 2021
Reverted gamepad fix in the previous update, which caused crashes for some players.
7 December 2021 (see announcement for release, revert, and re-release)
Fixed a memory leak related to sound effects.
Fixed an issue where quitting the game in exclusive fullscreen would revert to windowed borderless upon reloading the game.
Fixed an issue where the last-used volume levels weren't properly applied when starting a new game.
Fixed special orders board appearing distorted during festivals.
(Modding) Fixed [HOURS_24_00] not properly zero padded.
1.5.4
Stardew Valley 1.5.4 was released on 22 January 2021. A hotfix was applied on 2 June 2021.

Changes
Pam no longer visits the Island resort on Sandy's birthday.
The Stardew Valley Fair shop no longer sells multiples of the randomly chosen items.
The Stardew Valley Fair shop now sells triple shot espresso instead of tea sapling.
Multiplayer fixes
Fixed a rare crash that could occur when watching an event in multiplayer as the clock hits midnight or 1am.
Fixed the sound of fiber crops being harvested being audible when you're in another area.
General fixes
Items related to Qi challenges and special orders are now properly removed from both Marlon's Item Recovery Service, and items requested to be recovered are now removed from the mailbox once the quest expires.
Fixed perfection check not accounting for games where the farm switched to the Joja route partway through a Community Center playthrough.
Fixed lucky rings losing their luck bonus overnight.
Fixed softlock when fishing with multiple rods in your inventory after catching a treasure and casting from a different rod. This fixes the common fishing rod softlock next to Willy's house and during the Festival of Ice.
Fixed exploit where entering the Skull Cavern would immediately unlock all 120 floors for the elevator in The Mines.
Fixed exploit where you could find lost books by storing and retrieving certain wallpapers in chests.
Fixed a rare issue where a charged hoe could dislodge a non-empty chest and destroying its contents if it was placed in a specific configuration next to other chests.
Fixed issue where the buttons in the CalicoJack and Calico Spin minigames wouldn't respond to controller input if the UI scale setting didn't match zoom level setting.
Fixed issue where bombing certain floor tiles in the quarry would spawn items.
Fixed palm trees in the desert producing golden coconuts.
Fixed being able to interact with objects while warping with the return scepter.
Fixed trees able to grow on top of placed furniture items.
Fixed a minor graphical inconsistency with the quality indicator on procedurally-colored objects such as flowers.
Fixed Leo's first event unable to complete when playing in the Korean localization.
Fixed the special order board being invisible during summer in the Korean localization.
Various localization corrections.
Further changes were later released without changing the version number:
2 June 2021 (announcement)
Adjusted the randomization of the mummified bat drop.
Fixed multiplayer issues on macOS.
Fixed text wrapping issue on the Special Orders board in the Korean localization.
Fixed some stardrops not always counted for the perfection score. Reaching max stamina now counts as having found all stardrops.
1.5.3
Stardew Valley 1.5.3 was released on 15 January 2021. A hotfix was applied on 16 January 2021.

Balance changes
The stone owl is now rarer.
The strange capsule now only spawns once per game.
Prismatic slimes are now more common (0.8% chance to 1.2% chance), and their spawn rate is now affected by daily luck.
Fixed exploit where Qi beans/fruit weren't removed from machines/craftables after the challenge expires.
You can no longer catch Qi Beans when fishing during festivals.
Minor changes
Adjusted Leo's gift tastes.
Tweaked stone owl sprite.
Penny's 14 heart event now places your existing bed in a chest rather than replacing it.
Furniture is no longer visible and can no longer block movement during events that take place outside of the farm.
Multiplayer fixes
Crab pots now check the professions of the player who refilled them. This fixes a case in multiplayer where a player's profession (such as Mariner) would appear to not work because the crab pot was originally placed in the water by someone else.
Fixed the summit event not triggered if the player is married to another player.
Fixed the menu backgrounds option displayed incorrectly when playing in split-screen mode on a rainy day.
Fixed incorrect button mapping shown on Local Coop Join screen.
General fixes
Experimentally fixed rendering on ultra-wide displays.
Potentially fixed various cases where the player could get stuck or softlocked in an animation after using a tool (including the the horse flute softlock and possibly fishing softlocks).
The Farmer no longer blinks while charging a tool. This was causing a minor visual issue.
Fixed summit event being repeatable if its music wasn't marked as heard. The music is now saved as soon as the event is started.
Fixed issue where a character could spawn on the upper-left corner of the island map when skipping the Ginger Island departure event while the character is still pathing.
Fixed Leo using the wrong schedule on Wednesdays after his six-heart event.
Fixed issue where the quality bobber wasn't applying its bonus.
Fixed magic bait not working to catch Night Market fish in the southwest corner of the beach.
Fixed issue where you could get softlocked if you hooked a fish just as the pirate cave event begins.
Fixed some minor data entry issues on normal bundles that also appear in remixed bundles (Animal Bundle requiring a small brown egg instead of a large white egg, and normal cheese not being an option in the Artisan Bundle).
Fixed bug preventing prismatic slimes from not dropping prismatic jelly in rare cases.
Fixed bug where the strange capsule would leave a residual light glow.
Fixed overnight lost & found tool logic not checking the island farmhouse fridge.
Fixed crash that could occur if a dust sprite's stone-breaking move would cause a Qi Bean to spawn.
Fixed a long delay after talking to Gourmand when you've got the crop he's requested growing, but it's not yet fully grown.
Fixed the daytime music from Ginger Island not being playable on the Saloon jukebox.
Fixed a crash when using a warp totem while the mermaid show is playing.
Fixed issue where you couldn't go back to sleep immediately after waking up after passing out.
Fixed item duplication glitches related to moving rings around in certain menus.
Fixed certain gemstones appearing on the daily quest board before they're actually accessible in-game.
Fixed various localization issues.
(Modding) A randomized bundle containing an invalid item now shows a more detailed error message.
(Modding) Fixed big craftables losing mod data when picked up.
(Modding) Fixed issue where going from one floor to another on horseback inside the Volcano would position the player incorrectly on the next floor.
Further changes were later released without changing the version number:
16 January 2021 (announcement)
Fixed exploit where Qi beans/fruit weren't removed from Marlon's item recovery service after the challenge expires.
Fixed a multiplayer fishing softlock added in 1.5.3.
1.5.2
Stardew Valley 1.5.2 was released on 8 January 2021.

Feature changes
You can now dismiss the level-up menu by pressing the ESC key.
Balance changes
Qi fruit can now be grown on the farm during winter.
Tools now track the previous two enchantments applied to them so they're not reselected when you reapply an enchantment.
Coral and other aquatic forage items are now included for the ""Botanist"" profession.
Added dark cowboy hat to Skull Cavern chest loot table.
You can no longer increase speed buffs using Qi seasoning.
Buff durations from Qi seasoned food/drinks are now 50% longer.
You can no longer complete the ""Danger In The Deep"" Qi Challenge by visiting the Skull Cavern.
Reduced price when selling cookout kits from 3000g to 80g.
Reduced price when selling ducks from 4000g to 1200g.
Fixed ducks not selling for the appropriate price.
Ginger Island fixes
Adjusted a journal scrap treasure map to better represent the in-game location.
Added failsafe to prevent players from warping to the upper-left corner of the southern island map.
Passing out in Qi's secret room no longer causes you to wake up on the mainland.
Fixed Junimos not harvesting crops if you spent the night on the island or when you're not physically present.
Fixed unable to place mini-fridges in the Island farmhouse.
Fixed unable to collect honey from bee houses on the island farm in winter.
Fixed garden pots on the island farm becoming watered on days when it's raining in the valley.
Fixed forage crops disappearing overnight on the island farm on Saturdays/Sundays.
Multiplayer fixes
Fixed most minigames appearing misaligned in split-screen mode.
Fixed a crash that could occur in the mermaid show in split-screen mode.
Fixed farmhands getting stuck if two split-screen players choose the same farmhand at the same time.
Fixed a crash when crab pots are removed by a farmhand.
General fixes
You can no longer sit on chairs if the game is currently pausing your character due to an animation (such as using a tool or kissing your spouse).
You can no longer instantly kill Fector as a zombie in Journey of the Prairie King.
Adjusted the rendering of very wide furniture items so that they do not extend too far past an inventory slot.
Fixed issue preventing 100% perfection score in the Joja route.
Fixed graphical issues with the post-perfection event.
Fixed coral not considered red instead of pale violet red for dyes, etc.
Fixed hearts dropped during Qi's Hungry Challenge not collectable if the inventory is full.
Fixed the level-up screen's OK button positioned offscreen in some cases.
Fixed the Key to the City not allowing you into Pierre's shop if you completed the game through the Joja route.
Fixed issue where large amounts of beets placed in a mill wouldn't produce the proper amount of sugar.
Fixed gifting-related special order objectives not correctly checking the minimum liked value of gifted items.
Fixed special order-related items stored in Junimo chests not properly removed once the special order expires.
Fixed fruit tree saplings and seeds sold at festivals not properly reflecting the profit margins setting.
Fixed sign items no longer showing their placement indicator once a fish pond had been built on the farm.
Fixed combined rings only showing the stat buffs from their first component ring.
Fixed combined rings not properly using their localized name.
Fixed a ring duplication glitch in the dye pot menu.
Fixed a crash and other issues related to obtaining the Iridium Krobus item.
Potentially fixed a random crash that occurs when going to bed.
Potentially fixed a crash in the mines.
Fixed a crash when fishing from the pond on your farm using magic bait.
Fixed a bug causing cheese cauliflower to not display in the collections tab.
Fixed breaking open geodes and artifact troves incorrectly counted as two item collects in the collections tab.
Fixed a crash that could occur when clicking in the scrollbar region of a shop menu when there are less than four items available.
Fixed issue where placing a bomb and sleeping could cause the fuse sound to play indefinitely.
Fixed issue where weeds could appear as batteries.
Fixed weapon cooldown timers no longer displaying on weapons in the shop menu.
(Modding) Fixed order/naming of tilesheets on the beach farm inconsistent with the other farm types.
Localization fixes
Fixed a missing event in Willy's shop from the Hungarian localization.
Fixed an issue with Leo's six-Heart event in the German localization. This fix is applied retroactively.
Fixed an issue where some weapons added in 1.5 would display an incorrect weapon name in the German localization.
Fixed crashes related to Lewis' phone call in various localizations.
Fixed various minor typos.
Various localization fixes.
1.5.1
Stardew Valley 1.5.1 was released on 24 December 2020.

Feature changes
The crystal cave puzzle now gradually gets easier after repeated misses.
Spouses no longer stand around looking at rug-type furniture items. This fixes a case where a spouse might stare at a floor divider, which could cause them to block the player's way through a narrow hallway.
Multiplayer fixes
Fixed exploit where you could regain stamina in bed in multiplayer even if the game was paused.
Fixed rare issue where the host player would warp to an invalid position if a farmhand had just completed a Community Center bundle.
Localization fixes
Various localization fixes and changes.
Fixed a crash when bombing the cave entrance next to the Field Office when playing in Spanish.
Fixed issues with Lewis's phone call in various localizations.
Fixed bug in the Spanish translations preventing Birdie's introduction event from completing.
Fixed bug in the German translations preventing male characters from completing Birdie's quest.
General fixes
When dismissing the forge menu, items that can't fit in your inventory are now dropped downward instead of upward to avoid items being dropped into the lava.
Fixed pets sometimes warping out of bounds.
Fixed being able to place objects in some parts of the void in the farmhouse.
Fixed ""spawn monsters on the farm"" advanced game option resetting when you choose a different farm type after changing it.
Fixed redeeming a stack of items at the Stardew Valley Fair granting a single item, instead of the whole stack.
Fixed an issue related to having a child named Leo or Kent, where existing friendship points for these characters would be transferred over to your children.
Fixed some new hairstyles clipping through hats.
Fixed issue where purchasing the master slingshot would give the player a normal slingshot.
Fixed unable to select the Beach Farm on the new game screen when playing with a controller at minimum resolution.
Fixed Leo available as secret santa if he's not in town.
Fixed being able to place objects in certain tiles that block player movement such as the landslide that blocks the path to the Mines.
Fixed issue where killing big slimes carrying hearts during Qi's Hungry Challenge, while wearing the burglar's ring, would cause the hearts to be collectable in the player's inventory.
Fixed a crash that occurs when demolishing cabins.
Fixed a crash that could occur overnight if you place the Auto-Petter anywhere that isn't a coop or a barn.
Fixed Maru standing on the wrong tile outside the farm on Saturdays if you're married to her.
Fixed hair #56 accidentally replaced.
Fixed Birdie's item trade quest removing all stacks of an item when they're given to their intended recipient.
(Modding) Fixed the return scepter not returning to overwritten farmhouse entry positions.
1.5
Stardew Valley 1.5.0 was released on 21 December 2020. Hotfixes were applied on 21 December 2020, 22 December 2020, and 23 December 2020.

New world area
1.5 adds an entire new region of the world, Ginger Island in the Fern Islands:
Added new locations, dialogue, events, minigames, puzzles, and a quest line involving multiple NPCs.
Added Leo, a new NPC with his own backstory, plot line, events, etc.
Added new secondary NPCs: Birdie, Gourmand Frog, and Professor Snail.
Added a volcano dungeon which changes each time you visit it similar to the mines.
Added Qi challenges which unlock rare or unique items.
Added an unlockable island farm and farmhouse area, where you can plant crops in any season but can't construct buildings.
Added an unlockable resort you can open to let villagers visit the islands, including new beach attire and schedules.
Added hidden pages of a lost sailor's journal to uncover his story and learn about the islands.
Added golden walnuts hidden throughout the islands, which can be used to unlock new areas and content.
Added golden coconuts, which Clint can crack open to find rare island items.
Added secrets and puzzles to discover around the island.
Added new enemies:
dwarvish sentry;
false magma cap;
hot head;
lava lurk;
magma sprite;
magma sparker;
magma duggy;
spiker;
stick bug;
tiger slime.
Added new cosmetic critters: crabs, caldera monkeys, overhead parrots, marsupial, and tropical butterflies.
Added new island obelisk building.
New farm features
Added a new beach farm layout.
Added ostrich as a farm animal.
The immovable dressers found in Farmhands’ cabins have been removed.
Added home renovations, which let you further expand and adjust the farmhouse after it's fully upgraded.
Beds are now normal furniture you can pick up, move around, and replace. (You can even have a house with no bed, but your spouse might have something to say about that.)
Once unlocked, the greenhouse can now be moved at Robin's shop.
The default shipping bin can now be moved or demolished at Robin's shop.
Added advanced game options, which can be used to customize a new game:
set seed value used in randomization;
choose default vs randomized community center bundles;
choose default vs randomized mine chests;
make red cabbage seeds guaranteed to sell at least once at the travelling cart in year one, so it's always possible to finish the community center in the first year;
change profit margins and cabin-related options that were previously inaccessible when creating a single-player farm.
can toggle monsters spawning.
You can now apply cosmetic paints to the farmhouse and buildings.
Ducks can now swim in water, and certain coop animals will now follow adults around.
Slimes now drink from slime hutch troughs in random order.
Other new content and features
Added tool and weapon enchanting.
Added ability to combine two rings into one.
Added special orders, more dynamic late-game quests which let you help villagers with their personal projects through a special orders board in town. These can include more varied goals and rewards, temporary world changes (like new enemies for the duration of the quest), permanent changes (e.g., new shop inventory), and post-completion events.
Added a second community upgrade.
Added a more difficult version of the mines and the Skull Cavern, which includes new and more powerful monsters along with better drops. These can be accessed late-game, and can optionally be toggled permanently using the Shrine of Challenge.
Added new enemies which appear in the difficult mines:
shadow sniper;
skeleton mage;
spider (jumps, often found near webs that can trap players and dust sprites);
prismatic slime (quest only);
putrid ghost (causes nauseated debuff);
blue squid;
royal serpent;
slime variants ('cool' and stacked).
Added new fishing TV channel.
Added new crops and trees:
mahogany tree (drops hardwood)
mahogany seed;
fiber seeds;
ginger (forage);
banana;
mango;
pineapple;
taro root (paddy crop);
New palm tree variant;
Qi fruit (available during special Qi quest).
Festival changes:
added new even-numbered year dialogues for Egg Festival;
added shops to the Dance of the Moonlight Jellies, Feast of the Winter Star, Festival of Ice, and Luau;
added new items to various festival shops;
Children now attend festivals.
You can now change your name and gender in the Wizard's basement shrine.
You now have a perfection rating which tracks the percentage of game content you've completed. Reaching full completion lets you buy golden chickens, adds a random Golden Witch event, unlocks access to the Summit with a new event, and adds new bird critters.
You can now further customize sprinklers with attachments:
enricher automatically applies loaded fertilizer while planting seeds nearby;
pressure nozzle increases watering range.
Added new craftable items and machines:
auto-petter auto-pets animals in a coop or barn (this keeps your animals content, but can't replace the full benefit of human touch);
bone mill turns bone items into fertilizer;
coffee maker brews a fresh cup every morning;
cookout kit lets you cook on the go;
dark sign displays an item without consuming it;
deconstructor destroys crafted items, but salvages their most valuable material;
farm computer scans the farm and displays useful information;
geode crusher consumes coal to break open geodes.
heavy tapper works twice as fast as a normal tapper;
hopper auto-loads items placed inside into the machine in front of it;
Junimo chests are linked to a global shared stash;
mini-obelisks let you warp between two obelisks when placed on the farm;
mini-shipping bins is a smaller shipping bin that can be placed outside the farm;
ostrich incubator when placed in a barn, hatches ostrich eggs into baby ostriches;
solar panel slowly generates battery packs when left in the sun;
statue of true perfection produces a prismatic shard each day;
stone chest is a variant of chest crafted with stone instead of wood;
telephone calls stores to check hours and inventory, and occasionally receive random phone calls (no effect on gameplay);
warp totem: island warps to the Fern Islands.
Added new food items:
bug steak;
banana pudding;
ginger;
ginger ale;
mango sticky rice;
piña colada;
poi;
taro root;
tropical curry;
squid ink ravioli (temporarily prevents debuffs).
Added new fertilizers:
deluxe fertilizer increases chance of higher-quality crops;
deluxe retaining soil always keeps soil watered overnight;
hyper speed-gro increases growth rate by at least 33%.
Added new items:
bone fragment;
Fossilized Skull, Spine, Tail, Legs, and Ribs and snake skull, snake vertebrae;
cinder shard;
dragon tooth;
tiger slime egg;
fairy dust can used on a machine to have it finish processing;
golden walnut;
magma cap;
monster musk causes more monsters to spawn;
mummified bat and mummified frog;
ostrich egg;
Qi gem;
Qi seasoning increases quality of cooked recipes;
radioactive ore and radioactive bar;
taro tuber;
horse flute summons your horse when outside;
mushroom tree seed.
Added new fishing tackle:
curiosity lure increases the chance to catch rare fish;
quality bobber increases fish quality;
magic bait catches fish from any season/time/weather for a given location.
Added new quest items:
Advanced TV Remote
Arctic Shard
Ectoplasm
Gourmet Tomato Salt
Pierre's Missing Stocklist
Pirate's Locket
Prismatic Jelly
Stardew Valley Rose
War Momento
Wriggling Worm
Added new rings:
glowstone ring provides both light and increased item collection radius;
hot java ring increases your chance to find coffee drinks when slaying monsters;
immunity band reduces chance of status debuffs by 40%;
lucky ring increases luck by +1;
phoenix ring restores some health after being knocked out once per day.
protection ring keeps you invincible longer after taking damage;
soul sapper ring restores a bit of energy after slaying a monster;
thorns ring damages enemies when they attack you.
Added new hats:
???;
dark cowboy hat;
deluxe pirate hat;
forager's hat;
goggles;
golden helmet;
Mr. Qi's hat;
pink bow;
Qi mask (secret);
radioactive goggles;
star helmet;
sunglasses;
swashbuckler hat;
tiger hat;
warrior helmet.
Added new clothing:
banana shirt;
ginger overalls;
hot pink shirt;
island bikini;
magenta shirt;
tropical sunrise shirt;
yellow suit.
Added new shoes:
cinderclown shoes;
mermaid boots;
dragonscale boots;
crystal shoes.
Added new weapons:
dwarf sword, dwarf hammer, and dwarf dagger;
dragontooth cutlass, dragontooth club, and dragontooth shiv;
infinity blade, infinity dagger, and infinity gavel;
iridium needle;
ossified blade;
some previously inaccessible items have also been made accessible.
Added new fish:
stingray;
lionfish;
blue discus;
legendary fish:
Glacierfish Jr.;
Legend II;
Ms. Angler;
Radioactive Carp;
Son of Crimsonfish.
Added new furniture:
35 paintings (many only found in festival shops or while fishing certain locations);
14 bed variants;
ten rugs:
blossom rug;
funky rug;
icy rug;
large cottage rug;
large green rug;
large red rug;
light green rug;
modern rug;
oceanic rug;
old world rug;
eight 'floor divider' rugs that can be placed between rooms to join visually different floor types;
five fish tanks you can put fish in (including an Easter egg involving hats);
decorative trash can;
gourmand statue;
iridium krobus;
large brown couch;
plain torch and stump torch;
squirrel figurine;
tropical chair.
Added a new 'sconce' furniture type with seven options.
Added new flooring:
rustic plank floor;
stone walkway floor.
Added new debuffs from enemies:
burnt (Speed -2, Defense -3);
darkness (dims lighting, making it harder to see in caves);
frozen (speed -8);
nauseated (prevents you from eating or drinking anything);
weakness (-20 Attack).
Added 17 new hair styles.
Added mail from Krobus with his own stationary.
Added new decorations and tweaks to many maps.
Added new Easter eggs:
Easter egg when you change your name at the Shrine of Illusions to include item spawn codes;
title screen 'happy face' secret;
new lucky purple shorts secret;
new strange capsule secret.
Emily now visits Sandy on her birthday.
Clicking the pigs at the Festival of Ice now plays a pig sound.
Quality of life changes
Added lost & found box in Mayor Lewis' house. This can be used to retrieve items donated to failed special orders, lost quest items and tools, items from offline players, hats from children that have been turned into doves, and items left behind in the Stardew Valley Fair grange display.
You can now sit on chairs (both placed furniture and chairs that are part of the map).
You can now place most furniture outside.
You can now talk to people while mounted on a horse.
You can now donate items of different qualities for the same community bundle ingredient.
You can no longer plant fruit trees on tiles they won't be able to grow on.
Improved game menus and HUD:
The social tab now shows whether you talked to an NPC today.
The cooking tab now shows the recipe for an item when you hover over it.
The cooking tab now fades icons for recipes you know but haven't made yet.
The cooking/crafting tooltips now show the number produced.
The inventory menu's organize button now combines partial item stacks.
The inventory menu for a chest now shows the Community Center button.
The shipment screen now shows the unit price of shipped items instead of displaying the shipped quantity twice.
The quest log now shows an arrow in the morning when you have pending completed quests.
Buff icons now subtly pulse when they're close to expiring.
Improved shop menus:
You can now press `ESC` or controller `B` to move the held item to your inventory (or drop it if you have no more inventory room).
While holding a purchase, the inventory now highlights items you can stack it with.
Improved sprinklers:
Sprinklers can now water slime hutch troughs.
Hoes no longer remove sprinklers.
Improved Journey of the Prairie King:
Progress can now be saved and resumed, so it can be completed in multiple sessions.
You now also replay the original difficulty even if you've already completed it. (Previously it would increase difficulty automatically, which is now a New Game+ mode.)
Improved game options:
added option to choose between multiple fish-bite chime sounds;
added option to mute farm animals and pets;
you can now scale the UI independently of the view zoom;
increased maximum zoom from 120% to 200%.
Improved various items:
The jukebox now has a ""Random"" setting.
Removing a crystalarium that isn't ready for harvest will now drop the gem that was placed in it.
You can now push chests containing items by holding the interact button on them with no tool equipped (the same way you could previously remove empty chests without using a tool).
Improved inventory sorting:
no longer changes tool order;
now sorts by quality too;
now sorts names in alphabetical instead of reverse alphabetical order.
Improved museum donation interactions:
Clicking an item now grabs one instead of the whole stack.
Pressing back while placing an item now returns to the inventory instead of closing the whole UI.
Other minor improvements.
Improved HUD:
Added a notification when you enter a farm building if an incubator is ready but the building is at max capacity.
The ""infestation"" indicator in the mines is now drawn alongside the floor number, rather than replacing it.
Balance changes
Combat changes:
Immunity now reduces the chance of status debuffs.
Changed special move cooldowns on daggers (6→3 seconds) and clubs (4→6 seconds).
The dagger special attack now pins the target in place until the last stab (which then knocks them back), so dagger hits are less likely to miss.
Reduced desperado profession's damage bonus from 3x to 2x.
Slightly improved dagger critical hit chance.
Crafting changes:
Changed skull brazier recipe (was 10 hardwood + solar essence + coal; now 10 bone fragments).
Repairing a fence now restores full fence health, instead of half the health of a new fence.
Farming changes:
Lowered the cost of ducks (2000→600g).
Doubled the value of duck feathers.
Slightly increased the duck feather spawn rate.
Fishing changes:
Fishing rod tackle no longer loses endurance when catching junk.
Catching a non-fish item no longer triggers the minigame.
Reaching an effective fishing level of 15+ now increases the rod casting range by one tile.
Mining changes:
Gem nodes now provide mining XP and can drop diamonds.
Gem node drops are no longer limited by mine level.
Item drop changes:
Stumps and hollow logs now have a 10% chance of dropping mahogany seeds.
Any monster in the Secret Woods now has a 10% chance of dropping mahogany seeds.
Skeletons now have 4% chance of dropping a bone sword.
Wilderness golems now drop rice shoots more often.
Some Skull Cavern monsters now have a small chance of dropping red cabbage seeds.
Pure-white slimes now drop diamonds and refined quartz.
Some containers now drop better items after reaching the bottom of the mines at least once.
Different drops now unlock on mine levels 60/80/100 and the first level of the Skull Cavern.
Reduced chance of lead rod drops on mine levels 60–79 (or Skull Cavern level 40+ before the previous fix), and added chance for shadow dagger and wood mallet.
Mine wood barrels can now drop basic retaining soil instead of sap.
Mine frost barrels can now drop quality retaining soil instead of sap.
Reduced chance of frost barrels dropping aquamarine, frozen geode, hardwood, jade, or equipment from 35% to 26%.
Shop changes:
Pierre will now sell his seasonal items year-round once you complete a certain new quest.
Added two more items to the Stardew Valley Fair star token shop.
Coconuts can be purchased from Sandy on Monday. This is now limited to ten per day.
The slingshot and master slingshot are now sold at the Adventurer's Guild.
Reduced workbench price (3000→2000g).
Reduced earth obelisk and water obelisk prices (1000000→500000g).
Machine changes:
Some machines' processing time was previously affected by the time of day. These have been standardized so they're always ready when the morning starts: bee house (every 4 days), mushroom box (every day), strange capsule (3 days), Tapper (depends on input), and worm bin (every morning).
Doubled star token rewards for the slingshot and fishing minigames at the Stardew Valley Fair.
Fertilizer in the greenhouse no longer disappears on season change in some cases.
The random stone owl and strange capsule night events are now much less rare.
Multiplayer changes
Added local split-screen multiplayer mode.
The join co-op screen now remembers the last IP you entered.
Farmhands can now move buildings through Robin's menu. The host can configure how this works (disabled, enabled, or only for a player's own cabin).
Using the return scepter now returns farmhands to their cabin's front door instead of the host's farmhouse.
Added various new chat messages when a player does something.
When viewing a shared event in multiplayer (such as the Community Center event, or Morris' introduction), you are no longer forcibly warped to the event location.
When the host player sees the year 3 event, Grandpa's Theme is now added to all players' jukeboxes even if they weren't in-game at the time.
Interaction changes
Reworked slingshot controls: it now aims at the cursor position, and is fired by holding and releasing the mouse/gamepad fire button. The previous mode (where you'd hold the button and pull back on the cursor to aim) can be re-enabled in the options menu if desired.
To simplify bulk actions like harvesting, holding down a button while moving will no longer repeat weapon special attacks, open/close barn/coop doors, or interact with boulders, chests, furniture, hollow logs, meteorites, shipping bins, or scarecrows.
Constructed shipping bins now have a click-to-ship hitbox that better matches the original map-based shipping bin's hitbox.
Flooring can now be applied by clicking on the tile the farmer is standing on. Previously, flooring had to be applied to a tile next to the farmer.
Purchasing recipes with a full inventory no longer shows a message that the inventory is full.
Clicking an empty tile right above an interactive element (like a machine or chest) now activates the element, similar to clicking below it in previous versions.
Trees chopped from above or below will now take into consideration the player’s horizontal position when falling to the left or right.
Clicking near the bottom-left corner of the screen no longer brings up the chat box.
You can no longer open the quest log by pressing the on-screen journal button if you're currently doing something.
You can now use the ""Y"" key to answer dialogue boxes for holes and exit ladders in the mines.
Controller improvements:
When buying/betting tokens in the Stardew Valley Festival with a controller, holding the number selection button now causes the amount to increase faster.
Events can now be skipped on the controller even if a dialogue box is on-screen.
Pressing B on a controller while on a specific quest page now returns to the quest list instead of closing the menu.
Pressing B on a controller while an item is held on the crafting menu now snaps to the trash can (similar to the inventory screen).
Other changes
Save names are now based on the farm name instead of the player name. (Saves originally created before 1.5 will continue using the player name.)
Penny and the Dwarf now like artifacts, all other NPCs dislike (instead of hate) them as gifts.
Improved dinosaur sleep sprites.
Characters now face you when you talk to them instead of when the dialogue box closes (in singleplayer).
On the final day of a tracked quest, the timer now says ""final day"" instead of ""1 day"" for clarity.
Added many changes for modders; see completed wishlist items and mod migration guide for details.
Cosmetic tweaks to various sprites.
Fixes for multiplayer
Fixed an issue where fences would degrade faster in Multiplayer.
Fixed issue where a farmhand crashing while completing the final bundle could permanently prevent the unlock from properly triggering. It is now unlocked the next time a character enters the area.
Farmhands are now properly positioned under the elevator instead of the ladder when using it to navigate the mines.
Fixed an issue where other farmers’ emotes would not playback properly if you were watching an event.
Fixed a minor issue where multiple players getting the free coffee gift at the Night Market at the same time could prevent anyone from receiving it.
Fixed the note from Grandpa reappearing for farmhands.
Fixed issue where cows in Haley's photoshoot event could be seen sliding around for farmhands. (Non-actor characters in events are now controlled by the host.)
Fixes for player interaction
Fixed rare controller and mouse input drops.
Fixed being unable to remount a horse after dismounting it behind a shipping bin.
Fixed issue where it would sometimes be impossible to name an animal with a controller because the onscreen keyboard would appear and disappear in the same frame.
Fixed character customization screen's hair color slider not properly updating when hair color is randomized.
Fixed some farm tiles incorrectly preventing buildings from being placed on them.
Fixes for visual or cosmetic issues
Adjusted the sorting of item ready indicators for tappers.
Unified when night tiles get applied to fix inconsistencies when windows change from light to dark.
The critters list is now cleared out overnight. This fixes an issue where having a Butterfly Hutch in your house and repeatedly sleeping without leaving would spawn endless butterflies in the house.
Improved various text:
Fixed some localizations using inches for fish measurements to reference centimeters.
Fixed mill description not mentioning rice.
Fixed typos in dialogue and events.
Fixed missing characters in Chinese and Korean fonts.
Fixed credits not showing localizer names correctly if the current language's font doesn't have the needed characters.
Improved many translations.
Fixed various cosmetic/layering issues with character shadows.
Fixed characters in events snapping to strange animation frames when skipping an event.
Fixed various instances where the camera would pan unnecessarily after changing locations.
Fixed greenhouse trees taking on seasonal appearances.
Fixed tooltip for purchasing edible but non-health-restoring items (like crocus) showing price outside of the tooltip.
Fixed a single-frame flicker in Haley’s 10-heart event.
Fixed a single frame flicker of the farm when starting a new game.
Fixed stamina bar showing sweat particles when fishing during the fishing competition.
Fixed the scythe showing the weapon ability cooldown effects.
Fixed the erroneous door tile visible on the south end of the standard farm during winter.
Fixed issue where unlocking multiple community center bundles at once would make the screen pan to the same room multiple times.
Fixed various issues related to the Festival of Ice map, like being able to escape the festival bounds or prematurely end the festival from certain tiles, and minor visual fixes.
Fixed terrain features showing an ""interact"" cursor when mousing over their tiles during festivals.
Fixed options page scrollbar sometimes going past the end of the scrollbar region.
Fixed various text overflow issues on the options page.
Fixed chests spawned on certain Skull Cavern floors being shifted down by 4 tiles.
Fixed tiling of…
floor tiles in the farmhouse so applied flooring in adjacent rooms appear contiguous instead of having hard edges;
wall tiles in the farmhouse to fix sorting of certain objects that extend outside normal tile boundaries (e.g., grass starter).
the fountain so that it has a more consistent appearance throughout the seasons;
Pierre's stand at the Egg Festival to fix layering issues.
Other bug fixes
Fixed crash when resizing game window in some cases.
Fixed rare crash on launch due to invalid game window size options.
Fixed Iridium Bat kills not counting towards Adventurer's Guild bat eradication goal.
Fixed an issue where the Mermaid Show reward was delayed incorrectly.
Fixed some events showing a dark blue screen after fading out when viewed during rainy days.
Fixed museum-related rarecrows not sold at the Night Market after being unlocked.
Fixed issue where non-wooden gates would revert to wooden gates after saving & loading a game.
Fixed being able to add staircases to the Luau.
Fixed an item duplication exploit related to chest organization.
Fixed a minor desync in character pathfinding that could happen when characters pathed to the JojaMart on modded games.
Fixed Penny walking through walls on rainy days if you've completed the community upgrade.
Fixed Penny's 4-heart event not accessible once you finish the community upgrade.
Fixed fences not collected correctly after a divorce or Penny's 14-heart event.
Fixed characters greeting you when you enter a location when they're not present.
Fixed characters you divorced still greeting you when you enter a location.
Fixed issue where an NPC spouse fails to pathfind when a player/NPC is blocking the front door when they check, causing them to stand in place instead.
Fixed crops sometimes growing a day slower than they should.
Fixed applying flooring for the first time in an upgraded house sometimes causing the flooring in the kitchen to switch to the default wooden flooring.
Fixed issue where riding a horse while travelling from one location to another diagonally would repeatedly warp back and forth between the two locations.
Fixed watered slime hutch troughs emptied when you load a save. (This mainly affects loading a mid-day save on mobile.)
Fixed the community center not properly loading the refurbished map variant on game load. This caused characters like Maru to path incorrectly in them if the player had not visited the Community Center during that playthrough.
Fixed the weekly friendship boost for giving an NPC two gifts not applied if you also gave them a third gift for their birthday.
Fixed overnight lightning not randomized correctly, so either every overnight lightning would strike or none of them would.
Fixed issue where stones, wood, and weeds could spawn on top of terrain features when a new year begins.
Further changes were later released without changing the version number:
21 December 2020 (appended to 1.5.1 post)
Fixed a crash when interacting with the Junimo notes in the Community center when playing in non-English.
22 December 2020 (appended to 1.5.1 post)
Fixed malformed item data causing the game to crash when playing in Turkish.
23 December 2020 (appended to 1.5.1 post)
Players can now choose another player's character in local multiplayer. This allows players continuing multiplayer farms in local multiplayer to resume their old farmers.
Fixed shared events in multiplayer potentially putting players out of bounds.
Fixed the am/pm display not displayed properly in non-English languages.
Various localization fixes and changes.
1.4.5
Stardew Valley 1.4.5 was released on 11 February 2020.

Bug fixes
Fixed an issue on Windows where the game would initialize incorrectly and start without audio.
Fixed an issue where passable objects, such as torches, could block you from attacking enemies that are standing nearby.
You can now reclaim the ancient seed crafting recipe from Gunther if you donated an Ancient Seed artifact and collected only the seed and not the recipe.
Fixed an issue that would allow animals to walk on certain water tiles alongside some bridges.
Wallpapers can no longer be used in place of items to be processed into artisan goods.
Fixed the Lewis statue letter not granting its reward in the Simplified Chinese localization.
1.4.4
Stardew Valley 1.4.4 was released on 31 January 2020.

Changes
Adjusted dropped item pickups so that they're more responsive for clients in multiplayer and will ""rubber band back"" to their previous locations less frequently.
Adjusted item collection code so that machines tucked in corners can be refilled without using cursor mode.
Fixed Elliott's 14-heart not properly working in non-English languages.
Fixed a data entry issue that caused some fish ponds to use incorrect data.
Fixed the Shrimp Enthusiast Shirt applying the wrong shirt artwork.
Fixed a soft-lock when watching the 2nd Fall movie in a non-English languages.
Fixed the cursor not appearing in the level up profession selector if the Controller Style Menus option is toggled off while using a controller.
Unsuccessfully crafting an unstackable item while already holding an item on your cursor no longer grants you credit for crafting it.
Fixed an issue where garden pots would consume seeds without planting them if they were planted from more than a tile away.
Fixed the color selector sliders on the farmhand creation screen having incorrect navigation on controller.
Fixed the logic for fruit tree obstruction checking the wrong tile.
Fixed the dagger swipe sound effect repeating an extra time in multiplayer if another player is in the same area.
Krobus will no longer get jealous if you gift characters you're dating after he moves in.
Penny now leaves garden pots alone in her 14 heart event.
Fixed an issue that could cause Sam's 6 heart event to soft-lock.
The game now re-issues the player the Qi's Challenge quest if they had previously opened the mail, but dismissed it without accepting the quest.
Items placed in an ex's room are now collected and placed in a chest after divorce.
You can no longer give away quest items or non-giftable items during the Feast of the Winter Star.
Adjusted some NPC gift reactions (Vincent and Jas now hate triple shot espresso, the Dwarf now loves lemon stone, and Sam now likes concession stand Joja Cola).
Adjusted Desert map so that crab pots placed in the water no longer render incorrectly, and objects can no longer be placed on top of the Desert Trader.
Removed catfish from Willy's fishing quests during Winter, as it's impossible to catch one without a rain totem.
Fixed a crash that could occur on the host when a client connects to a game that was set to Friends or Invite Only that is now being hosted on a platform that doesn't support those online modes.
Fixed incorrectly looping ambient noise in the Deep Woods at night.
Fixed an issue where the Japanese localization's dialogue for a spouse watering your crops would incorrectly show both gender variants of the text.
Fixed the Simplified Chinese localization incorrectly showing sunflower seeds as a Fall only crop.
Removed the ‘<‘ from the Simplified Chinese localization of the ""Pet loves you"" dialogue.
Fixed an issue where Junimos would show an empty text bubble when bringing a bundle to the Junimo hut after completing a bundle in Simplified Chinese or Korean.
Fixed an issue where viewing the Junimo note before learning to read it would cause certain text to permanently display much larger in the Simplified Chinese, Japanese, and Korean localizations.
Filled in some missing characters in the Korean fonts. This fixes some instances where an asterisk appears instead of a Korean character.
Fixed a minor typo in Grandpa's note in the Korean localization.
1.4.3
Stardew Valley 1.4.3 was released on 13 December 2019.

Bug fixes
Fixed an issue where you could collect multiples of a bundles reward in the Community Center if you closed the menu without collecting them.
Fixed an issue where naming your pet the name of an NPC could have your pet appear on the calendar on that NPC’s birthday.
Fixed an item duplication exploit when using the add to existing stacks button on an inventory with a full stack.
Made some fixes to the Turkish localization.
Fixed a bug in the crafting menu that could cause extra resources to be consumed in certain situations.
Adjusted the Four Corners farm map to fix layering issue with buildings.
Fixed a bug where you could enter the Wizard's Tower before unlocking the Community Center.
Taking a map screenshot while the option to show menu backgrounds is on will no longer render the menu in the screenshot.
Fixed an issue causing certain wallpapers to grant a Lost Book when selected in the catalogue.
Fixed an issue where you could get your grange score immediately after asking Lewis to judge your grange during the Stardew Valley Fair.
1.4.2
Stardew Valley 1.4.2 was released on 4 December 2019.

Changes
Reverted placement rules introduced in 1.4.1 which prevented players from placing flooring or torches on their spouse's porch tiles. Instead, spouses now ignore flooring and will ""pop off"" any torches that are placed on those tiles when they move there in the morning.
Bug fixes
Fixed the crane game crashing when it loads on Mac.
Fixed workbenches not pulling items from chests that are on rugs.
Fixed Robin staying in bed if she was upgrading certain buildings on game load.
Fixed a bug where buying a magic rock candy, exiting to title, and then reloading the game would cause the candy to not re-appear in the shop.
Fixed a crash when mashing the dialogue advance buttons while transitioning between maps during an event.
Fixed another way the club smash could cause the player to get ""stuck"" holding out a weapon.
Fixed some issues where non-user-initiated mouse movements could cause changes in mouse button states to not register.
Fixed a potential soft-lock if you passed out on another player's bed.
Fixed the screen being partially faded out when Demetrius comes to ask about the farm cave.
Fixed an issue where characters would greet you via speech bubble even if they weren't in the same location (e.g., Elliot welcoming you into his shack even though he's standing at the beach).
Fixed being able to perform certain actions (like using a return scepter) during overnight farm events.
Fixed farmers who are knocked out while holding an item not properly showing the knocked-out animation.
Fixed an issue where the tool being upgraded at Clint's could be set to an invalid value, causing Lewis to incorrectly send you a set of tools every night.
Clicking the emoji menu toggle button on gamepad no longer shows the onscreen keyboard.
Adjusted rumble on third-party controllers. This may not fully solve issues on certain third-party controllers, but will at least prevent states where the rumble is stuck on.
1.4.1
Stardew Valley 1.4.1 (previously known as 1.4.0.1, but renamed for compatibility with SMAPI) was released on 2 December 2019.

New features
Added Gamepad Mode to the options menu. This has three values: ""auto"" (default) switches between keyboard/mouse depending on the last input; ""force on"" forces the game to use gamepad logic, similar to earlier versions of Stardew Valley; and ""force off"" disables the gamepad and can be used if you only play the game using keyboard/mouse.
You can now buy the museum rarecrows from the Night Market after you've unlocked them.
Some non-spouse NPC's now have custom movie ticket acceptance dialogue (in English only).
Balance changes
Explosive ammo now costs 300g each in the Adventurer's Guild, won't appear until you've unlocked the crafting recipe, and now only explodes with a 2-tile radius instead of 3.
You can now only buy one piece of magic rock candy per Thursday at the Desert Trader.
Iridium ore abundance now increases much more slowly beyond level 100 of the Skull Cavern.
Weapon cooldowns now only happen if game time should pass.
Other changes
You can now buy recipes with a full inventory.
Penny's 14-heart event no longer removes placed dressers. Furniture that was supposed to be placed in an occupied tile is now added to the same chests Penny puts your objects in.
Vincent now loves snails.
Adjusted shorts easter egg to give precedence to any normal interactions with the NPCs it affects (gifting, completing a quest, etc).
Slightly optimized debris code.
Bug fixes
Fixed farmhands' separate wallets resetting to 500g if the host was playing on Linux or Mac.
Fixed the incorrect ordering of NPC gift tastes, so tastes should now match 1.3.
Fixed trash bear appearing on festival days (which could cause a potential crash).
Fixed an issue where reclaiming the insect head, Neptune's glaive, forest sword, or carving knife from Marlon would cause Clint to appear to be upgrading that weapon, losing any tool already being upgraded.
Fixed problem harvesting crops with the golden scythe.
Fixed being able to warp into the sewer on your horse, causing you to warp into the void.
Fixed an issue allowing torches and flooring to be placed on the spouses's porch position, so they couldn't come outside.
Fixed the golden scythe still appearing on the reaper after you've already received it.
Fixed a minor issue where players who have connected to a game and are creating a character while an achievement triggers would send a message saying ""- has earned the '(Achievement Name)' achievement.""
Fixed a hole in the refurbished saloon room, which let players walk out of the map boundaries.
Fixed an issue where a farmhand entering a freshly built cabin could cause the farmhand that owns it to spawn in the upper-left corner of the main farmer's farmhouse.
Fixed fish pond silhouettes being incorrect after clearing the pond in multiplayer.
Fixed a typo causing plant seeds being removed from the inventory when unsuccessfully attempting to plant them outside of the farm.
Fixed pre-1.4 untyped ""Honey"" items that were misnamed ""Wild Honey""; they're now just converted to ""Wild Honey"" that stacks with other ""Wild Honey"" items.
Fixed a crash when tree fertilizer recipe is added to a save that already has it.
Fixed the dove subplot enemy leaving visual trails on the host's machine regardless of the location they were in.
Fixed non-synchronization of items recovered from Marlon at the Adventurer's Guild.
Fixed the display name of flounder in Russian being the same as halibut.
Fixed a botched after-movie dialogue from Evelyn.
Fixed the direction of the fold on the Gi clothing items.
Fixed tea saplings not being placeable on certain tiles on the farm.
Fixed a crash when checking the calendar while engaged to another farmer that is currently disconnected from the game.
Fixed problem where you could soft-lock a shop menu in an edge case scenario.
Controller fixes:
Fixed some inconsistencies with cursor placement when item stowing is on.
Fixed an issue where using the trigger buttons to swap pages in the Junimo Bundle menu while holding an item would cause it to be lost.
Fixed an issue in the quest log where if you moved the cursor right from the ""back"" button when viewing a quest description on the second or higher page of the quest log, the cursor would move to an invalid position.
Highlighting a dropdown menu option in the options screen on the controller now snaps to the drop down button, no longer obscuring the text.
When a dialogue question is asked, the first selectable option is now selected by default in controller mode, regardless of whether the controller-style menus option is enabled.
Corrected the fix for the Stardew Valley Fair festival's petting zoo area appearing incorrectly if certain post-game conditions had been unlocked.
Added a graceful fail state to the function that gets a wedding for the day in case there's a completely invalid farmer ID in the farmers list (potentially from a removed cabin).
Players that could have missed increases to their max health, crafting recipes due to skipping combat skill levels will now earn them on level load.
Pending level-ups are now removed from characters as they are applied, instead of all at once at the end of the night. That ensures that a character who gets disconnected/crashes during a level-up can now reapply their level-ups the next time they are connected.
Adjusted the requirements to be able to respec a skill at the Statue of Uncertainty to allow users who have ""missed levels"" to reclaim their missed perks levels using it.
Potential fix for switching over to the scythe after using the club slam repeat quirk causing the next used tool to soft-lock the player in place.
Fixed various typos.
Fixed crash if a location no longer exists in the game, for players with residual mod data in their save file.
Fixed the /friendAll debug command granting friendships to NPCs that aren't friendable, which could possibly cause issues on any game mechanics that randomly select a friend (e.g., daily quests).
1.4
Stardew Valley 1.4.0 was released on 26 November 2019.

New content and features
Added movie theater unlocked in late game, with related content and features.
Added 14-heart events for every spouse.
Added new events and dialogue (including a new heart event for Caroline).
Added clothing items equipped on the player (replaces former clothing appearance options).
Added clothes tailoring and dyeing.
Added 24 new hair styles, including bald heads.
Added Four Corners farm map (meant for co-op, divides the land into four areas with their own perks).
Added fish ponds to breed fish and produce items.
Added new items:
181 shirts;
35 hats;
14 pants (including dresses, skirts, and shorts);
2 boots;
38 decorative items obtained in various ways (e.g., new events);
17 new flooring options;
2 new secret notes;
two fish: flounder and midnight carp;
two rings: crabshell ring and napalm ring;
artifact troves (can be broken open by Clint to yield artifacts);
caviar, roe, and aged roe;
dark sword;
deluxe scarecrow (recipe given when you collect all rarecrows, has double the radius);
dinosaur mayonnaise (processed from dinosaur eggs);
golden scythe;
grass starter recipe (purchased from Pierre);
magic rock candy;
mini-jukebox (place anywhere on the farm or in farm buildings to play previously-heard music);
mini-fridges (place inside to extend your fridge capacity);
rice crop;
seafoam pudding (fishing level 9 cooking recipe);
shrimp cocktail (recipe learned from the Queen of Sauce episode on Winter 28 Y2);
squid ink;
sunflower honey (produced by beehouses);
tea bushes, tea leaves and green tea;
training rod (easier fishing but only catches common fish);
tree fertilizer (non-fruit trees grow more quickly);
triple shot espresso;
void ghost pendant;
warp totem: desert;
wilted bouquet (crafted from a bouquet), which lets you break up with NPCs you're dating;
workbench (lets you craft with ingredients in adjacent chests);
wood chipper (breaks hardwood and driftwood into wood).
Added new mine content:
a quarry mineshaft dungeon with new haunted skull and sludge monsters, and a Golden Scythe;
prehistoric floors in the Skull Cavern with a new pepper rex monster;
rare alternative floors in the 1-120 mines after unlocking the quarry similar to the quarry mineshaft dungeon.
Added shed upgrade (doubles the interior size).
Added cat/dog breeds selectable from the new-character customisation menu or the Shrine of Illusions.
Added Krobus as a potential roommate if you're unmarried.
Added a desert trader that sells new items.
Added Trash Bear to clean up trash around town in year 3+.
Added 4 new monster eradication goals & prizes.
Added 4 new museum reward levels (for donating 35, 70, 80, and 90 items).
Added trash can upgrades purchasable from Clint (gives 15-60% of trashed items' value as money).
Added a new sunroom in Pierre and Caroline's house.
Added the ability to perform various emotes through a new menu (default key is Y).
Added a new farm building: desert obelisk.
Added winter flooring sprites.
Added hidden subplot if you've turned children into doves. (Spoilers: check the television on Fall 26, then visit the Witch's Hut for a recurring effect and fish on the Four Corners farm for a one-time effect.)
Added experimental support for letting farmhands move buildings. Use the /movebuildingpermission command to toggle between on (farmhands can move any building), owned (they can move their own cabins or buildings they've built themselves), or off (default).
Added a new trash bin in front of JojaMart.
Added map export feature (except on 32-bit Linux), accessed via a button in the options menu or the /mapscreenshot chat command. Screenshots are saved in the appdata folder on Windows, and ~/.local/share/StardewValley/Screenshots/ on Linux; click a button in the options screen to open it. When using the command, you can optionally specify a filename and percentage size like /mapscreenshot test 25.
Added VSync option. Disabling VSync may improve overall framerate at the expense of frame rate stability.
Added an NPC gift log accessed through the social tab (tracks birthdays, their liked/disliked gifts as you discover them in-game, etc).
Added 'advanced crafting info' option which shows more info on the crafting menu (including number of times crafted and the number of each ingredient available).
Added OST files for new music tracks.
Added new easter egg on the title screen.
Junimo Kart has been completely redone and is now actually fun.
Dressers can now be used to store clothing, hats, shoes, and rings.
When you catch a silver or gold-quality fish, a 'perfect' catch now increases the quality by one. (This is the only way to get iridium-quality fish.)
You can now put hats on your children (once they can walk).
You can now play Elliott's piano.
You can now put gemstones in Junimo huts to affect the color of new Junimos.
Divorced spouses no longer attend your wedding.
Divorced spouses no longer treat their exes normally during Festivals.
Auto-Grabbers now work in the coop too.
Successfully parrying a slime attack now prevents the slimed debuff.
Seaweed can now be foraged along the bottom shore of the tidal pool beach.
The adventurer's guild now sells any boots you already found in mine chests.
You can no longer load saves created in a newer version of the game than you have. (This will only affect future versions of the game.)
Multiplayer changes
Added optional separate money in multiplayer.
Added support for private chat messages.
Added more multiplayer ""server messages"".
Added a /ping chat command which prints the current ping to the host (for farmhands) or to each farmhand (for the host).
Added a /kick <farmer name> chat command.
Added /ban and /unban chat commands. Bans are per-farm, and the command can be called with a farmer name, user ID, or IP address. in all cases it will ban the user, not the farmhand character.
Added multiplayer synchronization for…
daily luck;
bulletin board quests (in most cases);
trains;
lightning bolts;
mine fog events;
lost book collection;
merchants' limited stock;
drum/flute blocks;
adjustments to the fishing bobber's position while it's midair;
the animation when a player has a fish on the line.
When creating a new multiplayer form, the Starting Cabins option now defaults to 1 instead of None.
Each player now has a separate mailbox and spouse porch area.
Each player can now build a separate cellar.
When a player drops an item in multiplayer, other nearby players now have priority for picking it up.
You can now see other players' scores during certain festivals in Multiplayer.
Quests in multiplayer now set difficulty based on the highest-level player.
In the Skull Cavern, mine shafts now drop players to the same level in multiplayer.
In multiplayer, many random checks now use the team's average luck instead of only the host's luck.
If connecting to a multiplayer server fails, the game will now retry internally before giving up.
The reward for completing the Bulletin Board bundle is now applied to all players in multiplayer.
Moving a Shipping Bin no longer leaves behind its lid for other players on a multiplayer farm.
Quality of life changes
Added ability to rearrange the museum artifacts (without donating a new one).
Added ability to reread received letters anytime via the collections tab.
Added ability to rotate the toolbar (using Tab and Ctrl+Tab by default).
Added ability to fill existing stacks in a chest from your inventory.
Added notification when a tool being upgraded is ready.
Added tabs to the Catalogue and Furniture Catalogue.
Added current Qi coin balance to Calico Jack minigame UI.
Added support on Linux for pasting invite codes via an onscreen button (requires xclip).
Added upcoming weddings to in-game calendar.
All events should now be skippable.
Gates can now be attached to one piece of fencing (instead of needing fences on both sides), which allows for double-width gates.
The hallway to the spouse's room in a two-story farmhouse now matches the bedroom flooring.
Changed interaction cursor when pointing at farm animals you haven't pet today.
Giving datable NPCs a gift no longer makes your spouse jealous unless you're currently dating them.
You can now construct/move farm buildings onto tilled dirt and tree seeds.
Trying to construct/move farm buildings onto an animal now poke them out of the way.
Collapsing in the mines no longer makes you forget levels.
After collapsing in the mines and losing items, a list of lost items is now shown and you can pay Marlon to recover one of them.
You can now remove horse hats (by interacting with the horse while holding another hat).
You can now trash copper pans and slingshots.
You can now buy copper pans from Willy's shop after receiving the first one.
You can now stack craftable items in inventories (like kegs or furnaces).
You can now attach baits, tackles, etc. to your fishing rods directly from a treasure chest.
You can now shift-click items to move them out of the toolbar.
You can now hold down the interact button without retriggering the eat item prompt. That lets players quickly refill rows of kegs/preserves jars without being interrupted by the prompt.
You can now go to sleep while holding an item.
You can now pause Junimo Kart by pressing Enter or P.
You can now play Junimo Kart entirely with the keyboard.
You can no longer place iridium-quality items in casks.
Made it easier to collect milk/wool from farm animals. Animals now have a larger hitbox, and using shears/pail while facing multiple animals now finds the best match instead of the first one.
Interacting with a Mill that only has one type of item in it now automatically collects the item instead of opening a chest menu.
Pointing at an inventory item needed for a bundle now makes the Junimo bundle button pulsate.
Pointing at an item to sell in the shop menus now shows the ""Gunther can tell you more"" text if the item hasn't been donated yet.
Mushroom tree sprouts are now distinguishable from other trees.
Wild Bait now provides a chance to catch two fish at once.
Pets no longer spawn in positions that block the farmhouse door or corridors.
When exiting a Junimo bundle menu, the cursor highlights the bundle that was exited.
Farm animals standing on crops no longer prevent the crop from being harvested.
A message now appears when fruit tree growth is prevented by a surrounding obstruction.
When an NPC walks over a chest, it will now dump its contents out instead of destroying them.
When viewing a bundle, inventory items for completed slots are now grayed out.
Jumping down a mineshaft just above level 100 will no longer drop you below level 100 in the Skull Cavern.
Players can now ""push"" through NPCs at festivals, to avoid getting trapped in some cases.
Queen of Sauce reruns will now choose an already-aired recipe that a player doesn't know.
The animation played when finding a new lost book is now only played once per player.
Unclaimed bundle rewards can now be picked up from a Junimo bag in the Community Center.
Wild tree seeds can now be placed in any diggable tile outside of the farm without needing to hoe it first.
When you dismiss the map by clicking on it, you're now returned to the previous menu tab (if any).
Wilted trellis crops no longer block movement.
The Hat Mouse now sells hats you've won in festival competitions.
Moving the cursor over a crab pot while holding the action button no longer picks it up.
Moving the cursor over a farm animal while holding the action button no longer opens the inspection menu (so it's easier to pet animals).
Moving the cursor over a scarecrow while holding the action button no longer checks it (so it's easier to harvest large fields).
Improved the 'Organize Inventory' logic. Now properly handles empty spaces on Linux, and sorts stacks from highest to lowest quantity.
Changed processing time of tapped mushroom trees so that they're harvestable in the morning (instead of midway through the day).
Obelisks now have a 3x2 footprint instead of 3x3. (Their sprites are unaffected.)
Dropping an item when collecting rewards from Gunther now throws the item downwards instead of upwards, to prevent players without magnet rings from dropping items into out-of-reach positions.
Balance changes
Fruit trees no longer need the surrounding tiles to be empty to increase in quality once fully grown.
Fruit trees are no longer blocked from growing by non-colliding objects (notably artifact spots).
Mushroom trees no longer drop wood (and debris chunks are now white instead of brown).
You can now increase friendship by talking with NPCs at festivals.
Trains now drop more items.
Some items no longer appear in random shop stocks: void eggs, void mayonnaise, and sweet gem berries.
The quarry now spawns oak & maple trees.
Charcoal kilns now require 2 copper bars (instead of a gold bar).
Cheese now sells for more.
Cloth now drops more often from mummies.
Dressers now cost more.
Looms can now produce multiple cloths when higher-quality items are input.
Pancakes can no longer be bought from Krobus before winter Y1.
Sturdy ring is now easier to craft.
Journey of the Prairie King has been rebalanced.
Calico Jack and slot machines in the casino now statistically favor the player. (Previously the player was more likely to lose.)
The Forester profession now causes 25% more wood to drop from trees/stumps/logs, instead of raising the value of wood by 50%.
Speed-gro and retaining soil can now be applied to crops anytime.
Basic and quality fertilizers can be applied to seeds (but can't be applied once a seed has sprouted).
Rebalanced the frequency that secret notes are dropped.
Fishing tackle now sells for less once damaged, depending on its remaining durability.
Sweet gem berry can no longer be bought from the traveling cart (you can only buy the seeds).
Bean hotpot now grants max energy +30 and magnetism +32, instead of showing ""max energy +2"" but granting nothing.
Spring onions quality is now determined at the start of the day.
The Legend can now only be caught once.
Made bottom edge of fishing bobber bar slightly more generous.
The effect of fishing level on fish size no longer caps at 10.
Debris now respawns at the start of spring in Cindersap Forest, Town, and the Railroad.
Reduced cases of items splashing into water when they're visually on dry land.
Lightning rods are now always harvestable immediately the day after being struck.
Wheat now has a 40% chance to also drop hay on harvest.
Wild bait can now be obtained from fishing treasure chests if you know the crafting recipe.
Fixed the burglar's ring not affecting some monster loot items (those added programmatically).
Reduced recipe prices in the Stardrop Saloon.
Improved controller support
Added an on-screen keyboard to type into chat or text fields using the controller.
Added ability to stow an item when playing with the controller, freeing up your hands to interact with NPCs without accidentally gifting them items.
Added a left/right bumper hotkey in inventory menus. when the new 'add to existing stacks' button is available, pressing the hotkey will automatically snap to that button for easier inventory consolidation.
You can now highlight the list of required items in the Junimo bundle screen while using a controller, so you can see a tooltip with the item's description.
Improved controller navigation/use in…
the museum donation screen;
the Load Game and Join/Host Coop Game menus;
the bundle screen (no longer need to scroll all the way to the right to access the second row);
chest and item grab screens;
crafting menu.
Improved switching between keyboard/mouse and controller mode. For example, having a controller plugged in no longer snaps mouse input to buttons.
Improved placement logic with a controller (planting seeds, placing furniture, etc).
You can now direct your fishing casts with a controller.
The buffs display tooltip is now hidden if the mouse cursor isn't visible.
Fixed cursor snapping to upper-left item when clicking the organize items buttons on the controller.
Fixed D-Pad not correctly selecting dialogue options.
Fixed an issue making the animal pregnancy disable option unselectable with a controller.
Fixed navigation of the languages menu using a controller.
Fixed an issue where rearranging artifacts in the museum didn't work with controller-style menus.
Fixed various issues related to selecting dialogue choices with a controller.
Fixed being able to move the cursor on the shipment screen after the screen is dismissed with the OK button on a controller.
Fixed cursor slightly misaligned on the skills screen when you first enter it using a controller.
Fixed various issues related to the display of the cursor in the level up screens with a controller.
Fixed some issues with controller navigation of the items in the wallet section of the skills tab.
Fixed controller navigation of dropdown lists in the options screen.
Fixed an issue where the controller's left thumbstick was moving the mouse cursor around while playing minigames.
Fixed an issue where using the face buttons to aim shots in Journey of the Prairie King on the controller would sometimes cause the shots to go in the wrong direction and cause the player to get stuck shooting.
Fixed chest color picker buttons being selectable if the color picker isn't shown.
Other changes
Various copyediting, improved text, tweaked sprites, and tweaked map tiles.
Made some optimizations that may improve performance on some machines/platforms or in some cases.
Improved many translations and fixed missing font characters in Korean.
Changed midnight from 12:00 to 0:00 in Japanese.
Added an open sprite to the fridge.
Adjusted the mail received after collapsing to more accurately reflect timeline changes in the game.
Adjusted a dialogue option in Penny's 2-heart event to be more considerate of George's perspective.
Removed the Junimo Note/Community Center Button from non-inventory screens.
Improved Elliott's cabin interior design a bit.
Items found in the trash now pop out of the trash instead of going directly into your inventory.
Updated credits.
In single-player, the mines now reset as soon as you leave instead of waiting for the next 10-minute update.
NPCs now destroy trees in their path (and will trample wild tree seeds underfoot).
NPCs now close their eyes and do a sleep pose when they go to bed.
Players now close their eyes when they go to bed.
Penny no longer randomly reveals Pam's taste for alcoholic items.
Fish sold to Willy are now resold in his own shop (fish are no longer sold at Pierre's).
Tweaked hoed dirt color on the beach in fall.
Made David's cage look more appropriate for guinea pigs.
Reduced splash effect of small cosmetic debris to make it easier to distinguish splash of actual items.
Added animation when digging through trash.
Adjusted sound made when picking up forageables, eggs, etc.
Added changes for modders.
Added log for unexpected network disconnects (in a separate DisconnectLogs folder).
The ordering of the items on the collections page is now consistent between languages.
Fixes for gameplay
Dismissing a letter with unclaimed items now automatically picks up the items.
You can no longer activate the Statue of Uncertainty if you haven't met the level requirements.
You no longer take damage from monsters while passing out at 2am.
Fixed various exploits, including…
opening the journal while fishing paused time but still caught fish;
opening the journal while dying skipped the death event and prevented losing items;
you could use an incorrect item in some cases (like using a wallpaper to obtain the galaxy sword, incubate a dinosaur egg, or when crafting);
you could predict the mushroom level pattern in the mines;
you couldn't be damaged while the eat confirmation prompt was up in multiplayer;
the invincibility timer after taking damage didn't decrease in multiplayer if a menu was open;
right-clicking a fishing rod attachment in the inventory reset its durability;
using glitches to leave the spa while in swimming mode would result in infinite energy/health regen;
you could obtain up to 109 statues of perfection by storing each one in a cabin's inventory chest;
items of different qualities could be combined into one stack when buying from Pierre;
you could sell items to Pierre's at an upgraded price (e.g., salmonberries with the Bear's Knowledge perk) and buy them back at their normal price. He now resells them at the same price he paid.
Fixed players getting stuck…
if you cast a fishing rod just after opening a treasure chest in the mines;
in the blocking pose when you use a sword's special ability in rare cases;
on top of a mine ladder if multiple ladders were spawned;
in the traveling merchant's cart when dismounting from a horse in some cases (or getting your horse stuck that way);
on top of Abigail when playing the minigame in her two-heart event.
Fixed rare issue where no ladder would spawn on a mine floor.
Fixed monsters spawning too close to the start of a floor in the mines.
Fixed mummies dealing damage while downed.
Fixed invisible, interactable elevators on treasure floors of the Skull Cavern.
Fixed various issues where using bombs could cause items to spawn at the main player's current location instead of the location where the bomb was placed (e.g., artifacts found via secret notes, fruit tree items, giant crops, mystic rocks, hardwood, crystals, and cave grass).
Fixed issue where weeds could be spawned on the tile directly beneath the elevator in the mines.
Fixed objects on the farm sometimes skipping their daily updates, which could cause issues like crops surviving a day into Winter or batches of crops not maturing at the same rate.
Fixed various cases where an entire stack of held items was incorrectly consumed.
Fixed certain artifacts not spawning as intended.
Fixed cooking ingredients spread between your inventory and fridge not correctly counted together.
Fixed issue where leveling up would incorrectly affect the related skill for the rest of the day (i.e., common trees wouldn't drop seeds after leveling up foraging).
Fixed artifacts appearing on grass after winter turns to spring.
Fixed bug when getting a JojaMart membership shortly after completing the Community Center.
Fixed weed item obtained from breaking a mushroom seed or shaking a mushroom tree.
Fixed Livin' Off the Land announcing the start of blackberry season on the wrong date.
Fixed certain placeable items being placeable on tiles occupied by other furniture.
Fixed a few missing boundary tiles in certain areas, including in the Stardew Valley Fair.
Fixed player's fishing level and bait not taken into account for the wait time if the first nibble was missed.
Fixed Tiller profession bonus sometimes not applied to combined foraged and grown grape stacks.
Fixed Prospector profession not applied to rocks destroyed in the mines.
Fixed forage sometimes spawning out of bounds.
Fixed removing tappers from trees in certain ways making them become un-choppable.
Fixed fishing cast distance not determined when the bobber hits the water (previously set at the end of the cast).
Fixed TV weather forecast not always matching actual weather.
Fixed Queen of Sauce sometimes airing a new recipe on the Wednesday before it's scheduled on the following Sunday.
Fixed Queen of Sauce repeatedly airing the Stir Fry episode at the end of year 2 and the beginning of year 3.
Fixed players playing a minigame at 2am not properly quitting the minigame and passing out.
Fixed players able to continue fishing or charging tools past 2am.
Fixed giant crops growing in a noticeable pattern.
Fixed discrepancy between an item's shown health recovery and the actual recovery when consumed.
Fixed the chicken statue furniture being stackable with the chicken statue artifact.
Fixed issue where players could still take damage and die while warping with an obelisk or return scepter.
Fixed issue where ore/mineral veins destroyed with a bomb outside of the mine would only drop stone.
Fixed issue where going to bed early caused machines to process more quickly overnight. (Machines previously processed 100 minutes per hour slept; they now only do so between 2am and 6am, and the remaining time slept will be processed at the normal daytime rate of 60 mins/hour.)
Fixed issue where harvesting a tapped mushroom tree in winter would cause it to not produce again until mid-Spring, rather than Spring 1.
Fixed issue where snow yams and winter root could be dug up in the desert in winter.
Fixed lopsided bee house flower range.
Fixed some Witch Swamp and Mutant Bug Lair water tiles not correctly marked as water, causing inconsistent fish quality in those areas.
Fixed issue where entering a house the moment an NPC passes through a door would close the door on top of the NPC, causing them to get stuck.
Fixed issue where fruit trees wouldn't grow if there was a monster or other NPC near them overnight.
Fixed issue where closing a mine chest with the OK button while your inventory was full destroyed the item; instead the item is now dropped.
Fixed issue where a player at the Stardew Valley Fair would get their score calculated based on the contents of the Grange upon closing the minigame (instead of when Lewis had actually finished his judging), letting that player have a different score than intended.
Fixed minor issue where zero shots fired at the Stardew Valley Fair slingshot shooting gallery would give a large negative calculated accuracy.
The Cookie recipe will be sold at the Saloon if Evelyn's 4-heart event has been seen but the recipe wasn't obtained.
Fixes for player interaction
You can now collect lost books even if your inventory is full.
Fixed horses being unmountable if they're very close to a pet.
Fixed being able to trash items from the crafting menu even though the trash can is invisible.
Fixed answering dialogues on a small screen causing the cursor to interact with the toolbar.
Fixed interacting with objects in the world while holding an item sometimes causing both the interaction and object to be used at the same time.
Fixed interacting with a fireplace sometimes not toggling it.
Fixed interacting with objects so that objects behind the character are longer interacted when the character is facing upwards.
Fixed interacting with a trash can on horseback simultaneously dismounting the horse and searching the trash (now just dismounts).
Fixed issue where players couldn't harvest or pick up items by clicking and holding the tool button with a melee weapon or scythe in hand.
Fixed issue where attempting to charge an upgraded watering can to the left of a body of water on the farm would prevent the farmer from charging it.
Fixed unable to fill water can from the left side of the water trough in the greenhouse.
Fixed issue where depositing ore into two nearby furnaces could activate both of them.
Fixed large rotated furniture being placeable on top of tables, causing them to disappear.
Fixed issue where players could move while warping out of the Witch's Swamp.
Fixed issue where players couldn't push through farm animals in some cases if they were offset by half a tile.
Fixed issue where interactable furniture like fireplaces couldn't be picked up with left-click when standing close to them and holding a non-tool item.
Fixed issue where it was hard to click on NPCs if you went into a festival while holding a placeable item.
Fixed crawling-stage babies in the crib not being interactable.
Fixed minor issue where you could cause the farmer to stop shaking during a tool charge by pressing a movement key.
Fixed being able to interact with NPCs when your farmer is set to be immobile. (For example, this prevents you from trying to gift your spouse a second gift immediately after kissing them and getting stuck in an erroneous animation frame.)
Fixed opened gates orphaned by destroying the fence post they're attached to not blocking movement.
Fixed wild tree seed placement cursor not accounting for seed-placeable rules.
Fixed crab pot placement cursor always green, even if an invalid placement tile is selected.
Fixed palm trees not shaking and dropping leaf debris when interacted in winter.
Fixed the ""Warrior"" option not being selectable during Sebastian's 6-heart event in Korean.
Fixed being able to use the dagger while bathing.
Fixed museum reward collection menu not dismissible using the exit hotkey.
Fixed museum donation screen issue where panning the camera would cause the cursor to scroll off of UI elements.
Fixed issue where watering a small tree sapling played a scythe sound.
Fixed issue where hitting a fence that has a torch on it would destroy the torch instead of dropping it.
Fixed invisible blocking tile front of Lewis's house during the Stardew Valley Fair.
Fixed blank or whitespace-only chat messages being sendable.
Fixes for festivals, events, and quests
Dismissing a quest letter no longer discards the quest. (It's now added to your quest log to avoid permanently missing out on quests.)
You can no longer place objects at the beach while the Night Market is occurring.
Removed invisible trees from festivals.
Fixed exploit where you could pause time when the Night Market submarine was ascending/descending to skip the wait time.
Fixed exploit where you could watch the Night Market Mermaid Show while time was paused (the show now pauses too).
Fixed exploit where you could fulfill the requirements for a gathering quest by taking items out of a chest one-by-one.
Fixed players getting stuck on doors or placed objects during cutscenes in some cases.
Fixed players getting stuck in Harvey's 8-heart event if it was triggered when leaving his bedroom.
Fixed players getting stuck in Harvey's 10-heart event if a train came by.
Fixed introductions quest not considering Willy done after you meet him to receive the fishing rod.
Fixed Mr. Qi's Challenge not considered complete if you fulfilled the conditions before getting his letter.
Fixed the egg in Lewis' truck not being accessible during the egg hunt.
Fixed time not passing for machines inside of farm buildings during festivals.
Fixed players getting trapped in the hospital until the festival starts if they were knocked out for the first time on a festival day.
Fixed time passing during festivals not reflecting when the player(s) started the festivals.
Fixed some out-of-season items appearing as targets for ""Help Wanted"" quests.
Removed strawberry from Summer quests, catfish from Winter quests, and sardine from Summer quests.
Fixed bug limiting which NPC would request gathering, slay monsters, or fishing quests.
Fixed Help Wanted quests not reflecting that they pay 3x the market value, instead of 2x.
Fixed occasional spacing issues with the messages on the daily quest board.
Fixed Robin sometimes thanking you for the wrong item when completing a billboard quest.
Fixed winning festival events not counting towards farm's total earnings.
Fixed Penny's 6-heart event not triggering after purchasing the Community Upgrade.
Fixed Sam's 8-heart event being silent if you skipped his 2-heart event.
Fixed ""A Winter Mystery"" quest not triggering if exiting the farm from the bottom tile of the exit to the bus stop.
Fixes for shops and shipping
Fixed merchants refilling limited-stock items when you reopen their shops.
Fixed traveling merchant sometimes having the same item for sale for two different prices.
Fixed items bought from shops being sellable at a different price than produced/grown versions.
Fixed issue where honey would sometimes sell for more than expected.
Fixed pressing Alt + Enter while buying from Pierre destroying the held item.
Fixed selling animals not counting towards farm's total earnings.
Fixed issue where you couldn't buy animals while Robin was upgrading the pertinent building.
Fixes for NPCs
Fixed several cases where NPC dialogues were out of sync with the actual state of the game world (e.g., saying the wrong dialogue in bed).
Fixed issue where villagers could get stuck doing their daily schedules late into the night after a festival.
Fixed issue where Vincent could get stuck on a flower barrel during the flower dance.
Fixed issue that prevented some villagers from hanging out with one another in town on certain days.
Fixed various issues related to naming horses.
Fixed various bugs caused by giving a villager's name to a horse, pet, or child.
Fixed friendship-related achievements not properly triggering as soon as the conditions are met.
Fixed various friendship-related bugs and inconsistencies, including 10-heart events being unlockable without a bouquet.
Fixed NPCs reacting incorrectly to certain gifted items.
Fixed issue where gifts couldn't be given to the dwarf if their dialogue was exhausted for the day.
Fixed Abigail visiting the farmer on the same day as her 8-heart event.
Fixed Bouncer just saying ""Hi."" instead of his unique line.
Fixed Bouncer not accepting the club card if you've already exhausted his dialogue for the day.
Fixed Demetrius plowing through bushes by the fountain in summer.
Fixed Dwarf always responding negatively to items it feels neutral about.
Fixed Dwarf not liking cave carrots, despite having dialogue which suggests otherwise.
Fixed Emily's four-heart event unlockable at night.
Fixed Gus offering Bread, Pizza, Salad, and Spaghetti as dish of the day (he already sells them as part of his normal shop stock).
Fixed Henchman dialogue box showing a friendship jewel.
Fixed Krobus secret note event not triggered if riding a horse.
Fixed Krobus not keeping silent on Fridays when accepting gifts.
Fixed Leah's summer schedule causing her to walk into the water and get stuck there for the rest of the day.
Fixed Penny not having her own introductory line.
Fixed Penny talking about the sound of rain on the roof of her trailer after the community upgrade is built.
Fixed Penny talking about living in a trailer after the community upgrade is built.
Fixed Pierre talking about time off after the Community Center has been restored.
Fixed Shane sending two recipes at 3 hearts. (The second is now sent at 7 hearts as intended.)
Fixed Welwick saying two different things on the same day.
Fixed free gift at the Night Market being available every ten minutes instead of once a day.
Fixed buggy interaction with Mayor Lewis when getting a Joja membership before starting the Community Center.
Fixed townsfolk sending players the wrong cooking recipes for their current friendship level.
Fixed villagers you're already dating still accepting bouquets from you.
Fixed a rare crash when attacking ""slimes in love"".
Fixed attacking a rock crab with a pickaxe not dealing damage after its shell is broken.
Fixed issue where villagers that respond differently depending on their current location will no longer say those location specific lines when talked to again later.
Fixed spouse continuing their ongoing dialogue after being interrupted with giving you a Stardrop.
Fixed most cases of crawling-stage babies waking up in the crib at the start of the day. (They'll now spend longer trying to find a non-crib position before giving up.)
Fixed NPCs sometimes detecting players rummaging through their trash or private possessions from a different location.
Fixed NPCs saying something upon entering an area (e.g., Pam entering the Saloon) doing so if you're watching an event.
Fixes for multiplayer
Farmhands' spouses now move around, run their daily schedules, and react to their spouses like they should.
Farmhands now return to their own porches after a festival, instead of the main farmer's porch.
Players can no longer give quest items as gifts to other players.
You can now connect to the host via IP while they're in the process of loading the game.
Fixed an issue where if a server was shut down on the same day a remote player had leveled up overnight, the level up would not be applied until the following night upon save load.
Fixed rearranging the museum in multiplayer showing a message that the player donated a new item.
Fixed farmhands not seeing the notification that a train is approaching.
Fixed players stuck if a bundle is completed while they're on a tile that becomes unwalkable after the room gets renovated.
Fixed issue where a spouse could get stuck in a farmhand's cabin after divorce. Save files that already have this issue will be fixed after the first night.
Fixed bundles button visible on the inventory screen for farmhands that had missed a bundle completion cutscene.
Fixed issue where you couldn't interact with something behind another player (e.g., to talk to an NPC).
Fixed farmhands seeing bundles for completed areas when looking at the bundles menu.
Fixed farmhands unable to pick up lost books if the host has a menu open.
Fixed married NPCs saying marriage-specific lines to players who aren't their spouse while they're on their married schedules.
Fixed the door frame from Robin's construction animation not properly removed for remote clients after construction is done.
Fixed messages like the one about spreading weeds only shown for the host player.
Fixed Kent sometimes missing from clients' festivals.
Fixed players that collapse in multiplayer seeing the screen briefly flash, showing them in bed.
Fixed fishing rod cast sound affected by other players' casts.
Fixed fishing rod animation not properly synchronized when clicking and holding to recast.
Fixed issue where Lupini would only stop selling a painting if the host player was the one to buy it.
Fixed issue where horses could lose their hats in multiplayer.
Fixed issue where farmhands couldn't activate the Dark Shrine of Night Terrors.
Fixed issue where monsters wouldn't move while host was watching an event or getting knocked out.
Fixed various issues related to child placement and multiplayer synchronization.
Fixed issue where light sources from disconnected farmhands wouldn't get cleaned up.
Fixed issue where animals in barns built by farmhands in multiplayer were unable to breed.
Fixed issue where completing a Vault bundle wouldn't send a global chat message in multiplayer.
Fixed issue where the Witch event would create a void egg for each logged-in player.
Fixed issue where items shipped, minerals found, recipes cooked, fish caught, and artifacts found during a multiplayer session could be forgotten if a client disconnected before the end of the day.
Fixed several bugs relating to Mummy behavior and multiplayer sync.
Fixed sleep stamina recovery being based on the last player who went to bed (now tracked separately for each player).
Fixed baby slimes in the mines destroying rocks on contact if a non-host player killed the big slime.
Fixed various multiplayer data sync issues.
Fixed time slowing for all players when the host is in the mine (no longer slows at all in multiplayer).
Fixed missing tools in multiplayer not always being recovered.
Fixed various issues related to pets in multiplayer.
Fixed remote players not properly showing jump/jitter animations during emotes or horse mounting/dismounting.
Fixed the host player seeing flashes or feeling controller rumbles from bombs in other locations.
Fixed explosion flashes not showing up on farmhand machines.
Fixed player getting stuck on the ""Waiting for players"" check after a festival if another player joined at the same time.
Fixed Joja purchase form not reflecting upgrades bought by other players.
Fixed issue where getting killed while paused in multiplayer could leave you in a perpetual getting-knocked-unconscious state; this now unpauses instead.
Fixes for visual or cosmetic issues
Items that come in various colors (like tulips) now show their proper color in the item received pop-up.
The mouse cursor is now hidden in scenes that lock user input.
The lighting in the Secret Woods now changes more consistently with the rest of the world as time passes through the day.
Lit furniture placed on top of tables will now properly light upon nightfall.
Fixed various visual map issues, including…
various tile issues in the Mines and Skull Cavern;
glow from certain lamps in the town interiors tilemap bleeding into adjacent tiles in the tilesheet;
incorrect corner edge tile used inside the walls in mine level 6;
incorrect grass tiling under the fence on the bottom of the mountain path to town, and missing tile on the tree near that location;
incorrect tiles in the Flower Festival;
a missing stone tile under the JojaMart sign in town;
visual issue with the kitchen floor tile;
visual bugs with the eyes of the statue in the secret woods;
visual issues with hat mouse's house;
artwork of the Bulletin Board in the Community Center not lining up with the walls around it;
mismatched walls behind the plant and picture frame in the hallway between Alex and George and Evelyn's rooms;
mismatched wall with the power outlet for George's TV;
look of the carpet under Sam's bed;
incorrect shadowing on some tiles in the mines on floor 7 and 14;
Secret Woods statue eyes staying red after activation until the season changes or you reload the save.
Fixed various text display issues, including…
various typos;
various line wrapping issues in dialogue boxes;
line wrapping issue when leaving the feast of the winter star;
line wrapping issue in tooltips for boots, rings, and melee weapons with long names;
extra space at the bottom of tooltips for edible items that don't grant any health;
sizing issues in carpenter menu for non-English languages;
spacing issues in bulletin board request text;
one of Haley's lines having a blank dialogue page;
certain items with long names causing tooltips to word wrap incorrectly;
stardrop message easter eggs incorrectly appending the favorite thing after the special text.
Fixed various sprite issues, including…
layering issues (e.g., when the farmer is facing upwards while using some tools, or bushes drawn over chests);
character sprite coloration issues;
some monsters having two shadows (affected Ghosts, Dust Sprites, and Bugs);
Bouncer trying to face the player in some cases, resulting in an invalid sprite;
Linus starting some days slightly clipped into a wall;
Maru reverting to her plain clothes after her event in the clinic;
Penny's hair missing some pixels when she's sitting on the bench in town;
player hat rendered incorrectly in the inventory at night time;
player with an item raised above their head rendering with hands lowered in some specific cases;
player sprite rendered incorrectly after collapsing while in a bathing suit;
player sprite facing upwards after interacting with a child or festival NPC from above;
player 'wiggling nose' animation issue when casting or reeling in a fish;
player eye color drawn incorrectly when reeling in a fish;
player sprite flickering to invalid animation frame when tapping a movement key while aiming the fishing rod;
kissing your spouse in multiplayer sometimes showing an incorrect idle frame (sometimes facing the wrong direction);
various issues related to animations played as part of an NPC's daily schedule;
the light halo overlay on outdoor lamps sorting incorrectly at some positions;
health bar not fully consistent with stamina bar.
Fixed Penny washing dishes too far from the sink.
Fixed issue where rebinding keys would cause the game to display a blank options screen instead of properly prompting the player to press a key.
Fixed switching toolbars causing incorrect animations to play in multiplayer.
Fixed various issues related to the frogs that sometimes spawn on rainy days.
Fixed ancient seed not visible in inventory.
Fixed edible items that don't grant energy displaying the poisonous icon in tooltip.
Fixed being able to click title menu buttons before they're visible.
Fixed visual issues when swapping toolbars away or onto light sources.
Fixed some dialogue boxes being positioned incorrectly.
Fixed issue where hovering over the dialogue friendship jewel would show a friendship level tooltip, even if the jewel wasn't currently visible (e.g., when answering a question).
Fixed visual seams appearing in Junimo Kart.
Fixed visual bug in the character's health bar when their health is low.
Fixed screen fading out twice when using Robin's building related functions.
Fixed resizing the window below the minimum size causing black bars on screen.
Fixed resizing the window or adjusting zoom resetting the scrollbar position on the options screen.
Fixed social tab showing one gift given if you gave two gifts that week plus a birthday present.
Fixed minor visual bug when switching between the ""Host"" and ""Join"" tabs in the co-op screen.
Fixed non-centered text alignment in the header of Robin's build menu.
Fixed the host player seeing light sources from Ghosts in the mines, even while not in the mines.
Fixed purchasing stacks of player-sold items from Pierre not visibly reducing the stack available.
Fixed lighting in the mine changed as soon as you start going down a ladder, instead of after loading the next level.
Fixed screen briefly fading to black during Grandpa's evaluation.
Fixed players sometimes getting stuck on a black screen during weddings.
Fixed pulling the last piece of hay out of a hopper not making it display as empty.
Fixed several issues with weather debris displaying incorrectly.
Fixed issue where white or black customization colors would cause the HSV sliders to show invalid numbers upon using the Shrine of Illusion.
Fixed visual issues with the cutscenes while riding the bus.
Fixed issue where holding 'up' while taking the bus back from the desert would cause the camera to pan during the cutscene.
Fixed trees planted in the desert showing their snow-covered sprites in winter.
Fixed issue where player animations weren't properly looping during events.
Fixed issue where Journey of the Prairie King showed -1 lives after losing all of your lives.
Fixed issue in Robin's menu where the Deluxe Barn's description overlapped the materials list.
Fixed minigames / cutscenes not always centered when the game is zoomed out.
Fixed the order of recipes in the Collections menu and the kitchen stove menu not matching.
Fixed weather debris clumped up after playing a minigame.
Fixed alignment of several UI elements in Calico Jack minigame.
Fixed falling leaves in the Secret Woods not showing their seasonal variants in fall.
Fixed campfire lighting misaligned.
Fixed map showing the player in the mines when they're in the Skull Cavern.
Fixed menu backgrounds not shown in the Community Center bundles menu.
Fixed the map's location label partly rendered off-screen in some cases.
Fixed white borders sometimes drawn on pieces of debris/dropped items.
Fixed mouse cursor not showing gift icon when gifting items to an NPC you're meeting for the first time.
Fixed mouse cursor showing ""talk to"" when hovering over NPCs during non-interactable events.
Fixed issue where harvesting from a crab pot while your inventory was full would result in multiple 'inventory full' messages without the red 'X'.
Fixed crab pots positioned/rendered over tiles they should be being drawn behind.
Fixed issue where opening a door would briefly show a ghost door.
Fixed windows in barns, coops, and spouse rooms providing light on rainy days or when it's dark out.
Fixed inconsistent particle effect when you right-click vs left-click to sell in the shop.
Fixed digging up an artifact spot in the rain leaving a dry spot.
Fixed hoeing in the desert when it's raining elsewhere leaving a wet spot.
Fixed outdoor garden pots not showing watered sprite when it's raining.
Fixed the health bar 'bleeding' at low health values if the health bar isn't currently being drawn or if the screen is currently fading.
Fixed double cursor in the Stardew Valley Fair slingshot minigame, and disabled drawing of it when playing with controller.
Other bug fixes
All mine songs now show up in the Jukebox list.
Fixed crash on startup if no audio output device is detected.
Fixed resolution issues for some players.
Fixed music not properly playing at the start of a new day.
Fixed Junimos not behaving properly after completing the community center.
Fixed issue where other players could affect the music that's playing in the mines.
Fixed various bugs caused by simultaneous buffs and debuffs.
Improved confusing error if certain game files are missing.
Fixed issue where players wouldn't get museum achievements until the next time they donated something themselves.
Fixed Master Angler achievement awarded before catching all fish.
Fixed issue where the music in Leah's house didn't stop after leaving her house.
Fixed issue where the wallpaper and flooring would shift rooms as you upgraded your house.
Fixed skipping an event sometimes making the player wait on a black screen for a while.
Fixed placing a bomb and leaving the screen before it explodes causing a buggy sound effect.
Fixed placing a bomb that destroys weeds and leaving the area before the explosion happens still playing the weed destruction sounds.
Fixed options menu being scrollable while a dropdown list is active.
Fixed an issue where a female character's pants could have their color changed to black during a wedding ceremony.
Fixed issue where you'd need to click twice to clear the dialogue that appeared after falling down a mineshaft.
Fixed issue where hotkeys (like opening the inventory) triggered after sending a chat message.
Fixed issue where dialogue couldn't be advanced using keyboard inputs.
Fixed issue where the music would sometimes briefly play again after you had turned the volume down.
Fixed issue where rebinding the menu key closed the options menu.
Fixed Prairie King game over screen only accepting input every 1.5 seconds.
Fixed Prairie King music overlapping if you use the zombie powerup multiple times in quick succession.
Fixed mouse repositioned when clicking HUD zoom buttons, making it harder to zoom in/out multiple times.
Fixed issue where loading a save would play the furnace and fireplace sounds.
Fixed volume levels not properly applied when connecting to a game as a farmhand.
Fixed rare crash or invisible grass caused by grass sizes becoming invalid.
Fixed clicking without dragging with the slingshot consuming ammo but firing nothing.
Fixed crash after eating a Maki Roll while playing in French.
Fixed Prehistoric Tibia and Amphibian Fossil not appearing in the forest (or anywhere) while playing in Spanish.
Fixed Wild Plums listed as forage instead of fruit in non-English languages.
1.3.36
Stardew Valley 1.3.36 was posted to the beta channel on 24 January 2019 and released on 1 March 2019.

Changes
Added French, Korean, Italian, Hungarian, and Turkish language support
Added a new Credits menu to replace the ""About"" menu on the title screen, and removed the /credits chat command.
Removed unneeded tilesheet files under Content.
Removed translated map files under Content/Maps (translated tilesheets are now loaded automatically).
Centered shed door.
Bug fixes
Fixed bug where music doesn't correctly play in the morning.
Fixed bug where giving a gift to an NPC caused the gift action to happen twice in rapid succession.
Fixed furniture rotation bug for ""stools"".
Fixed Junimos not disappearing after the final goodbye.
Beta Versions (1.3.35–1.3.36)
1.3.33
Stardew Valley 1.3.33 was posted to the beta channel on 18 December 2018 and released on 8 January 2019.

Changes
Improved performance in locations with lots of light sources (e.g., torches).
Improved performance on farms with lots of animals.
Tweaked new ""H"" health icon.
Bug fixes
Fixed multiplayer visual glitch when another player uses a tool and then starts moving in a new direction.
Fixed ""fishing stance"" visual glitches in multiplayer.
1.3.32
Stardew Valley 1.3.32 was released on 19 November 2018. (Versions 1.3.29–1.3.32 were all posted on the beta channel, and are included in 1.3.32.)

Changes
Optimised network performance.
Added more ways for the host to unpause the server (by pressing ESC, B, Back).
Added alternative way to show the chat box (press right stick button on a controller).
Added internal changes for modders (should have no effect on vanilla gameplay).
Bug fixes
Fixed slimes not pouncing correctly.
Fixed items-crafted stat being 0 after loading a file until you craft something again.
Fixed rabbit's foot not affecting the breakup scene in non-English language modes.
Fixed some rare tool-related crashes in multiplayer.
Fixed an audio-related crash often caused when using bombs.
Fixed Junimos dropping crops on the floor instead of collecting them.
Fixed NPCs walking through the saloon doors.
Fixed a few rare-ish crashes that can occur when connecting to another player's game.
Fixed eye color being reset to brown after reloading.
Fixed inability to use rod / slingshot in festival minigames.
Fixed the title menu back button being hidden behind submenus.
Fixed inability to move after receiving a gift at the Feast of the Winter Star.
Fixed crash when saving after the game adds Lewis' shorts to Marnie's house.
Fixed crash viewing the map when another player is in certain events.
Fixed ""double sound"" when using singing stone.
Fixed a Geneva Convention violation (by replacing red crosses in graphics).
Fixed clicks on the chatbox not being registered when the game is paused.
Fixed players sometimes walking off in a straight line through all terrain when they get disconnected.
Fixed babies sometimes spawning in houses that don't belong to the parents.
Fixed the potential for overnight events to cancel or skip a wedding event.
Fixed a desync that could occur if a player tried to get into the casino after a different player has removed the bouncer.
Fixed players able to simultaneously build overlapping farm buildings.
Fixed only one player being able to get the dark talisman.
Fixed the inability to place donated items on the bottom two rows of the museum.
Fixed farmhands being unable to pick up items they dropped in festivals.
Fixed Pam's upgraded house interior event not happening.
Fixed visual glitches caused by triggering a shared event simultaneously with the return scepter.
Fixed softlock caused by mistaken ability to use daggers during events.
Fixed players all receiving the same personal overnight events on the same day (e.g., spouse asking if you want a baby).
Fixed attempting to demolish cabins of abnormally disconnected farmhands causing the cabin to be destroyed after you leave the buildings menu.
Fixed farmers getting stuck in the fishing casting animation after picking up someone else's rod.
Fixed host sometimes appearing stuck using tool in shared events.
Fixed soft-lock when you play the Journey of the Prairie King past 2am.
Fixed glitched chest lid appearing when you destroy a cabin.
Fixed duplicate songs in the jukebox.
Fixed only one player's glow ring working at a time.
Fixed farmhands not being able to see each others' bundle changes.
Fixed bug causing some players to become married to two other players in 3-4 player farms.
Fixed player sometimes getting stuck in bed after another player got in and then got back out.
Beta Versions (1.3.29–1.3.32)
1.3.28
Stardew Valley 1.3.28 was posted to the beta channel on 10 August 2018 and to the main channel on 14 August 2018.

Fixed bug preventing buildings from being placed where there would be a path/flooring tile in front of the door.
Fixed music not playing at the Luau festival and in town.
Fixed clients occasionally crashing in rainy weather.
Fixed server crash when there are no available network adapters.
Fixed the load menu showing 'no saved games' while searching for files.
Fixed crash that occurred if you collided with a monster on the first frame you entered a new location.
Fixed Robin forgetting that she's meant to upgrade a farmhand cabin if the farmhand disconnects abnormally.
Fixed farmhands not being able to set the next day's weather with rain totems.
Fixed farmhands 'swimming' inside their cabins if they're disconnected while swimming in the spa.
Fixed swimming-related visual bugs in on farmers' faces.
Fixed furniture rotation graphical glitch.
Fixed a crash that occurs if you try to copy an invite code while remotely logged into the machine the game is running on.
Fixed a German localization issue with '%Farm' appearing in text instead of the farm's name.
Fixed spouse NPCs not kissing farmers.
Various internal changes requested on the modding wishlist.
1.3.27
Stardew Valley 1.3.27 was released on 1 August 2018. (Versions 1.3.3–1.3.26 were only posted on the beta channel, and are included in 1.3.27.)

New content
Added multiplayer over GOG, Steam, or LAN. This includes chat with custom emotes, and new cabin buildings.
Added Night Market event.
Added Community Upgrade to carpenter's shop.
Added buildable shipping bins to Carpenter's Shop.
Added Abigail encounter at level 20 in the mines.
Added new heart events for Jas, Linus, Pam, Vincent, and Willy.
Added new heart events when player has given a bouquet to all bachelors or bachelorettes.
Added rare treasure chest rooms in Skull Cavern.
Added new monsters in the Skull Cavern: carbon ghost, iridium bat, and iridium crab.
Added secret notes and related quests.
Added new items: auto-grabber, cactus seeds, garden pot, wood sign and stone sign, solid gold Lewis statue, pearl, wedding ring, new paintings, and decorative items sold at shops and festivals throughout the year.
Added bear's knowledge, special charm, spring onion mastery.
Added Statue Of Uncertainty to change professions.
Added different stationery for letters from Sandy and the Wizard.
Added horse hats.
Balance changes
Increased purchase price of wood, stone, ores, and coal in the year 2+. The gold received for selling them is unchanged.
Reduced price of tub o' flowers from 1000g to 250g, and recipe from 2000g to 1000g.
Breaking small tree stumps now provides +1 foraging XP.
Once the player reaches the mine bottom...
prismatic shards and diamonds may rarely drop from any monster;
gems and purple mushrooms may be found when searching trash bins;
gems and purple mushrooms may be requested in NPC quests;
some monsters will be stronger.
Other changes
Once the player reaches the mine bottom, the Dwarf will attend weddings.
Golden pumpkin is now a universal love (instead of universal hate).
Tweaked several seed packet sprites.
Tweaked Mr. Qi dialogue portrait.
You can now add Mayor Lewis' shorts to the Luau soup.
You can now put fire quartz in the furnace to produce refined quartz.
You can now refill a Watering Can at the kitchen sink.
Fireplaces are now furniture, so you can move them around and buy different fireplaces.
Fruit Trees cannot be planted on top of decorations in the greenhouse border, or in the corners of the Greenhouse.
Replaced gold display on player menu from ""g"" to ""金"" in Chinese.
Improve Chinese translations:

Item name changes
Item description changes:

Items Changed
Bug fixes
Fixed crops harvested with a scythe not giving XP.
Fixed bee houses always giving wild honey when used on custom farms.
Fixed seeds planted out of season disappearing.
Fixed player collapse being cancelled when they open the journal.
Fixed animal mood & happiness bugs.
Fixed crystalarium item swap exploit.
Fixed furniture being usable to complete bundles.
Fixed some recipes allowing Milk, but not Large Milk.
Fixed crash that occurred after 596 hours of gameplay.
Fixed staircase being spawned on mine level 120 when a placed object is destroyed.
Several grammar/spelling fixes.
Fixed wheat seeds and bok choy seeds descriptions in Brazilian-Portugese.
Fixed spring sign on bathhouse in Chinese.
Beta Versions (1.3.0–1.3.27)
1.2.33
Stardew Valley 1.2.33 was a small bugfix patch released on 10 July 2017.

Changes
Fixed Linux/Mac builds distributing with MonoGame-built content instead of XNA-built content (which made modding more difficult).
1.2.32
Stardew Valley 1.2.32 was a small bugfix patch released on 10 July 2017.

Bug fixes
Fixed Linux install failing due to broken symlink in 1.2.31.
Fixed save files potentially getting overwritten if you start a new file after using exit to title.
1.2.31
Stardew Valley 1.2.31 was a small bugfix patch released on 7 July 2017.

Bug fixes
Fixed crashes related to use of slot machines.
Fixed some potential sources of unnecessarily increased memory usage.
Fixed some options in dialogue not being usable with a controller.
Localization fixes
Fixed the 'loading...' message on loading screens wrapping incorrectly in some languages.
English: fixed grammar in Luau community soup text.
Portuguese: fixed some dialogue options in Linus' 0 heart event being missing.
Portuguese: fixed the cut-off 'level up' title.
Russian: added more space for the '(single)' text on the social page.
1.2.30
Stardew Valley 1.2.30 was released on 12 May 2017.

Changes
The window mode preference is now shared between all save files.
Bug fixes
Fixed crash when the game switches window mode while loading a save.
1.2.29
Stardew Valley 1.2.29 was released on 02 May 2017. (Versions 1.2.27–1.2.28 were only posted to the Steam beta channel, and are included in 1.2.29.)

Bug fixes
Fixed crashes while loading save files.
Fixed crashes when going fullscreen.
Fixed crashes while saving due to slay-monster quest.
1.2.26
Stardew Valley 1.2.26 was released on 24 April 2017 with in-game support for six new languages. Beta versions were posted to the Steam beta channel starting 07 February 2017.

Changes
Translations for German, Spanish, Brazilian Portuguese, Russian, Japanese and Simplified Chinese.
When using a controller, the cursor will snap between menu buttons by default. If you disable that, the cursor will instead accelerate while moving.
When using a controller, pressing the back button will skip events that are skippable.
""Show sharper digits"" on Options menu removed.
Exit to Title has returned.
Added panda hat (TGP only).
Bug fixes
Fixed lighting shader not covering the whole screen on Mac and Linux.
Switching from ""Windowed Borderless"" to ""Fullscreen"" should now go straight to fullscreen instead of Windowed mode.
Wallpapers and floors no longer have a tile placement indicator showing a random object.
Increased stability of preference-saving code. This should fix infrequent crashes that require the player to delete startup_preferences.
Fixed a crash that can happen when a pig tries to spawn a truffle but there’s no space for it.
Fixed a couple of rare crashes that could have occurred at any time during the game.
Fixed a typo of the word ‘pronounce’ in the marriage event.
Fixed the player not getting the recipe for Cookies if they skip Evelyn's event.
Fixed farm animals not producing goods at high happiness.
Farming level now affects crop yield prior to level 10.
Beta Versions (1.2.0–1.2.25)
1.11
Stardew Valley 1.11 was released 06 October 2016, with a beta posted to the Steam beta channel on 05 October 2016.

Minor changes
All the new farms now provide some kind of fishing opportunity, although the riverland farm is still superior.
The riverland farm now has the potential to spawn splashing fish nodes and ore panning nodes.
You can place buildings on most grass areas.
On the riverland and forest farm maps, some bushes can be destroyed with an upgraded axe.
Digging spots now appear on the farm, although less frequent as elsewhere. The hill-top quarry also has a chance of spawning them.
The forage berry bushes are now affected by the Botanist perk.
Slime egg prices increased.
Placing a wicked statue in a slime hutch prevents the witch from visiting it.
On the forest farm map, forage items have a chance to spawn on any grassy area, not just in the west.
Spouses will now speak to you when they come home on Friday nights.
Bug fixes
Price of galaxy dagger has been corrected to 35,000g (it was at 350,000g).
The Artisan Perk description has been corrected to reflect the actual bonus (it's 40% now, but the description still says 50%).
Weeds in the Mutant Bug Lair no longer change with the season (and no longer turn to battery packs in the winter).
The Mutant Bug Lair now replenishes itself a bit each day.
Monsters in the Mutant Bug Lair will now always be mutant... not revert to the standard grub/fly after saving and reloading.
Meteorites can no longer land on top of stumps or boulders.
You can once again place buildings in the little-shaded strip right below cliffs.
Fixed some tiles on the farm maps.
Fixed problem with forage spawning under stumps.
Spring onions can be iridium quality with the botanist perk.
Truffles should no longer spawn in the water.
Pets should no longer be able to walk down the cellar stairs into the void.
The Outlaw boss in Journey of the Prairie King will warp back to the center of the map if he happens to run too far off screen in either direction.
Coop animals can now actually produce higher quality produce like they were supposed to.
Can no longer fill your watering can at a well that isn't fully constructed or in construction.
Trees can no longer spread off the map into the void, causing the game to start getting slower with each day. The new patch will retroactively remove these problem trees as well.
You should now properly see the final Joja cutscene, even if you switched to JojaMart after completing most of the Community Center.
Forage items shouldn't spawn in inaccessible places anymore.
Fixed issue where lightning that struck an object on the farm would cause that object to ""pop"" into the current map when the current map was not the farm.
When you reach level 5 or 10 in a skill, but haven't slept yet, it no longer shows your new profession as ""Desperado"".
Minor convenience adjustments and bug fixes.
1.1
Stardew Valley 1.1 was released 3 October 2016, with a beta posted to the Steam beta branch on 29 September 2016.

Marriage candidates
Marriage candidates now have an outdoor area on the farm that is unique for most spouses, and sometimes spend time out there, usually doing a unique behavior.
Sam has a little halfpipe and he does skateboard tricks.
Maru has a little gadget that she works on.
Abigail plays her flute.
Leah has a sculpture to carve.
Sebastian works on his bike.
Alex lifts weights.
Penny, Harvey, and Elliott read a book in a little potted plant garden.
Emily meditates in a crystal garden.
Haley takes pictures between two potted palm trees.
Shane has a little chicken hutch, and he stands by it holding his chicken ""Charlie"".
Shane can be married and has new dialogue, scheduling and heart events. There's a new door for Shane in Marnie's shop which is locked. Shane's ""spouse room"" is a mess, with a mini-fridge and a muddy path of footprints leading up to it.
Emily can be married and has new dialogue, scheduling and heart events.
Buildings
Robin has a few new buildings available for sale.
shed: an empty room which players can do whatever they like with. They can decorate it the same way as their house.
mill: lets players place wheat in it to make flour, or beets to make sugar. One wheat makes one flour. One beet makes 3 sugars. When they place wheat or beets inside, the flour or sugar will be ready the next morning. The little box on the right side of the mill acts like a chest and it will contain any product that has been milled the previous day.
The wizard now offers new farm buildings after completing a quest line. These buildings are very expensive and intended for end-game. They'll appear instantly after purchase, unlike Robin's buildings which require construction.
Junimo hut: Junimos will come out to harvest any mature crops within a certain distance of the hut. The Junimos will place the crops they harvest in the hut for players to grab at their leisure.
Water obelisk: when interacted with, it warps players to the beach, exactly like the beach warp totem. It's basically an infinite totem that lives on the farm.
Earth obelisk: just like the water obelisk except it warps players to the mountains.
Gold clock: prevents debris from appearing on your farm. Keeps fences from decaying.
Farm maps
There are now five farm maps to choose from when starting a new game. The basic map that exists currently, as well as a new map themed around each ""skill"". Each special map has a feature that makes it a little different, and each map also comes with unique decorations inside the players house.
Riverlands: lots of water on this map... limiting your farm space. Looks nice. Fishing is actually viable on this farm... In fact, players can catch the same fish that are available in town.
Forest: the forest encroaches on the land, limiting farming space. However, there are renewable stumps on the east edge of the map, and seasonal forage items spawn there as well. Also, there is a new type of ""weed"" that spawns on the farm, which looks unique and will always drop mixed seeds when cut.
Hill-top: lots of cliffs... and there is a special mining area in the southwest where ore will spawn, as well as unique geode-bearing stones.
Wilderness: lots of space to farm, looks a little more interesting than the basic farm with a large lake in the southwest corner, and a cliff along the east and south. On this map, bats and golems will come out at night. There is a new monster called a wilderness golem which is unique to this map. It behaves just like the stone golem, but has different drops. Its stats scale with player combat level.
Farm
Added coffee beans, which can be used to brew coffee.
Added a new farmhouse upgrade which adds a cellar.
Added casks, which can be used to age alcohol and cheese to higher quality and value. This includes a new iridium quality, which doubles the value of the base item.
Fruit trees can now produce iridium-quality fruit. The fruit trees increase quality by 1 star per year of age after reaching maturity.
Divorce
Players can now divorce their spouse by filing in a little book inside the mayor's house.
After divorce, your spouse moves out and returns to their old life, but any children will stay.
After divorce, ex-spouses are less friendly toward the player and have unique 'rejected' dialogue.
Using the Dark Shrine of Memory in the Witch's Hut will erase the ex-spouses memory, making it seem like you had never been married.
Other new content
Return scepter now sold by Krobus in the sewer for 2,000,000g. This item acts like a permanent warp totem to the farm. You can use it any time to warp back to the farm.
Two new fish can be caught in the wild: slimejack (Mutant Bug Lair) and void salmon (Witch's Swamp).
Inside a new building, the Witch's Hut there are three new shrines:
Dark Shrine of Memory - Will erase a divorced spouse's memory, making it seem like you had never been married.
Dark Shrine of Selfishness - Allows you to turn your children into doves (Gets rid of them) in exchange for a prismatic shard.
Dark Shrine of Night Terrors - Allows you to toggle having monsters spawn on your farm in exchange for a strange bun.
There are two new quests available which unlock the new Wizard farm buildings (available after completing either the Community Center or JojaMart goals).
Dark Talisman - Sends the player to a new area, the Mutant Bug Lair to retrieve a powerful magical artifact.
Goblin Problem - Sends the player to a new area, the Witch's Swamp.
honey can now be placed inside kegs to make mead.
casks can now be crafted to age alcohol and cheese which increases quality.
void mayonnaise can now be crafted from void eggs.
catalogue - Sold by Pierre, this expensive furniture piece allows players to purchase wallpaper and flooring from their home.
furniture catalogue - Sold by Robin. Like the catalogue, this can be placed at the farm and players can interact with it to purchase furniture.
New furniture - anchor, bamboo mat, boarded window, bonsai tree, burlap rug, candle lamp, carved window, ceiling flags, decorative lantern, floor TV, green cottage rug, hanging shield, Junimo plush, l. light string, metal window, miner's crest, monster danglers, monster rug, mystic rug, nautical rug, ornate lamp, ornate window, porthole window, s. pine, small crystal, tree column, woodcut rug, world map.
Galaxy swords, galaxy daggers and galaxy hammers are now purchasable from Marlon once you have obtained a galaxy sword.
Minor changes
New mail messages after the player passes out from exhaustion or dies. They'll sometimes end up at Harvey's clinic after passing out.
Strange bun had its price and cooking ingredients adjusted.
Giving someone a gift on their birthday will never make your spouse jealous.
You can now wallpaper the little hallways in your upgraded house.
When you beat Journey of the Prairie King, you can now start over in a harder mode, keeping your upgrades and coins.
2 new ""Lost Books"" to collect for the library.
You can now choose to color your chests with one of 20 color options.
NPC's now appreciate quality level in gifts, but it only has an effect on gifts they ""like"" or ""love"".
You can now move your buildings via Robin's construction menu.
Krobus now sells void eggs.
Slime balls now have a chance to drop petrified slime.
When paused, the time now blinks from black to gray, to black.
Added a graphics option to display ""sharper"" stack number digits.
Kegs no longer require clay to craft.
You can once again plant fruit trees around the edge of the greenhouse interior.
After seeing Shane's 8-heart event, each chicken you purchase from Marnie has a 25% chance of being blue. Aside from appearance, the blue chicken is identical to the white chicken.
Sunflower seeds can now be purchased and planted in summer in addition to fall.
Balance changes
All animal products are increased in value by 25% (rounded up to the nearest 5g)
The Rancher profession now increases the value of animal products by 20%, up from 10%
The Artisan profession now increases the value of Artisan goods by 40%, down from 50%
The Blacksmith profession now increases the value of metal bars by 50%, up from 25%
The value of blueberry is now 50g, down from 80g
The value of starfruit is now 750g, down from 800g
The value of cranberry is now 75g, down from 130g
The value of ancient fruit is now 550g, down from 750g
Cranberry sauce has had its value reduced to 120g
Stuffing has had its value reduced to 165g
Cranberry candy has had its value reduced to 175g
Blueberry tart has had its value reduced to 150g
Fruit salad has had its value reduced to 450g
Reduced sell price of cranberry seeds to 60g
Bug fixes
Wild plums are now labeled as fruit.
Grandpa's Shrine should now always properly give the reward for reaching 4 candles.
Fixed issue where gathering an item with the ""botanist"" profession would fail if the inventory was full, even though the gold-level item was present in the inventory.
Slime charmer ring should now protect against giant slimes.
You can no longer tap a stump.
Fixed Joja Warehouse graphic issue in winter.
""Check action""-mapped keys should now work to attach bait to a rod.
Rain ambient sound should no longer play in Sandy's Oasis under any conditions.
Your baby should now be properly born, even if you pass out in the mines on the eve of the birth.
Moonlight Jellies engagement crash.
Galaxy sword should now be truly unloseable.
You can no longer lose hay to a hopper because you have no silo.
You can no longer plant fruit trees off the farm.
Typo fixes
1.07a
Stardew Valley 1.07a was released on 29 July 2016.

Changes
Added Mac OSX and Linux compatibility.
1.07
Stardew Valley 1.07 was released 04 April 2016, with a beta posted to the Steam beta channel on 31 March 2016.

Gameplay
Spouses now say unique dialogues during festivals (most of the time), rather than the generic handful of dialogues.
Spouse stands next to you at the Dance of the Moonlight Jellies.
In-law dialogue... when you marry someone, their parents/relatives dialogues will change slightly to account for the change.
Sam, Sebastian, and Abigail now go to the saloon on Fridays after you marry them.
Spouses won't leave on rainy days, unless they have to go to work.
Fruit trees produce higher quality fruit as they age. (once per year, up to gold star).
Fruit tree harvesting now involves shaking the tree to drop the fruit.
Lightning strikes now have a unique effect on fruit trees.
Lightning is more likely to strike trees and crops, but lightning rods now have a very good chance of intercepting lightning strikes (if they aren't already processing a lightning bolt).
Charcoal kiln now requires 10 wood to produce 1 coal, down from 20.
Maxed-out friendship levels will no longer decay.
Added another digit to the shipping menu money counters.
Dying in the mines is less harsh: money lost caps at 5000g, rate of item loss reduced, can't lose rings or the galaxy sword.
Your assigned movement keys are now used within Journey of the Prairie King.
You can now retrieve powerups and coins that drop on the edge of the map in Journey of the Prairie King.
The last two hearts are now greyed-out for marriage candidates until you give them the bouquet.
Willy now likes most fish dishes.
Adventurer's Guild now sells monster slayer rewards after you've unlocked them (you still get the free reward).
Hardware mouse cursor option.
Bug fixes
Tools left in chests within farm buildings won't count as ""missing"".
Poppy properly consumed in poppyseed muffin recipe.
Can no longer incorrectly ""consume"" trap bobbers (click to make them disappear with strange sound).
Agriculturist profession no longer causes an extra 25% growth rate when speed-gro isn't present. Speed increase effects should now properly apply to very slow-growing crops.
Fixed sunflower seed price at JojaMart.
Chests should no longer appear on top of your in bed after upgrading your house.
Item placement with the gamepad improved, and there is now an option to show an item placement indicator.
Snow yams shouldn't appear in the desert anymore.
Sea cucumber should properly appear in the fishing tab of the Shipping menu.
Farm animals should no longer get stuck on fences placed directly to the right of the barn door.
Various minor bug fixes.
Minor changes/fixes to dialogue.
1.06
Stardew Valley 1.06 was released 20 March 2016.

Changes
Added unique dialogues for all spouses.
Spouses now leave the house on Mondays.
Value of most animal products increased.
Holly is now poisonous.
Missing events problem shouldn't happen anymore.
Minor bug/grammar/graphics fixes.
1.051b
Stardew Valley 1.051b was released 17 March 2016.

Changes
Fixed disappearing item problem. (items can still be destroyed by farm debris).
Kegs now require oak resin to craft.
Bee houses now require maple syrup to craft.
Tortilla price changed from 75g to 50g.
Nautilus shell (artifact) renamed to nautilus fossil.
1.051
Stardew Valley 1.051 was released 12 March 2016.

Changes
Fixed weird rectangle lighting problem.
Flooring can now be removed by bombs.
You can press a ""menu"" button (Esc or E by default) to close out of yes/no dialogues.
If no other function is mapped to it, the Y key will choose ""yes"" in a yes/no dialogue.
You can use the trigger buttons on a gamepad to navigate through the Community Center menu.
Minor fixes.
More secrets.
1.05
Stardew Valley 1.05 was released 9 March 2016, with a beta posted to the Steam beta channel on 4 March 2016.

Gameplay changes
Only read if you've gotten to year 3: Grandpa's had a change of heart... he feels he's been a little too harsh with his judgements. He no longer mentions ""great honors"", and his dialogue is a lot softer. If he's already visited you, check his shrine for a new opportunity...
Restored a ""lost"" Shane event.
Changed earthquake to Summer 3rd... to make it clear that it's the season change that kills crops.
Increased opportunities for iridium. The chance to find iridium in the Skull Cavern increases significantly every ten levels.
Added a zoom in/out feature to the options tab.
Added volume sliders for ambient sounds and footstep sounds.
Added snow transparency slider.
Added option to turn off flash effects.
Added lighting quality option.
Added quest (Rat Problem) to make it clearer that you have to investigate the Community Center.
Bug fixes
Leah's schedule has been fixed.
Spouses who have jobs won't get stuck in the bus area anymore.
Upgrading a house with crafted flooring should no longer cause a mess.
Restored more advanced NPC end-point behavior.
""Secret"" NPC's should no longer show up on calendar until you meet them.
Escargot, chowder, etc. should now properly give fishing buff.
You now truly cannot pass the bouncer.
You can no longer get stuck trying to board the bus.
Fixed issue with invisible trees preventing interaction with tiles.
Dead flowers no longer affect honey.
You can now dance with your spouse at the Flower Dance.
Game should now properly pause when steam overlay is active.
Fixed issue where inactive window was still responding to input.
Fixed fertilizer prices in Pierre's shop.
Fixed Fector's Challenge.
You can now press the toolbar shortcut keys (1, 2, 3, etc. by default) to change the active slot while the inventory menu is up.
Iron ore nodes can no longer be removed, only destroyed.
The dog or cat should no longer sit on chests...
Spouses less likely to run away into the dark abyss.
Naming your child after an NPC should no longer cause issues.
Fixed issue where recipes would sometimes consume more ingredients than they should.
Fixed crashes in certain cutscenes, when certain dialogue options were chosen.
Many small bug and typo fixes.
1.04
Stardew Valley 1.04 was released 1 March 2016.

Gameplay changes
Added a randomize character button to the character creation screen.
Robin now sells crafting recipes for wood floor, stone floor, and stepping stone path.
Added a secret new way to modify a rare item.
Increased grass growth rate.
Increased forage spawn possibilities, and made it much less likely for forage to spawn behind trees.
Reduced value of honey from 200g to 100g.
Raised Clint's ore prices.
Inventory menus now indicate which slot is the ""active slot"".
Made the meteorite look snazzier.
Bug fixes
Fixed problem with swinging sword while riding a horse.
Fixed strange lighting behavior when holding torches.
Fixed problem where stone fence was spawning debris.
Spouse should no longer get stuck on their way to town.
Wild seeds now produce the proper produce when in the greenhouse.
Secret gift exchange should now work properly.
All scarecrows now give reports on their crow-scaring activity.
Bouncer is now truly impassable.
Trees no longer grow directly in front of warp statues.
Willy's shop no longer counts as water.
The meteorite should no longer appear in the pond or buildings.
If an object is ever directly underneath you, preventing you from moving, right click to remove it.
Mariner and Luremaster professions should now work properly.
Tappers are now properly destroyed by bombs.
Fixed bathing hairstyle inconsistency.
Fixed various item duplication and stacking issues.
Poppyseed muffin now actually looks like a muffin.
Quest items should no longer disappear when you die.
You can no longer give quest items to the wrong person.
The Skull Cavern quest can no longer be completed before receiving the actual journal entry.
1.03
Stardew Valley 1.03 was released 28 February 2016.

Gameplay changes
The cooking menu now looks for items in your refrigerator as well as your inventory.
Scarecrow range reduced to an 8 tiles radius.
The price of mayonnaise and other artisan animal products now increased by the rancher profession.
Once you befriend someone to 2 hearts, their room is permanently unlocked, even if you go below 2 hearts again.
The 'auto run' option is now enabled by default.
Bug fixes
Fixed duplicate item issue in the mines.
Ladders should no longer spawn underneath the player, locking them in place.
Fixed problems with the Community Center menu. You can now throw items down and delete them (Delete key) in the Community Center menu.
Fixed item quality exploit.
You can now throw items down while in the crafting menu.
If you destroy the stable, you can now rebuild it.
Spa won't recharge you while the game is paused (e.g., steam overlay up).
Fixed problems with the Stardew Valley Fair fishing game.
Various stability fixes.
1.02
Stardew Valley 1.02 was released 27 February 2016.

Changes
If you never received your pet, you will now have another opportunity.
When you go to sleep, the game now checks if any of your essential tools are missing. If so, they will appear next to your bed in the morning.
The game now properly saves on level-up nights.
Eating skill food and then going to bed on a level-up night works properly now.
Fixed problem where completing the Crafts Room while standing in certain locations causes your character to get stuck.
Player character should now walk correctly while in a cutscene after drinking coffee.
Removed an item duplication exploit.
Forage items should no longer spawn in the woods above the beach.
Fixed crab pot problem (again).
Fixed exploding armchair bug.
Relaxing in the spa with your menu up no longer restores energy.
Removed Leah's doppelganger.
Debris should no longer spawn in the pathway between farm & forest.
Fixed disappearing tapper problem.
Fixed a few minor graphics problems & dialogue typos.
Other minor issues (spoilers).
Tools being upgraded no longer erroneously considered ""missing"".
Clay duplication bug fixed.
Pet cutscene won't refer to the ""cat"" as a ""dog"" anymore.
Leah's 10-heart event fixed.
Pepper Popper recipe now requires cheese.
1.01
Stardew Valley 1.01 was released 26 February 2016.

Changes
Fixed random crash when going to sleep after getting your pet.
Sound effect volume now properly applied on load.
The error item should no longer appear for sale in the saloon.
Z key is now bind-able.
No longer possible to exit the Community Center menus while holding an item.
Finding your first artifact from a geode no longer destroys remaining held geodes.
Mature wild crops no longer disappear on day of load.
Crab pots can now be placed and removed without issue.
Fixed crash when inspecting chests in the mines.
You can no longer place chests in the mines.
Tree seeds no longer incorrectly show a ""Wrong Season"" message.
Fixed some map issues.
1.0
Stardew Valley 1.0 was released on 26 February 2016.",What can moss be used for?,Harvesting moss gives 1 foraging exp per moss and speed gro requires five moss.,Moss provides foraging experience points and is used in crafting speed-gro fertilizer.,Moss is used for increasing the growth rate of crops when mixed with water. It also serves as decoration on farmhouses.
18,"The best sci-fi and fantasy books of 2023
It’s been a stellar year in speculative fiction

By Nicole Clark, Sadie Gennis, and Polygon Staff  Updated Dec 8, 2023, 10:00am EST  34 Comments / 34 New
If you buy something from a Polygon link, Vox Media may earn a commission. See our ethics statement.

It’s been another banner year for science fiction and fantasy books. Many of our favorites once again blur the line between sci-fi and fantasy, but this year was a particular standout for books blurring the line between SFF and other genres. This includes everything from historical fiction — both speculative histories and Westerns — to fable retellings to intergenerational sagas in translation.

Though we seem to have crested the wave of pandemic novels, that sense of dread and discoloration has lingered, written into novels of new forms. There’s a preponderance of post-post-apocalyptic science fiction unpacking lofty ideas like sentience and humanity, often set on different planets or among the stars. It has also been a standout year for supernatural horrors and thrillers, particularly ones that mix queer longing with a dose of body horror. Last but not least, it’s been a great year for kissing books set in fantastical worlds.

RELATED

Looking for more recs? Here are our favorite books of 2022
So jump in and take your pick. Whichever direction you head in, it will be sure to grip you — and make you think. This list is in reverse chronological order, so the newest releases are listed first. We updated this list throughout 2023, sometimes retroactively adding in entries that we missed from earlier in the year. We’ve also included our favorite runners-up.

HONORABLE MENTIONS
Emily Wilde’s Encyclopaedia of Faeries by Heather Fawcett, Victory City by Salman Rushdie, The Crane Husband by Kelly Barnhill, The Mimicking of Known Successes by Malka Older, Monstrilio by Gerardo Sámano Córdova, White Cat, Black Dog by Kelly Link, Divine Rivals by Rebecca Ross, Our Hideous Progeny by C.E. McGill, The Cheat Code (Wisdom Revolution #3) by Misba, The Deep Sky by Yume Kitasei, Silver Nitrate by Silvia Moreno-Garcia, Vampires of El Norte by Isabel Cañas, Prophet by Sin Blaché and Helen Macdonald, Terrace Story by Hilary Leichter, Her Radiant Curse by Elizabeth Lim, Starling House by Alix E. Harrow, System Collapse (The Murderbot Diaries #7) by Martha Wells, Dark Heir (Dark Rise #2) by C.S. Pacat

Cover image for Ed Park’s Same Bed Different Dreams, a split image between what looks like Earth and Mars.
Image: Random House
SAME BED DIFFERENT DREAMS BY ED PARK
Same Bed Different Dreams is a remarkable achievement, and not for the faint of heart. Through three storylines, the book creates a kind of speculative history of Korea, with an emphasis on World War II and Japan’s colonial rule and aftermath (and, crucially, the United States’ involvement). One story thread builds out a hefty alternative history of the Korean Provisional Government’s role and reach. Another story thread focuses on a Black Korean War vet who wrote a sci-fi epic series called 2333, which is later adapted into a video game. And yet another story thread has a more futuristic flavor, focusing on a has-been writer who now works for a tech company called GLOAT. These threads periodically intersect — for example, GLOAT ends up owning the rights to 2333, and turns it into a kind of edutainment.

If it sounds like there’s a lot going on, it’s because there is. And it’s made even denser by the author’s Pynchonian sense of humor. Some of its best moments are utterly weird or feel like the writer was smirking — like a character’s dog who can’t stop “archiving” by burying found manuscript pages, the fact that GLOAT employees truly don’t know what the acronym stands for, or the idea that Marilyn Monroe is a member of the Korean Provisional Government. These absurd bits only make it harder to comb apart what’s real and what’s Ed Park’s “alternate history” in sections with realistic-sounding combinations of fact and fiction.

It’s got the same ambitious patchwork as Jennifer Egan’s The Candy House and Namwali Serpell’s The Old Drift. Critics have compared it to everything from David Mitchell’s Cloud Atlas to David Foster Wallace’s Infinite Jest. There’s also, of course, books within the book. It’s a fever dream of a thing, and one I’d heartily recommend, but perhaps with a notebook in hand or some sticky notes to help track the references. (Or perhaps, as I did, just letting the wave of information roll over you, until you’re left with a vast impression and a desire to reread.) —Nicole Clark

Cover image for Kylie Lee Baker’s The Scarlet Alchemist, featuring a woman in a red outfit with a large crown set against a dark skyline.
Image: Inkyard Press
THE SCARLET ALCHEMIST (THE SCARLET ALCHEMIST #1) BY KYLIE LEE BAKER
Do not go into The Scarlet Alchemist expecting typical YA fare. What Kylie Lee Baker delivers is a story of visceral brutality, interlaced with elements of Chinese history and thoughtful meditations on family, race, and belonging. It’s a book that can turn your stomach as easily as it can break your heart.

Set in an alternate Tang dynasty, the novel follows Zilan, a profoundly talented young alchemist who travels to the capital in hopes of landing a coveted position in the royal service. But being a poor, half Scotian girl means the odds are stacked inordinately high against her in the imperial service exams — and that’s before her skills with the illegal art of resurrection catch the prince’s attention and pull her into a dangerous political game. While the premise seems familiar (underdog competes in trials, falls into star-crossed romance), Baker’s skills with immersive world-building, knotty characters, and genuinely gruesome horror make The Scarlet Alchemist a dazzling and singular tale that left me rushing to read her back catalog. —Sadie Gennis

Cover image of C Pam Zhang’s Land of Milk and Honey, featuring rollicking hills of white, blue, and yellow.
Image: Riverhead
LAND OF MILK AND HONEY BY C PAM ZHANG
After I read How Much of These Hills is Gold in 2020, C Pam Zhang became an instant must-read author in my household. Land of Milk and Honey is entirely unlike her debut — where her debut’s language was sparse and pointed, this book is florid and indulgent — though similar in the extent to which it transported me somewhere entirely new, and more than a little threatening.

In Land of Milk and Honey the climate apocalypse has rendered fresh produce, at scale, a thing of the past — which is to say a provision of the extremely rich. The protagonist, listless and hungry, applies for a job as a private chef for a mysterious family in the Italian Alps (those who live around it call it “​​la terra di latte e miele”). While there, she unravels the family’s true intentions, while making them delicious meals from rare ingredients.

Zhang sensuously describes all pleasures of the tongue, moving from descriptions of lapping of culinary delicacies to the folds of the flesh. Food feels hyperreal, with an emphasis on the texture and taste of every ingredient — and sometimes the cruelty of that ingredient’s procurement. The same can be said of its scenes depicting queer intimacy; that texture and taste take precedent, and the cruelties of human emotion, too. Even after I finished, I was hungry for more. —N. Clark

Cover image for Megan Kamalei Kakimoto’s Every Drop is a Man’s Nightmare, featuring a red and yellow flower against a painted backdrop.
Image: Bloomsbury
EVERY DROP IS A MAN’S NIGHTMARE BY MEGAN KAMALEI KAKIMOTO
This short story collection initially caught my attention with its cover, which depicts a woman springing up from the center of a corpse flower, like a stalk standing against the wind. Each story weaves together Hawaiian mythology and the everyday lives of the Hawaiian and mixed-race Japanese women who live there.

These stories range from fabulism to science fiction, all speculative fiction in their own way. In one story, a woman’s encounter with a wild pig ends up foreshadowing a complicated pregnancy later in her life. In another story, a Brazilian waxing company allows people to pay for hairless skin by giving up personality traits. In another story, the narrator falls for a woman who lives with her family — in one of numerous queer stories in the collection — but has to cope with that woman’s decision to return to “what remains of Kaua’i” and join their protests.

The author’s own words, published in The Guardian, sum it up best: “There is a mythical idealisation of the islands of Hawaii as paradise, peace in the tropics; some even call it a modern utopia. Yet this flattening of Hawaii to a postcard image divests our homeland of its culture and colour, reducing us to a place and history that is easily digestible. But we are not easily digestible, and our stories are not meant to be easy for you.” —N. Clark

Cover image for Shelley Parker-Chan’s He Who Drowned the World, a painted image of ships on a yellow sea, with the moon looming over them.
Image: Tor
HE WHO DROWNED THE WORLD (THE RADIANT EMPEROR #2) BY SHELLEY PARKER-CHAN
An alternate history of the founding of the Ming dynasty, He Who Drowned the World shifts between four tragically ambitious figures willing to pay any price to materialize their destiny, whether that’s revenge on the empire or crowning themselves the ruler of it. They pursue these goals with unshakeable inertia, doing endlessly cruel and sadistic actions with only the occasional doubts as to whether happiness could be possible if they chose a different path.

This is a relentlessly brutal sequel, and there’s a hopelessness that weighs heavy throughout the book. But Parker-Chan’s penetrating ability to bring empathy and nuance into even the darkest corners of humanity sparks an undeniable connection with these characters, whose self-destructive natures would otherwise be too hard to bear witness to. He Who Drowned the World is a dark and difficult read, yet Parker-Chan’s prose is so brilliant, her character work so complex, that I still found myself sad to leave this world behind. —SG

Cover image for M.A. Carricks’s Labyrinth’s Heart, featuring a mask-wearing figure with purple wings sprouting out of the top of the mask.
Image: Orbit
LABYRINTH’S HEART (ROOK & ROSE #3) BY M.A. CARRICK
One of my favorite fantasy series of the past five years, Rook & Rose is an intricately layered trilogy where there are so many secrets, schemes, and conspiracies that at times it’s admittedly difficult to keep track of them all. Because of that, there were a lot of loose ends to tie up in the anticipated conclusion, Labyrinth’s Heart. (Ren alone was juggling four different identities at the novel’s start.) So imagine my surprise when I discovered M.A. Carrick not only managed to leave no question unanswered by the series’ end, but wrapped up even the most complicated storylines in big, bright bows.

There are elements of Labyrinth’s Heart that feel like they were precisely crafted to cater to fans, but here’s the thing: I don’t really care. Carrick created such a lush world populated by lovable characters, an interesting magic system, and a lived-in cultural history that I was just happy to be back in Nadežra after a two-year wait. While things may have been tied up a bit too neatly for my usual tastes, that didn’t stop me from whipping through pages and smiling the whole way through. Sometimes it’s nice to simply soak in a happy ending rather than bathe in the bittersweet. —SG

Cover art for Kiersten White’s Mister Magic, which features a melting television against a pink background.
Image: Del Rey Books
MISTER MAGIC BY KIERSTEN WHITE
The latest fantasy-with-an-irresistible-pop-premise from the author of Hide, Mister Magic revolves around a children’s TV show no viewer can forget … or prove it ever existed in the first place. There are no official records of it, no YouTube videos or merchandise or passed-around VHS tapes, and any discussion of it on the internet rapidly disappears. But the people who remember seeing it are convinced the special effects were remarkably vivid and realistic. They agree the central concept is unnerving: a creepy magician-figure leading a group of children in imagination-games aimed at teaching some decidedly non-standard lessons about embracing conformity and meekness. And they’re all sure that something horrible happened while they were watching, though they can’t agree on what.

A reunion between five of the former child cast members, taking place 30 years after the show ended, slowly unravels its mysteries, which are even weirder than the description above suggests. Mister Magic is a startling dark fantasy with a lot of foreboding, foreshadowing, and eerie twists. At heart, though, it’s also an incisive story about the kinds of people who revel in control over other people’s lives, and about what an act of rebellion imagination can be. —Tasha Robinson

Cover image for Rebekah Bergman’s The Museum of Human History, featuring a painted image of a naked figure with a red cloud over the top of their head.
Image: Tin House
THE MUSEUM OF HUMAN HISTORY BY REBEKAH BERGMAN
A poetic reflection on memory, loss, and connection, The Museum of Human History is a stunning debut reminiscent of the work of Emily St. John Mandel. Slipping backward and forward in time, this introspective mosaic weaves between an identical twin whose sister fell asleep at age 8 and has never aged in the 25 years since, a museum director who questions his place within the family legacy, a widower who lost his most cherished memories as a result of an anti-aging treatment, and others equally struggling with the passage of time. There is a lyrical detachment in Bergman’s prose that leaves you feeling like you’re watching events unfold through a pane of thick glass, never fully able to connect with the characters, yet you remain helplessly transfixed by the haunting cycle they’re caught in. It’s an incredibly melancholy book, but the kind of aching sadness you’re happy to sink into. —SG

Cover image for Sara Hashem’s The Jasad Heir, featuring what looks like statues of a snake,, a bull, and a griffin.
Image: Orbit Books
THE JASAD HEIR (THE SCORCHED THRONE #1) BY SARA HASHEM
“Arin of Nizahl was maddeningly elegant. I wanted to cut him open and compare our bones to understand why his gave him grace and mine gave me back pain.” This was the line that absolutely sold me on The Jasad Heir, an irresistible enemies-to-lovers fantasy that reminded me why I’ll never quit this genre.

Headstrong Sylvia is the presumed dead heir of Jasad, a kingdom that was destroyed by the neighboring Nizahl and saw its citizens’ innate magic outlawed. Sylvia managed to carve out a relatively normal life for herself as a chemist’s apprentice, but everything falls apart after she accidentally reveals her magic to the heir of Nizahl. Using her life as leverage, the calculating Arin strikes a deal with Sylvia to help him capture a group of Jasadi rebels and act as his champion in a series of deadly trials. It’s a familiar setup, but one impeccably done by Hashem, who delivers sharp political intrigue, sparkling banter, and touching friendships on top of Sylvia and Arin’s simmering romance. —SG

Cover image for Kritika H. Rao’s The Surviving Sky, featuring a floating island overgrowing with buildings and plant life, above a stormy planet.
Image: Titan Books
THE SURVIVING SKY (THE RAGES TRILOGY #1) BY KRITIKA H. RAO
After I finished The Surviving Sky, I wouldn’t shut up about it and tried (not always successfully) to get everyone I know to read it. So let me try once more, and maybe with less yelling this time:

With the planet’s surface made unlivable by catastrophic storms, the remains of humanity survive on floating cities constructed of and powered by plants that only a select group of people, known as architects, can control. An archeologist without the ability to traject plants, Ahilya has dedicated her life to finding a way to unshackle humanity’s survival from the architects’ powers and return to the surface. It’s not hard to see why this mission causes friction in her marriage to Iravan, one of the most powerful architects in their city, and one with an arrogance to match his revered status. Though estranged, Ahilya and Iravan come together to help clear his name after he’s accused of pushing his powers dangerously far, an accusation, which if proved true, carries dire consequences for the architect.

But the deeper they look into trajection and its risks, the more Ahilya and Iravan realize they don’t actually know much about where their people – and their powers – came from. And as the floating cities begin to sink toward the earthrages below, the race to save their civilization may also be the end of society as it stands, as Ahilya and Iravan uncover long-buried truths that previous generations worked hard to keep hidden.

So did I do it? Did I convince you to read this Hindu philosophy-inspired debut with some of the most inventive world-building and one of the most complex romances I’ve read in years? Please say yes. You’ll be doing us both a favor. —SG

Cover image for Alexander Darwin’s The Combat Codes, which features a metallic dragon against a black background.
Image: Orbit
THE COMBAT CODES AND GRIEVAR’S BLOOD (THE COMBAT CODES SAGA #1-2) BY ALEXANDER DARWIN
In the world of The Combat Codes, war no longer exists as it used to. Neither does justice — both concepts have been replaced by proxies who fight on behalf of nations or individuals, solving disputes with their fists.

Alexander Darwin’s debut novel effectively builds a world around this core concept, bringing it to life with compelling characters and locations (including a classic “magical school for gifted youngsters” situation). The Combat Codes follows Cego, a young abandoned boy skilled at fighting, and Murray, a washed-up former fighter now tasked with scouting the next generation of combatants, whose discovery of Cego changes his entire world.

Darwin is also a Brazilian jiu-jitsu practitioner and teacher, and uses that experience in the books’ excellent fight sequences. His evocative and visceral descriptions not only deliver excitement and suspense in this underdog story; they build your understanding of the characters through how they fight. The Combat Codes and its equally fun sequel, Grievar’s Blood, which adds new exciting characters and points-of-view, are the first two parts of a planned trilogy, and I can’t wait for the conclusion next year. —Pete Volk

Cover image for Katie Williams’ My Murder, showing a woman’s face peering outside of red vertical lines.
Image: Riverhead Books
MY MURDER BY KATIE WILLIAMS
Fans of Sarah Gailey’s The Echo Wife won’t want to miss My Murder, which shares some key elements and themes with Gailey’s novel while also taking them in a unique direction. In a near-future with only a few light sci-fi elements, Lou has been resurrected along with a handful of other women murdered by a single serial killer. The politics of resurrection in her world are complicated, and few people qualify. That leaves her and her fellow victims (whose therapy circle recalls Grady Hendrix’s The Final Girl Support Group) a bit at sea as they try to come to terms with their deaths, which none of them can recall, and their new lives as celebrities for all the wrong reasons.

Like The Echo Wife, My Murder ends up thoughtfully exploring issues around women subjected to violent men — not just the personal and internal response, but the society that shapes that violence, and responds to it in ways that raise endless questions. The victims all respond to their deaths differently, questioning their culpability and the possible failures that might have made them targets, and navigating their families’ unpredictable responses to their revival. There’s one big mystery at the heart of My Murder, and a whole lot of abrupt and compelling surprises. But at the core, it’s a sci-fi twist on the survivor story, letting some very different people explore what it means to be victimized, and how to reclaim the lives that have been abruptly handed back to them. —TR

Cover image for Ann Leckie’s Translation State, a minimalist drawing with red, orange, and green, a silhouette of a person, and circular lines.
Image: Orbit
TRANSLATION STATE BY ANN LECKIE
Set in the same universe as Leckie’s Imperial Radch trilogy, Translation State follows Enae, who leaves hir long-standing isolation for what was supposed to be an interstellar goose chase. After hir demanding grandmaman dies, Enae is given a diplomat title and assigned to investigate a missing Presgr translator no one expects to be found (but that the government still wants the goodwill for pretending to look for). Only, Enae doesn’t just pretend to look; sie discovers sie has quite the knack for investigating the 200-year-old cold case.

This is how hir path crosses that of Reet, an adopted maintenance worker whose mysterious origins and unsettling impulses might be explained by being the child of the fugitive translator, if you ask Enae, or the last descendant of a lost sovereign line, if you ask one particularly zealous diaspora social group. Rounding out the POV characters is Qven, a young Presgr terrified of their species’ ritual of merging with an elder, a rite of passage which will see Qven’s selfhood entirely dissolved. Enae, Reet, and Qven’s explorations of their own identities wind up having interplanetary consequences, but it’s the way Leckie gives weight to the small moments, both personal and shared, that make this book sing.

Though I’m sure there are layers that only those familiar with the Imperial Radch trilogy will notice and appreciate, the standalone Translation State and its rich exploration of self-identification and personhood serve as a fantastic introduction to Leckie’s world. So don’t hesitate to jump into Translation State if you’re – like me – new to Radch and simply drawn to a thrilling mystery where the most intimate emotions can fuel a universal upheaval. —SG

Cover image for Rita Chang-Eppig’s Deep as the Sky, Red as the Sea, with facial features set against a crashing wave.
Image: Bloomsbury Publishing
DEEP AS THE SKY, RED AS THE SEA BY RITA CHANG-EPPIG
I still remember standing in my local bookstore, struck by the cover of this book, and reading the summary. It had me at “Chinese pirate queen.”

In Deep as the Sky, Red as the Sea, Chang-Eppig writes a historical fantasy about Shek Yeung, a fearsome Chinese pirate who must navigate her fleet after the death of her powerful husband. She marries her late husband’s second-in-command, with the promise of bearing an heir, in order to retain power over the fleet — and stay a major player as the Chinese Emperor seeks to rid the waters of piracy.

The book isn’t paced like a thriller, so don’t make the mistake of assuming so when you start it. It’s equal parts historical exposition, strategy, and warfare — and it especially excels in its characterization of a complicated woman forced to make difficult decisions and sacrifices in order to protect her power. Fantasy can put its villains and heroes on pedestals, but Deep as the Sky, Red as the Sea never errs in its very human portrayal of Shek Yeung, and how deftly she must play this game of political chess for survival. I was riveted. —N. Clark

Cover art for Emma Törzs’ Ink Blood Sister Scribe, featuring a dripping pen growing out of the bottom of a tree against a purple background.
Image: William Morrow
INK BLOOD SISTER SCRIBE BY EMMA TÖRZS
There’s nothing cozier than a magical book about the magic of books — though this tale bends a little darker, and tells a story about witchcraft and complicated family dynamics. In Ink Blood Sister Scribe, two estranged sisters come together to solve the mystery of their family, and prevent further tragedies. In this world, blood can be concocted into ink — wielded by scribes for the creation of books with arcane powers — though the creation of such books drains a scribe’s health. When others read these books, they create magic; willing flowers to bloom, or making magical carpets that can fly in the air.

Ink Blood Sister Scribe is the perfect sister thriller to read in one sitting. It doesn’t reinvent the wheel, but it doesn’t need to — it simply delivers on a wonderfully entertaining premise. —N. Clark

Cover art for Martha Wells’ Witch King, featuring a person running across the cover while wearing a cloak and dress fitting for a fantasy setting.
Image: Tor
WITCH KING BY MARTHA WELLS
In an era where a lot of fantasy fans value quick or cozy reads, Martha Wells’ Witch King feels like a gauntlet thrown at readers’ feet. It’s a complex, meaty fantasy that opens well into what a more linear book would consider the third act, as Kai, the witch king of the title, is exhumed from a watery grave and starts exploring who betrayed him and trapped him there. Readers have to learn everything about Kai’s world as his story unfolds in multiple intertwined timelines. That includes figuring out what a “witch king” is, unwrapping the layers of what Kai actually is and why it matters. It also means being introduced to a wide variety of allies and enemies while alternately flashing back to how he met them, and slowly coming to understand the dense political machinations that shaped all their lives in the past and present.

As with Wells’ Murderbot books and her Books of the Raksura series in particular, part of the draw here is a powerful, skilled protagonist whose biggest struggles are often internal. Kai has a lot of intense emotional responses to the world, but lacks the tools to understand what to do with those feelings, or who to trust with them. Wells packs Witch King with a lot of audacious, expansive world-building for a standalone novel (albeit one that could easily invite sequels or prequels), but what makes Witch King an enjoyable read instead of a frustrating one is the way all the book’s complications and surprises are filtered through Kai’s vivid inner life, giving readers something to hold onto as they’re untangling the puzzlebox aspects of this cleverly structured novel. —TR

Cover image for Justin Lee Anderson’s The Lost War, featuring five figures walking through white grass after emerging from a dark green forest. Three of the figures wear green cloaks, while two wear white.
Image: Orbit
THE LOST WAR (THE EIDYN SAGA #1) BY JUSTIN LEE ANDERSON
Originally self-published in 2019, The Lost War is a traditional fantasy adventure that follows a rag-tag group of strangers on a mission across a war-torn country, fighting monsters and uncovering mysteries along the way. Despite the strong buzz leading up to the novel’s expanded publication by Orbit this year, I found myself hesitant to pick it up since it seemed so similar to many books I’ve read before. But while it’s true The Lost War doesn’t rewrite the genre – it’s filled with well-worn tropes and classic adventurer archetypes – Anderson’s skillful execution left me completely charmed. There is a real Dungeons and Dragons feel to The Lost War, and though the characters are familiar (the honorable paladin, the hard-drinking haunted soldier), Anderson does a fantastic job developing unique dynamics between the party members that vault the book beyond the sum of its parts. And it all builds up to a massive twist at the end that completely upends your understanding of what you’ve read and any previous expectations for where the second book will go. The delightfully unexpected ending once again has the fantasy community buzzing ahead of Anderson’s next release – only this time I’m right there with them. —SG

Cover image for Moniquill Blackgoose’s To Shape a Dragon’s Breath, a red cover with flowers and a dragon’s head/mask on it.
Image: Del Rey
TO SHAPE A DRAGON’S BREATH (NAMPESHIWEISIT #1) BY MONIQUILL BLACKGOOSE
To Shape a Dragon’s Breath’s description hooked me immediately: It’s got dragons, a magic school, and a strong teenage main character. Moniquill Blackgoose has taken several different fantasy tropes and created a fantasy novel that’s unlike anything I’ve read; To Shape a Dragon’s Breath is set in an evolving steampunk world as Anglish settlers push the Indigenous Masquapaug people out of their land and onto a remote island. Dragons had long been important cultural touchstones to the Indigenous people, but colonization has, too, pushed them away. To Shape a Dragon’s Breath begins as 15-year-old Anequs finds a dragon egg — the first to be spotted in the area in generations. Anequs is named a Nampeshiweisit, or a dragon rider, as the community helps raise and hatch the dragon’s egg.

The colonizing nation quickly finds out and forces Anequs and her dragon into the Anglish dragon school; if she resists, the dragon will be eliminated. To Shape a Dragon’s Breath is about the growing relationship between her and her dragon Kasaqua, but also about her resistance to the Anglish traditions relating to dragons. The Anglish treat dragons as something to be conquered — they use them as tools and weapons, whereas the Indigenous people have historically partnered with dragons for a relationship built on both tradition and respect.

That partnership means Anequs now has the power to take on colonialism and racism in a new way. Where To Shape a Dragon’s Breath really shines is in that growing relationship between Anequs and Kasaqua; the partnership — and power for both that comes with it — is in stark contrast to the Anglish ways. Bonus: To Shape a Dragon’s Breath has well-written, complex bisexual and neurodivergent characters, too. —Nicole Carpenter

Cover image for Melvin Burgess’s Loki, a black cover with a black snake wrapped around gold letters with the title.
Image: Pegasus
LOKI BY MELVIN BURGESS
Melvin Burgess has spent a career writing confrontationally frank children’s literature like Junk, his 1990s book about heroin-addicted teenagers. His first adult book, published at age 69, is a blistering, transgressive, and hugely entertaining reframing of the Norse myths, as told by the most unreliable narrator imaginable: Loki himself, the god of tricks, inventions, and political intrigue. But what does reliable mean, anyway, in the mutable world of myth? Burgess paints Loki (or rather, has him paint himself, as he addresses the reader directly in first person) as an eternal outsider, shaking his head sagely at the follies of the gods, and challenging their might-is-right order. But of course, that’s what he’d want us to think. Burgess’ best trick, though, is the way he rolls together the deeply weird, muddy, shape-shifting mystery of the tales themselves with a bracing modernity in characterization and language, somehow without one clashing with the other. In doing so he brings the wild, ancient power of the Norse myths to vivid life. —Oli Welsh

Cover image for Nana Kwame Adjei-Brenyah’s Chain-Gang All-Stars, featuring a scythe chopping through the words with a bright yellow background.
Image: Pantheon Books
CHAIN-GANG ALL-STARS BY NANA KWAME ADJEI-BRENYAH
In Chain-Gang All-Stars, prison inmates fight to the death in a series of gladiatorial matches — and all of it is televised to a hungry audience. It’s a program called CAPE, the Criminal Action Penal Entertainment, which promises freedom to inmates who survive three years of its brutality. The average life expectancy for anyone who enters is three months. Within this system, Loretta Thurwar and Hammara Stacker (called Hurricane Staxxx by her fans) emerge as two frontrunners.

This National Book Award finalist takes on the viciousness of the carceral system, with more than a bit of The Hunger Games’ DNA sprinkled in. “Hard action” fans salivate over matches, a self-obsessed announcer resents the fact that contestants don’t offer more banter, and the women who top the leaderboards become sex symbols in pop culture. But where other fight-to-the-death dystopias — among the greats, like Battle Royale or Lord of the Flies — spin a more fantastical yarn, Chain-Gang All-Stars is aimed right at the heart of the all-too-real cruelties of our existing for-profit penal system.

Early in the book, Thurwar kills a 16-year-old boy in a gladiator match. Fans in the stands lament not the death of the boy, but the idea that the fight wasn’t entertaining because it wasn’t a fair matchup. In a footnote, Adjei-Brenyah writes of George Stinney Jr., a 14-year-old Black boy who was convicted for murder and executed in 1944. Chain-Gang All-Stars also illustrates the ways in which imprisonment is simply “slavery by another name,” showing all manner of menial labor the contestants are forced to perform. In 2022, the ACLU reported that inmates made between 13 and 52 cents an hour, and sometimes nothing.

Critics have said this book is an “act of protest” but that it doesn’t “straightforwardly preach,” or that it’s more entertaining than “an attempt to convince its readers of the case for prison abolition has any right to be.” I understand why you’d want to say this book is “fun” despite an abolitionist message, especially in a political climate where radical writing is often appreciated only as a teaching tool. But I think that kind of delineation undercuts Adjei-Brenyah’s talent as a novelist, and his skill in heightening the real as a form of storytelling. I’d call it thrilling, over calling it fun. And the fact that it is thrilling is inextricable from its openly abolitionist values — it’s the very knowledge of real life that Adjei-Brenyah wields to craft suspense. —N. Clark

Cover image for Rebecca Yarros’ Fourth Wing, which features a circle image behind black text, with clouds and some flying creatures.
Image: Entangled
FOURTH WING BY REBECCA YARROS
This action-packed, fantasy romance feels like a grown up version of all of my favorite young adult books. It’s got all of the fun nostalgic tropes — a magical school, deadly trials, dragon riding, and a love triangle between the main character, a golden retriever love interest, and a misunderstood emo rival — but it’s also extremely horny, as all fun fantasy romance must be.

Violet Sorrengail is thrown into a series of trials in order to prove whether she can be a dragon rider. There are a few problems with this: she trained as a scribe, never thought she’d be thrust into danger, and she also must deal with Xaden Riorson, her sworn enemy (wink). She also manages a joint condition, which leaves her in chronic pain — a fact the book handles gracefully. In one of my favorite climactic moments of the book, Violet is given a mobility device to help her with her trials; those close to her remind her that it doesn’t diminish her power, but is a tool like any other, and one that allows her to flourish. I’m thrilled to read the next installment, when it comes out in November. —N. Clark

Cover art for Adrian Tchaikovsky’s Lords of Uncreation, which shows a spaceship approaching what looks like a space battle next to a planet, with exploding orbs in space and a lot of spaceships in the distance.
Image: Orbit
LORDS OF UNCREATION (THE FINAL ARCHITECTURE #3) BY ADRIAN TCHAIKOVSKY
Reading the Final Architecture series, I had to accept long ago that I would never fully grasp the nuances of some of its central concepts, even if I understood them on an instinctual level.

This acceptance set me up well for Lords of Uncreation, which revolves around concepts that even the characters find impossible to understand, and whose minds may literally break if they try to. Like looking directly into the sun, confronting the blurred space between the real and unreal (as well as the eldritch terrors that lurk within) poses a grave threat to those doing so head-on – at least to anyone other than weary intermediary Idris Tellemier, whose risk is merely reduced rather than eliminated. But the characters Adrian Tchaikovsky has populated this world with are so grounded, so emotionally rich, and so vibrant that the details of the brain-bending threats lurking within unspace become secondary to their impact on the lives of and relationships between the Vulture God’s crew.

This is not to say that Tchaikovsky does not deliver an incredibly satisfying conclusion to the mysteries of unspace (he does!). But what I’ll remember most is how he crafted the perfect emotional resolution to this intellectually intricate tale that left me in tears and has stayed with me since. —SG

Lead art for Justin Cronin’s The Ferryman, which pictures a cloudy sky over the horizon, as a single sail boat sits on the water.
Image: Ballantine Books
THE FERRYMAN BY JUSTIN CRONIN
Proctor Bennett is a ferryman, whose duty is to guide unhappy citizens from the utopian Propersa to the Nursery, where they retire their old selves before returning in younger bodies with no memories of their former lives. But when Proctor is assigned to retire his own father, the troubling encounter sends him careening off the path of conformity. He begins questioning prescribed truths and confronting the darker side of Prospera, which runs off the work of a disenfranchised support staff whose discontent is building towards a revolution that pulls Proctor into its orbit.

Though this premise may feel familiar, The Ferryman is anything but. This tightly-wound, atmospheric thriller weaves together layers of knotted mystery with Proctor’s haunting POV as he grapples with his relationship to grief, happiness, family, and identity. It’s a sharply complex mystery with a cinematic quality to it. Throughout reading, I couldn’t help but fan-cast who would star in a Christopher Nolan adaptation of it. But even if you aren’t an Inception fan, it’ll be easy to become immersed in The Ferryman’s distinct dystopian world. —SG

Cover image for Emily Tesh’s Some Desperate Glory, featuring a woman walking confidently in front of a wall opening to reveal a planetary body.
Image: Tor
SOME DESPERATE GLORY BY EMILY TESH
Around September, as the pile of unpainted plastic miniatures here in my home office began to get particularly deep, I suddenly ran out of Warhammer 40,000 Black Library audiobooks by Games Workshop that I was the least bit interested in listening to. That’s when I stumbled upon Some Desperate Glory by Emily Tesh. Billed as a space opera told from the perspective of one of humanity’s last genetically engineered super soldiers, I fell for the premise hook, line, and sinker. Then, about 50 pages in, I let it sucker-punch me right in the gut.

With Some Desperate Glory, Tesh has envisioned a deeply affecting reality where the children of a subjugated, war-torn race slowly come to realize that they have been lied to — manipulated into an amoral war of vengeance without end. Tesh shows incredible restraint throughout, reeling out a thick and binding thread of painful realizations from deep within the main character, Kyr. After grappling with my personal love for the grim darkness of the far future for quite a few years now, this book helped me come to terms with how much I despise those tropes even as I find myself drawn toward them time and time again.

Some Desperate Glory is, in my opinion, required reading for anyone who has ever painted a Space Marine in earnest – and a new fixture in the canon of queer science fiction. —Charlie Hall

Cover image for Jade Song’s Chlorine, featuring a large fin in the ocean waves.
Image: William Morrow & Company
CHLORINE BY JADE SONG
I think I have been waiting my whole life for this book — for someone to write adolescence like the body horror it is, with all of the cultural specificity of being a Chinese American girl, simply bursting at the seams with sapphic longing. Chlorine stars Ren Yu, a swimmer who believes that she is a mermaid. But she is tethered to land by her human ambition: By the parents who constantly push her to achieve, and by a swim coach who pays inappropriate attention to her — pushing her to swim faster times, while also making her feel uncomfortable in her skin.

Ren’s steadfast belief in being a mermaid feels both like a flight of fancy, and increasingly like a means of dissociating from the horrors of everyday life. Being a young girl is hard enough without having to contend with the high expectations of parents, the predation of adult men, and the casual racism of peers. Jade Song’s writing is gruesomely lyrical, contrasting the sublime with the deeply disturbing. There were several points where this book almost made me throw up, and I mean that as a high compliment. —N. Clark

A Black woman stands alone in a field, her face covered by shadow, in the cover art for Lone Women by Victor LaValle.
Image: One World
LONE WOMEN BY VICTOR LAVALLE
Adelaide Henry is traveling to Montana, where she plans on making a new life as a homesteader — leaving the flames of her California home, and the bodies of her parents, behind. But she has a heavy weight to carry. She lugs an enormous steam trunk wherever she goes; whenever the trunk opens, people around her die. In 1915, Montana is in the middle of a homestead boom, and though Adelaide aims to make a new start, not everyone is welcoming to a Black woman traveling alone.

Victor LaValle mixes horror and fantasy in this expertly paced tale. It’s satisfyingly bloody, while making incisive commentary on the price of being an outsider. The Western genre has long fixated on the white imagination, perhaps occasionally making space for the early struggle of the suffragettes. But LaValle’s vision of history emphasizes just how powerful white women are in upholding the interests of their white husbands, and how far these women will go to protect the societal structures that put them in proximity to power. Lone Women also examines how shame, and the family unit, ultimately uphold these unspoken rules — ostracizing those who might otherwise find community support.

This book was so good that I am now reading my way through every interview LaValle has given on the Lone Women press circuit, too, and then reading every book he references. What a gift! —N. Clark

Cover image of Nathan Ballingrud’s The Strange, depicting a diner on Mars.
Image: Gallery/Saga Press
THE STRANGE BY NATHAN BALLINGRUD
Nathan Ballingrud’s debut novel was added to my TBR pile after seeing it marketed as a blend of Ray Bradbury’s The Martian Chronicles and Charles Portis’ True Grit. I’m always dubious about marketing comparisons, but was thrilled when The Strange delivered on this high promise.

In an alternate history where humanity colonized Mars in the early 1900s, the red planet has lost all communication with Earth, leaving the fate of 14-year-old Annabelle Crisp’s mother unknown. When a thief steals Annabelle’s sole voice recording of her mom, she and her beloved Kitchen Engine, Watson, set off into the desert to retrieve what’s hers and see justice served. The longer Annabelle’s adventure goes on, the more she loses perspective and drifts away from righteousness in dogged pursuit of her own selfish desires. Struggling to comprehend that the world can’t be divided into binaries like right or wrong and black or white, Annabelle converts her fear into anger, lashing out and harming those around her, including those providing aid.

Annabelle can be vengeful and cruel, and though I often disagreed with her choices, Ballingrud makes it impossible not to understand and empathize with her. Annabelle Crisp isn’t a hero and she isn’t a villain, but she is an outstanding protagonist in a wonderfully original sci-fi tale. —SG

Cover image for Moses Ose Utomi’s The Lies of the Ajungo, featuring a figure walking upside down on mounds of sand as a castle lurks in front.
Image: Tor
THE LIES OF THE AJUNGO (THE FOREVER DESERT #1) BY MOSES OSE UTOMI
In his debut novella, Moses Ose Utomi wields his precise prose to tell a dark, visceral fable about a young boy from the City of Lies, a metropolis reliant on the brutal Ajungo Empire for their supply of water. But the cost of this trade is high: At 13, every child of the City of Lies has their tongue cut out and sent to the Ajungo.

Even with this gruesome tithe, the Ajungo send barely enough water for the population to survive, and far from what they’d need to do so comfortably, let alone thrive. Shortly before his thirteenth birthday, the brave Tutu sets out on a dangerous journey to save his mother and the city by finding their own water supply. As Tutu explores the outside world for the first time, his perception of truth and history is challenged, and he comes to understand how the decisions and deceptions of those in power rewrite the past and shape the future to uphold those with privilege and foster compliance in those who don’t. —SG

Cover image for Edward Ashton’s Antimatter Blues, A Mickey7 Novel. It features an astronaut from behind on a rocky planet, looking out at another planet in the distance.
Image: St. Martin’s Press
ANTIMATTER BLUES BY EDWARD ASHTON
Edward Ashton’s sequel to Mickey 7, the 2022 novel Parasite director Bong Joon-ho is adapting as a movie starring Robert Pattinson, takes up two years after the first book left off, with “Expendable”-status planetary colonist Mickey still on the outs with the leadership of his struggling colony after a gutsy bluff he made to ensure his own survival. The sixth clone of the original Mickey, who accepted life as a disposable body for suicide missions in exchange for a ticket to space, Mickey 7 has walked off that job. His ongoing draw on the colony’s resources is only tolerated because he’s exaggerated his diplomatic connections with the local aliens. Then the base commander orders him to do something impossible, or the entire colony will die.

Antimatter Blues is knottier than the first book in the series, with more to take in about the ethics of survival and humanity’s predisposition toward xenophobia and selfish, self-serving behavior. It sure isn’t a pleasant book to read: A lot of Mickey’s co-colonists are bigots, most of them are indifferent to anyone else’s suffering, and at times, the book reads as though Earth deliberately sent all the worst people into space, the better to be free of them. Even Mickey himself is, at absolute minimum, generally more focused on his own safety and comfort than on the horrific results of some of his choices. But as soon as he’s placed in what seems like an unsurvivable situation, that dynamic leads to high drama, and Antimatter Blues becomes a breathless book rocketing to a surprising conclusion. Prepare to feel sorry for various alien races who have to deal with icky humanity. —TR

Cover image for Samantha Shannon’s A Day of Fallen Night, a colorful image with a a dragon swirling around it
Image: Bloomsbury
A DAY OF FALLEN NIGHT (THE ROOTS OF CHAOS #0) BY SAMANTHA SHANNON
Samantha Shannon’s A Day of Fallen Night is her second book in the Roots of Chaos series, but a prequel to The Priory of the Orange Tree. Like The Priory of the Orange Tree, A Day of Fallen Night is an epic, far-flung fantasy novel set in a world of magic and dragons. A Day of Fallen Night is set hundreds of years before The Priory of the Orange Tree, and follows several of the original book’s ancestors as the world fears the return of an evil wyrm, the Nameless One. You don’t have to have read The Priory of the Orange Tree to enjoy A Day of Fallen Night; in fact, it’s likely a good place to start if you’ve been interested in reading Shannon’s original, massive fantasy book. Of course, this is a slow-burn 800-page book that precedes another 800-page book, so it’s definitely a time investment regardless of the path.

Though A Day of Fallen Night deals with a world-shaping, cataclysmic threat and widespread political machinations, the book is rooted within four characters from around the book’s world: Sabran, Glorian, Dumai, and Tunuva Melim. The stories of these characters intertwine as their regional beliefs tied to wyrms and dragons conflict, muddying up the necessary collaboration in fighting off the looming threat. In between all that catastrophe, Shannon gives the women of the book rich stories of personal relationships, sacrifice, and conflicting feelings. Motherhood and bodily autonomy are also strong themes throughout the book; both Sabran and Glorian (mother and daughter) have their bodily autonomy tied to the fate of their region.

It’s not easy to describe A Day of Fallen Night in a short blurb — it does so many things and goes so many places. Shannon’s created a series that has the scale of The Lord of the Rings, wrapped up in a world of queer, female power. The Roots of Chaos, as a whole, is one of my favorite fantasy series ever. —N. Carpenter

Cover image for Mariana Enriquez’s Our Share of Night, featuring a red hand with long yellow fingernails.
Image: Hogarth Press
OUR SHARE OF NIGHT BY MARIANA ENRÍQUEZ
This literary tome defies categorization, so I’ll paint a scene instead: A father (Juan) whisks his son (Gaspar) away on a trip. Juan is mercurial; at turns terrifying and violent, at turns bewilderingly tender, nearly infinite in love. But he is a closed book. And if you think you’ve seen his hands elongate, spindly fingers yielding to piercing claws — well no, you didn’t.

Slow, dreadful, and razor-sharp, Our Share of Night charts a family’s desperate attempt at escaping the clutches of a death cult in Argentina. Its members seek the secrets of immortality, and many are willing to pay any price to obtain it. Set in 1981, the novel’s supernatural terrors intertwine with those of the Dirty War, the authoritarian violence offering cover for the cult to operate uninhibited.

I will read anything Mariana Enríquez writes next, it’s an absolute joy to experience her work. —N. Clark

Cover image for Annalee Newitz’s The Terraformers, which features a futuristic cityscape with lush greenery.
Image: Tor Books
THE TERRAFORMERS BY ANNALEE NEWITZ
The Terraformers concerns itself with one question: As a species evolves, what behaviors stick around? Set more than 50,000 years in the future (yes, you read that number right), The Terraformers details the process of terraforming and developing a privatized planet into a tourism joint for the super rich. Technology has advanced in barely fathomable ways, allowing, for instance, the extension of human-level intelligence to animals and robots. But some aspects of society might seem familiar: Real estate developers who jack up rent with no warning? Local governments that abhor public transit? That every video call still has one person who can’t get the camera to work?

Equal parts prescient and absurd, The Terraformers splits its story over three novellas, each 700 years apart. One of those stars a sentient train who teams up with an investigative journalist ... who also happens to be a cat ... who’s also trying to prove this ostensibly privatized planet is in fact public land. Written by a leading science journalist of our era (author Annalee Newitz is the founder of io9 and has written for basically every major science publication under our sun), The Terraformers is unexpectedly one of the most accurate representations of the journalistic process I’ve ever read. And it all culminates in an undeniable stance: That capitalistic power must still be held in check by the truth. Even 50,000 years in the future, a free press is among society’s most essential facets. The more things change... —Ari Notis

The cover image of Adrian Tchaikovsky’s Children of Memory, which depicts a spaceship approaching a large orange planet.
Image: Orbit
CHILDREN OF MEMORY (CHILDREN OF TIME #3) BY ADRIAN TCHAIKOVSKY
Adrian Tchaikovsky’s highly anticipated third book in the Children of Time trilogy once again delves into some of science fiction’s headiest topics. There are parallels to earlier installments — Tchaikovsky once again uses another hyper-intelligent animal species to examine the idea of what being “alive” really means. But he also takes readers somewhere completely and utterly new, outside the scope of the previous titles, and incredibly difficult to describe without spoiling the premise entirely.

All I can say is hold on for the ride. This is an author who dives head first into Asimov-esque ideas, and who is willing to take the plot in fanciful directions. I still can’t believe that I have recommended a book about sentient spider colonies to so many friends, but here we are. This finale is worth your time. —N. Clark",Which books contain multiple narratives?,"The books 'Same Bed Different Dreams', 'EVERY DROP IS A MAN’S NIGHTMARE', 'The Museum of Human History', 'Witch King', and 'The Terraformers' each use multiple narratives.","""Same Bed Different Dreams', 'Every Drop is a Man's Nightmare', 'The Museum of Human History', 'Witch King', and 'The Terraformers' each feature multiple narratives.""","'The Scarlet Alchemist', 'Land of Milk and Honey', 'Deep as the Sky, Red as the Sea', 'To Shape a Dragon’s Breath', and 'Chain-Gang All-Stars' contain multiple narratives."""
11,"Which GPU(s) to Get for Deep Learning: My Experience and Advice for Using GPUs in Deep Learning
2023-01-30 by Tim Dettmers 1,664 Comments

Deep learning is a field with intense computational requirements, and your choice of GPU will fundamentally determine your deep learning experience. But what features are important if you want to buy a new GPU? GPU RAM, cores, tensor cores, caches? How to make a cost-efficient choice? This blog post will delve into these questions, tackle common misconceptions, give you an intuitive understanding of how to think about GPUs, and will lend you advice, which will help you to make a choice that is right for you.

This blog post is designed to give you different levels of understanding of GPUs and the new Ampere series GPUs from NVIDIA. You have the choice: (1) If you are not interested in the details of how GPUs work, what makes a GPU fast compared to a CPU, and what is unique about the new NVIDIA RTX 40 Ampere series, you can skip right to the performance and performance per dollar charts and the recommendation section. The cost/performance numbers form the core of the blog post and the content surrounding it explains the details of what makes up GPU performance.

(2) If you worry about specific questions, I have answered and addressed the most common questions and misconceptions in the later part of the blog post.

(3) If you want to get an in-depth understanding of how GPUs, caches, and Tensor Cores work, the best is to read the blog post from start to finish. You might want to skip a section or two based on your understanding of the presented topics.

Contents  hide
Overview
How do GPUs work?
The Most Important GPU Specs for Deep Learning Processing Speed
Tensor Cores
Matrix multiplication without Tensor Cores
Matrix multiplication with Tensor Cores
Matrix multiplication with Tensor Cores and Asynchronous copies (RTX 30/RTX 40) and TMA (H100)
Memory Bandwidth
L2 Cache / Shared Memory / L1 Cache / Registers
Estimating Ada / Hopper Deep Learning Performance
Practical Ada / Hopper Speed Estimates
Possible Biases in Estimates
Advantages and Problems for RTX40 and RTX 30 Series
Sparse Network Training
Low-precision Computation
Fan Designs and GPUs Temperature Issues
3-slot Design and Power Issues
Power Limiting: An Elegant Solution to Solve the Power Problem?
RTX 4090s and Melting Power Connectors: How to Prevent Problems
8-bit Float Support in H100 and RTX 40 series GPUs
Raw Performance Ranking of GPUs
GPU Deep Learning Performance per Dollar
GPU Recommendations
Is it better to wait for future GPUs for an upgrade? The future of GPUs.
Question & Answers & Misconceptions
Do I need PCIe 4.0 or PCIe 5.0?
Do I need 8x/16x PCIe lanes?
How do I fit 4x RTX 4090 or 3090 if they take up 3 PCIe slots each?
How do I cool 4x RTX 3090 or 4x RTX 3080?
Can I use multiple GPUs of different GPU types?
What is NVLink, and is it useful?
I do not have enough money, even for the cheapest GPUs you recommend. What can I do?
What is the carbon footprint of GPUs? How can I use GPUs without polluting the environment?
What do I need to parallelize across two machines?
Is the sparse matrix multiplication features suitable for sparse matrices in general?
Do I need an Intel CPU to power a multi-GPU setup?
Does computer case design matter for cooling?
Will AMD GPUs + ROCm ever catch up with NVIDIA GPUs + CUDA?
When is it better to use the cloud vs a dedicated GPU desktop/server?
Version History
Acknowledgments
Related
Related Posts
Overview
This blog post is structured in the following way. First, I will explain what makes a GPU fast. I will discuss CPUs vs GPUs, Tensor Cores, memory bandwidth, and the memory hierarchy of GPUs and how these relate to deep learning performance. These explanations might help you get a more intuitive sense of what to look for in a GPU. I discuss the unique features of the new NVIDIA RTX 40 Ampere GPU series that are worth considering if you buy a GPU. From there, I make GPU recommendations for different scenarios. After that follows a Q&A section of common questions posed to me in Twitter threads; in that section, I will also address common misconceptions and some miscellaneous issues, such as cloud vs desktop, cooling, AMD vs NVIDIA, and others.

How do GPUs work?
If you use GPUs frequently, it is useful to understand how they work. This knowledge will help you to undstand cases where are GPUs fast or slow. In turn, you might be able to understand better why you need a GPU in the first place and how other future hardware options might be able to compete. You can skip this section if you just want the useful performance numbers and arguments to help you decide which GPU to buy. The best high-level explanation for the question of how GPUs work is my following Quora answer:

Read Tim Dettmers‘ answer to Why are GPUs well-suited to deep learning? on Quora
This is a high-level explanation that explains quite well why GPUs are better than CPUs for deep learning. If we look at the details, we can understand what makes one GPU better than another.

The Most Important GPU Specs for Deep Learning Processing Speed
This section can help you build a more intuitive understanding of how to think about deep learning performance. This understanding will help you to evaluate future GPUs by yourself. This section is sorted by the importance of each component. Tensor Cores are most important, followed by memory bandwidth of a GPU, the cache hierachy, and only then FLOPS of a GPU.

Tensor Cores
Tensor Cores are tiny cores that perform very efficient matrix multiplication. Since the most expensive part of any deep neural network is matrix multiplication Tensor Cores are very useful. In fast, they are so powerful, that I do not recommend any GPUs that do not have Tensor Cores.

It is helpful to understand how they work to appreciate the importance of these computational units specialized for matrix multiplication. Here I will show you a simple example of A*B=C matrix multiplication, where all matrices have a size of 32×32, what a computational pattern looks like with and without Tensor Cores. This is a simplified example, and not the exact way how a high performing matrix multiplication kernel would be written, but it has all the basics. A CUDA programmer would take this as a first “draft” and then optimize it step-by-step with concepts like double buffering, register optimization, occupancy optimization, instruction-level parallelism, and many others, which I will not discuss at this point.

To understand this example fully, you have to understand the concepts of cycles. If a processor runs at 1GHz, it can do 10^9 cycles per second. Each cycle represents an opportunity for computation. However, most of the time, operations take longer than one cycle. Thus we essentially have a queue where the next operations needs to wait for the next operation to finish. This is also called the latency of the operation.

Here are some important latency cycle timings for operations. These times can change from GPU generation to GPU generation. These numbers are for Ampere GPUs, which have relatively slow caches.

Global memory access (up to 80GB): ~380 cycles
L2 cache: ~200 cycles
L1 cache or Shared memory access (up to 128 kb per Streaming Multiprocessor): ~34 cycles
Fused multiplication and addition, a*b+c (FFMA): 4 cycles
Tensor Core matrix multiply: 1 cycle
Each operation is always performed by a pack of 32 threads. This pack is termed a warp of threads. Warps usually operate in a synchronous pattern — threads within a warp have to wait for each other. All memory operations on the GPU are optimized for warps. For example, loading from global memory happens at a granularity of 32*4 bytes, exactly 32 floats, exactly one float for each thread in a warp. We can have up to 32 warps = 1024 threads in a streaming multiprocessor (SM), the GPU-equivalent of a CPU core. The resources of an SM are divided up among all active warps. This means that sometimes we want to run fewer warps to have more registers/shared memory/Tensor Core resources per warp.

For both of the following examples, we assume we have the same computational resources. For this small example of a 32×32 matrix multiply, we use 8 SMs (about 10% of an RTX 3090) and 8 warps per SM.

To understand how the cycle latencies play together with resources like threads per SM and shared memory per SM, we now look at examples of matrix multiplication. While the following example roughly follows the sequence of computational steps of matrix multiplication for both with and without Tensor Cores, please note that these are very simplified examples. Real cases of matrix multiplication involve much larger shared memory tiles and slightly different computational patterns.

Matrix multiplication without Tensor Cores
If we want to do an A*B=C matrix multiply, where each matrix is of size 32×32, then we want to load memory that we repeatedly access into shared memory because its latency is about five times lower (200 cycles vs 34 cycles). A memory block in shared memory is often referred to as a memory tile or just a tile. Loading two 32×32 floats into a shared memory tile can happen in parallel by using 2*32 warps. We have 8 SMs with 8 warps each, so due to parallelization, we only need to do a single sequential load from global to shared memory, which takes 200 cycles.

To do the matrix multiplication, we now need to load a vector of 32 numbers from shared memory A and shared memory B and perform a fused multiply-and-accumulate (FFMA). Then store the outputs in registers C. We divide the work so that each SM does 8x dot products (32×32) to compute 8 outputs of C. Why this is exactly 8 (4 in older algorithms) is very technical. I recommend Scott Gray’s blog post on matrix multiplication to understand this. This means we have 8x shared memory accesses at the cost of 34 cycles each and 8 FFMA operations (32 in parallel), which cost 4 cycles each. In total, we thus have a cost of:

200 cycles (global memory) + 8*34 cycles (shared memory) + 8*4 cycles (FFMA) = 504 cycles

Let’s look at the cycle cost of using Tensor Cores.

Matrix multiplication with Tensor Cores
With Tensor Cores, we can perform a 4×4 matrix multiplication in one cycle. To do that, we first need to get memory into the Tensor Core. Similarly to the above, we need to read from global memory (200 cycles) and store in shared memory. To do a 32×32 matrix multiply, we need to do 8×8=64 Tensor Cores operations. A single SM has 8 Tensor Cores. So with 8 SMs, we have 64 Tensor Cores — just the number that we need! We can transfer the data from shared memory to the Tensor Cores with 1 memory transfers (34 cycles) and then do those 64 parallel Tensor Core operations (1 cycle). This means the total cost for Tensor Cores matrix multiplication, in this case, is:

200 cycles (global memory) + 34 cycles (shared memory) + 1 cycle (Tensor Core) = 235 cycles.

Thus we reduce the matrix multiplication cost significantly from 504 cycles to 235 cycles via Tensor Cores. In this simplified case, the Tensor Cores reduced the cost of both shared memory access and FFMA operations.

This example is simplified, for example, usually each thread needs to calculate which memory to read and write to as you transfer data from global memory to shared memory. With the new Hooper (H100) architectures we additionally have the Tensor Memory Accelerator (TMA) compute these indices in hardware and thus help each thread to focus on more computation rather than computing indices.

Matrix multiplication with Tensor Cores and Asynchronous copies (RTX 30/RTX 40) and TMA (H100)
The RTX 30 Ampere and RTX 40 Ada series GPUs additionally have support to perform asynchronous transfers between global and shared memory. The H100 Hopper GPU extends this further by introducing the Tensor Memory Accelerator (TMA) unit. the TMA unit combines asynchronous copies and index calculation for read and writes simultaneously — so each thread no longer needs to calculate which is the next element to read and each thread can focus on doing more matrix multiplication calculations. This looks as follows.

The TMA unit fetches memory from global to shared memory (200 cycles). Once the data arrives, the TMA unit fetches the next block of data asynchronously from global memory. While this is happening, the threads load data from shared memory and perform the matrix multiplication via the tensor core. Once the threads are finished they wait for the TMA unit to finish the next data transfer, and the sequence repeats.

As such, due to the asynchronous nature, the second global memory read by the TMA unit is already progressing as the threads process the current shared memory tile. This means, the second read takes only 200 – 34 – 1 = 165 cycles.

Since we do many reads, only the first memory access will be slow and all other memory accesses will be partially overlapped with the TMA unit. Thus on average, we reduce the time by 35 cycles.

165 cycles (wait for async copy to finish) + 34 cycles (shared memory) + 1 cycle (Tensor Core) = 200 cycles.

Which accelerates the matrix multiplication by another 15%.

From these examples, it becomes clear why the next attribute, memory bandwidth, is so crucial for Tensor-Core-equipped GPUs. Since global memory is the by far the largest cycle cost for matrix multiplication with Tensor Cores, we would even have faster GPUs if the global memory latency could be reduced. We can do this by either increasing the clock frequency of the memory (more cycles per second, but also more heat and higher energy requirements) or by increasing the number of elements that can be transferred at any one time (bus width).

Memory Bandwidth
From the previous section, we have seen that Tensor Cores are very fast. So fast, in fact, that they are idle most of the time as they are waiting for memory to arrive from global memory. For example, during GPT-3-sized training, which uses huge matrices — the larger, the better for Tensor Cores — we have a Tensor Core TFLOPS utilization of about 45-65%, meaning that even for the large neural networks about 50% of the time, Tensor Cores are idle.

This means that when comparing two GPUs with Tensor Cores, one of the single best indicators for each GPU’s performance is their memory bandwidth. For example, The A100 GPU has 1,555 GB/s memory bandwidth vs the 900 GB/s of the V100. As such, a basic estimate of speedup of an A100 vs V100 is 1555/900 = 1.73x.

L2 Cache / Shared Memory / L1 Cache / Registers
Since memory transfers to the Tensor Cores are the limiting factor in performance, we are looking for other GPU attributes that enable faster memory transfer to Tensor Cores. L2 cache, shared memory, L1 cache, and amount of registers used are all related. To understand how a memory hierarchy enables faster memory transfers, it helps to understand how matrix multiplication is performed on a GPU.

To perform matrix multiplication, we exploit the memory hierarchy of a GPU that goes from slow global memory, to faster L2 memory, to fast local shared memory, to lightning-fast registers. However, the faster the memory, the smaller it is.

While logically, L2 and L1 memory are the same, L2 cache is larger and thus the average physical distance that need to be traversed to retrieve a cache line is larger. You can see the L1 and L2 caches as organized warehouses where you want to retrieve an item. You know where the item is, but to go there takes on average much longer for the larger warehouse. This is the essential difference between L1 and L2 caches. Large = slow, small = fast.

For matrix multiplication we can use this hierarchical separate into smaller and smaller and thus faster and faster chunks of memory to perform very fast matrix multiplications. For that, we need to chunk the big matrix multiplication into smaller sub-matrix multiplications. These chunks are called memory tiles, or often for short just tiles.

We perform matrix multiplication across these smaller tiles in local shared memory that is fast and close to the streaming multiprocessor (SM) — the equivalent of a CPU core. With Tensor Cores, we go a step further: We take each tile and load a part of these tiles into Tensor Cores which is directly addressed by registers. A matrix memory tile in L2 cache is 3-5x faster than global GPU memory (GPU RAM), shared memory is ~7-10x faster than the global GPU memory, whereas the Tensor Cores’ registers are ~200x faster than the global GPU memory.

Having larger tiles means we can reuse more memory. I wrote about this in detail in my TPU vs GPU blog post. In fact, you can see TPUs as having very, very, large tiles for each Tensor Core. As such, TPUs can reuse much more memory with each transfer from global memory, which makes them a little bit more efficient at matrix multiplications than GPUs.

Each tile size is determined by how much memory we have per streaming multiprocessor (SM) and how much we L2 cache we have across all SMs. We have the following shared memory sizes on the following architectures:

Volta (Titan V): 128kb shared memory / 6 MB L2
Turing (RTX 20s series): 96 kb shared memory / 5.5 MB L2
Ampere (RTX 30s series): 128 kb shared memory / 6 MB L2
Ada (RTX 40s series): 128 kb shared memory / 72 MB L2
We see that Ada has a much larger L2 cache allowing for larger tile sizes, which reduces global memory access. For example, for BERT large during training, the input and weight matrix of any matrix multiplication fit neatly into the L2 cache of Ada (but not other Us). As such, data needs to be loaded from global memory only once and then data is available throught the L2 cache, making matrix multiplication about 1.5 – 2.0x faster for this architecture for Ada. For larger models the speedups are lower during training but certain sweetspots exist which may make certain models much faster. Inference, with a batch size larger than 8 can also benefit immensely from the larger L2 caches.

Estimating Ada / Hopper Deep Learning Performance
This section is for those who want to understand the more technical details of how I derive the performance estimates for Ampere GPUs. If you do not care about these technical aspects, it is safe to skip this section.

Practical Ada / Hopper Speed Estimates
Suppose we have an estimate for one GPU of a GPU-architecture like Hopper, Ada, Ampere, Turing, or Volta. It is easy to extrapolate these results to other GPUs from the same architecture/series. Luckily, NVIDIA already benchmarked the A100 vs V100 vs H100 across a wide range of computer vision and natural language understanding tasks. Unfortunately, NVIDIA made sure that these numbers are not directly comparable by using different batch sizes and the number of GPUs whenever possible to favor results for the H100 GPU. So in a sense, the benchmark numbers are partially honest, partially marketing numbers. In general, you could argue that using larger batch sizes is fair, as the H100/A100 GPU has more memory. Still, to compare GPU architectures, we should evaluate unbiased memory performance with the same batch size.

To get an unbiased estimate, we can scale the data center GPU results in two ways: (1) account for the differences in batch size, (2) account for the differences in using 1 vs 8 GPUs. We are lucky that we can find such an estimate for both biases in the data that NVIDIA provides.

Doubling the batch size increases throughput in terms of images/s (CNNs) by 13.6%. I benchmarked the same problem for transformers on my RTX Titan and found, surprisingly, the very same result: 13.5% — it appears that this is a robust estimate.

As we parallelize networks across more and more GPUs, we lose performance due to some networking overhead. The A100 8x GPU system has better networking (NVLink 3.0) than the V100 8x GPU system (NVLink 2.0) — this is another confounding factor. Looking directly at the data from NVIDIA, we can find that for CNNs, a system with 8x A100 has a 5% lower overhead than a system of 8x V100. This means if going from 1x A100 to 8x A100 gives you a speedup of, say, 7.00x, then going from 1x V100 to 8x V100 only gives you a speedup of 6.67x.  For transformers, the figure is 7%.

Using these figures, we can estimate the speedup for a few specific deep learning architectures from the direct data that NVIDIA provides. The Tesla A100 offers the following speedup over the Tesla V100:

SE-ResNeXt101: 1.43x
Masked-R-CNN: 1.47x
Transformer (12 layer, Machine Translation, WMT14 en-de): 1.70x
Thus, the figures are a bit lower than the theoretical estimate for computer vision. This might be due to smaller tensor dimensions, overhead from operations that are needed to prepare the matrix multiplication like img2col or Fast Fourier Transform (FFT), or operations that cannot saturate the GPU (final layers are often relatively small). It could also be artifacts of the specific architectures (grouped convolution).

The practical transformer estimate is very close to the theoretical estimate. This is probably because algorithms for huge matrices are very straightforward. I will use these practical estimates to calculate the cost efficiency of GPUs.

Possible Biases in Estimates
The estimates above are for H100, A100 , and V100 GPUs. In the past, NVIDIA sneaked unannounced performance degradations into the “gaming” RTX GPUs: (1) Decreased Tensor Core utilization, (2) gaming fans for cooling, (3) disabled peer-to-peer GPU transfers. It might be possible that there are unannounced performance degradations in the RTX 40 series compared to the full Hopper H100.

As of now, one of these degradations was found for Ampere GPUs: Tensor Core performance was decreased so that RTX 30 series GPUs are not as good as Quadro cards for deep learning purposes. This was also done for the RTX 20 series, so it is nothing new, but this time it was also done for the Titan equivalent card, the RTX 3090. The RTX Titan did not have performance degradation enabled.

Currently, no degradation for Ada GPUs are known, but I update this post with news on this and let my followers on twitter know.

Advantages and Problems for RTX40 and RTX 30 Series
The new NVIDIA Ampere RTX 30 series has additional benefits over the NVIDIA Turing RTX 20 series, such as sparse network training and inference. Other features, such as the new data types, should be seen more as an ease-of-use-feature as they provide the same performance boost as Turing does but without any extra programming required.

The Ada RTX 40 series has even further advances like 8-bit Float (FP8) tensor cores. The RTX 40 series also has similar power and temperature issues compared to the RTX 30. The issue of melting power connector cables in the RTX 40 can be easily prevented by connecting the power cable correctly.

Sparse Network Training
Ampere allows for fine-grained structure automatic sparse matrix multiplication at dense speeds. How does this work? Take a weight matrix and slice it into pieces of 4 elements. Now imagine 2 elements of these 4 to be zero. Figure 1 shows how this could look like.

Figure 1: Structure supported by the sparse matrix multiplication feature in Ampere GPUs. The figure is taken from Jeff Pool's GTC 2020 presentation on  Accelerating Sparsity in the NVIDIA Ampere Architecture by the courtesy of NVIDIA.
Figure 1: Structure supported by the sparse matrix multiplication feature in Ampere GPUs. The figure is taken from Jeff Pool’s GTC 2020 presentation on Accelerating Sparsity in the NVIDIA Ampere Architecture by the courtesy of NVIDIA.
When you multiply this sparse weight matrix with some dense inputs, the sparse matrix tensor core feature in Ampere automatically compresses the sparse matrix to a dense representation that is half the size as can be seen in Figure 2. After this compression, the densely compressed matrix tile is fed into the tensor core which computes a matrix multiplication of twice the usual size. This effectively yields a 2x speedup since the bandwidth requirements during matrix multiplication from shared memory are halved.

Figure 2: The sparse matrix is compressed to a dense representation before the matrix multiplication is performed.
Figure 2: The sparse matrix is compressed to a dense representation before the matrix multiplication is performed. The figure is taken from Jeff Pool’s GTC 2020 presentation on Accelerating Sparsity in the NVIDIA Ampere Architecture by the courtesy of NVIDIA.
I was working on sparse network training in my research and I also wrote a blog post about sparse training. One criticism of my work was that “You reduce the FLOPS required for the network, but it does not yield speedups because GPUs cannot do fast sparse matrix multiplication.” Well, with the addition of the sparse matrix multiplication feature for Tensor Cores, my algorithm, or other sparse training algorithms, now actually provide speedups of up to 2x during training.

Figure 3: The sparse training algorithm that I developed has three stages: (1) Determine the importance of each layer. (2) Remove the smallest, unimportant weights. (3) Grow new weights proportional to the importance of each layer. Read more about my work in my sparse training blog post.
Figure 3: The sparse training algorithm that I developed has three stages: (1) Determine the importance of each layer. (2) Remove the smallest, unimportant weights. (3) Grow new weights proportional to the importance of each layer. Read more about my work in my sparse training blog post.
While this feature is still experimental and training sparse networks are not commonplace yet, having this feature on your GPU means you are ready for the future of sparse training.

Low-precision Computation
In my work, I’ve previously shown that new data types can improve stability during low-precision backpropagation.

Figure 4: Low-precision deep learning 8-bit datatypes that I developed. Deep learning training benefits from highly specialized data types. My dynamic tree datatype uses a dynamic bit that indicates the beginning of a binary bisection tree that quantized the range [0, 0.9] while all previous bits are used for the exponent. This allows to dynamically represent numbers that are both large and small with high precision.
Figure 4: Low-precision deep learning 8-bit datatypes that I developed. Deep learning training benefits from highly specialized data types. My dynamic tree datatype uses a dynamic bit that indicates the beginning of a binary bisection tree that quantized the range [0, 0.9] while all previous bits are used for the exponent. This allows to dynamically represent numbers that are both large and small with high precision.
Currently, if you want to have stable backpropagation with 16-bit floating-point numbers (FP16), the big problem is that ordinary FP16 data types only support numbers in the range [-65,504, 65,504]. If your gradient slips past this range, your gradients explode into NaN values. To prevent this during FP16 training, we usually perform loss scaling where you multiply the loss by a small number before backpropagating to prevent this gradient explosion.

The BrainFloat 16 format (BF16) uses more bits for the exponent such that the range of possible numbers is the same as for FP32: [-3*10^38, 3*10^38]. BF16 has less precision, that is significant digits, but gradient precision is not that important for learning. So what BF16 does is that you no longer need to do any loss scaling or worry about the gradient blowing up quickly. As such, we should see an increase in training stability by using the BF16 format as a slight loss of precision.

What this means for you: With BF16 precision, training might be more stable than with FP16 precision while providing the same speedups. With 32-bit TensorFloat (TF32) precision, you get near FP32 stability while giving the speedups close to FP16. The good thing is, to use these data types, you can just replace FP32 with TF32 and FP16 with BF16 — no code changes required!

Overall, though, these new data types can be seen as lazy data types in the sense that you could have gotten all the benefits with the old data types with some additional programming efforts (proper loss scaling, initialization, normalization, using Apex). As such, these data types do not provide speedups but rather improve ease of use of low precision for training.

Fan Designs and GPUs Temperature Issues
While the new fan design of the RTX 30 series performs very well to cool the GPU, different fan designs of non-founders edition GPUs might be more problematic. If your GPU heats up beyond 80C, it will throttle itself and slow down its computational speed / power. This overheating can happen in particular if you stack multiple GPUs next to each other. A solution to this is to use PCIe extenders to create space between GPUs.

Spreading GPUs with PCIe extenders is very effective for cooling, and other fellow PhD students at the University of Washington and I use this setup with great success. It does not look pretty, but it keeps your GPUs cool! This has been running with no problems at all for 4 years now. It can also help if you do not have enough space to fit all GPUs in the PCIe slots. For example, if you can find the space within a desktop computer case, it might be possible to buy standard 3-slot-width RTX 4090 and spread them with PCIe extenders within the case. With this, you might solve both the space issue and cooling issue for a 4x RTX 4090 setup with a single simple solution.

Figure 5: 4x GPUs with PCIe extenders. It looks like a mess, but it is very effective for cooling. I used this rig for 2 years and cooling is excellent despite problematic RTX 2080 Ti Founders Edition GPUs.
Figure 5: 4x GPUs with PCIe extenders. It looks like a mess, but it is very effective for cooling. I used this rig for 4 years and cooling is excellent despite problematic RTX 2080 Ti Founders Edition GPUs.
3-slot Design and Power Issues
The RTX 3090 and RTX 4090 are 3-slot GPUs, so one will not be able to use it in a 4x setup with the default fan design from NVIDIA. This is kind of justified because it runs at over 350W TDP, and it will be difficult to cool in a multi-GPU 2-slot setting. The RTX 3080 is only slightly better at 320W TDP, and cooling a 4x RTX 3080 setup will also be very difficult.

It is also difficult to power a 4x 350W = 1400W or 4x 450W = 1800W system in the 4x RTX 3090 or 4x RTX 4090 case. Power supply units (PSUs) of 1600W are readily available, but having only 200W to power the CPU and motherboard can be too tight. The components’ maximum power is only used if the components are fully utilized, and in deep learning, the CPU is usually only under weak load. With that, a 1600W PSU might work quite well with a 4x RTX 3080 build, but for a 4x RTX 3090 build, it is better to look for high wattage PSUs (+1700W). Some of my followers have had great success with cryptomining PSUs — have a look in the comment section for more info about that. Otherwise, it is important to note that not all outlets support PSUs above 1600W, especially in the US. This is the reason why in the US, there are currently few standard desktop PSUs above 1600W on the market. If you get a server or cryptomining PSUs, beware of the form factor — make sure it fits into your computer case.

Power Limiting: An Elegant Solution to Solve the Power Problem?
It is possible to set a power limit on your GPUs. So you would be able to programmatically set the power limit of an RTX 3090 to 300W instead of their standard 350W. In a 4x GPU system, that is a saving of 200W, which might just be enough to build a 4x RTX 3090 system with a 1600W PSU feasible. It also helps to keep the GPUs cool. So setting a power limit can solve the two major problems of a 4x RTX 3080 or 4x RTX 3090 setups, cooling, and power, at the same time. For a 4x setup, you still need effective blower GPUs (and the standard design may prove adequate for this), but this resolves the PSU problem.

Figure 6: Reducing the power limit has a slight cooling effect. Reducing the RTX 2080 Ti power limit by 50-60 W decreases temperatures slightly and fans run more silent.
Figure 6: Reducing the power limit has a slight cooling effect. Reducing the RTX 2080 Ti power limit by 50-60 W decreases temperatures slightly and fans run more silent.
You might ask, “Doesn’t this slow down the GPU?” Yes, it does, but the question is by how much. I benchmarked the 4x RTX 2080 Ti system shown in Figure 5 under different power limits to test this. I benchmarked the time for 500 mini-batches for BERT Large during inference (excluding the softmax layer). I choose BERT Large inference since, from my experience, this is the deep learning model that stresses the GPU the most. As such, I would expect power limiting to have the most massive slowdown for this model. As such, the slowdowns reported here are probably close to the maximum slowdowns that you can expect. The results are shown in Figure 7.

Figure 7: Measured slowdown for a given power limit on an RTX 2080 Ti. Measurements taken are mean processing times for 500 mini-batches of BERT Large during inference (excluding softmax layer).
Figure 7: Measured slowdown for a given power limit on an RTX 2080 Ti. Measurements taken are mean processing times for 500 mini-batches of BERT Large during inference (excluding softmax layer).
As we can see, setting the power limit does not seriously affect performance. Limiting the power by 50W — more than enough to handle 4x RTX 3090 — decreases performance by only 7%.

RTX 4090s and Melting Power Connectors: How to Prevent Problems
There was a misconception that RTX 4090 power cables melt because they were bent. However, it was found that only 0.1% of users had this problem and the problem occured due to user error. Here a video that shows that the main problem is that cables were not inserted correctly.

So using RTX 4090 cards is perfectly safe if you follow the following install instructions:

If you use an old cable or old GPU make sure the contacts are free of debri / dust.
Use the power connector and stick it into the socket until you hear a *click* — this is the most important part.
Test for good fit by wiggling the power cable left to right. The cable should not move.
Check the contact with the socket visually, there should be no gap between cable and socket.
8-bit Float Support in H100 and RTX 40 series GPUs
The support of the 8-bit Float (FP8) is a huge advantage for the RTX 40 series and H100 GPUs. With 8-bit inputs it allows you to load the data for matrix multiplication twice as fast, you can store twice as much matrix elements in your caches which in the Ada and Hopper architecture are very large, and now with FP8 tensor cores you get 0.66 PFLOPS of compute for a RTX 4090 — this is more FLOPS then the entirety of the worlds fastest supercomputer in year 2007. 4x RTX 4090 with FP8 compute rival the faster supercomputer in the world in year 2010 (deep learning started to work just in 2009).

The main problem with using 8-bit precision is that transformers can get very unstable with so few bits and crash during training or generate non-sense during inference. I have written a paper about the emergence of instabilities in large language models and I also written a more accessible blog post.

The main take-way is this: Using 8-bit instead of 16-bit makes things very unstable, but if you keep a couple of dimensions in high precision everything works just fine.


Main results from my work on 8-bit matrix multiplication for Large Language Models (LLMs). We can see that the best 8-bit baseline fails to deliver good zero-shot performance. The method that I developed, LLM.int8(), can perform Int8 matrix multiplication with the same results as the 16-bit baseline.
But Int8 was already supported by the RTX 30 / A100 / Ampere generation GPUs, why is FP8 in the RTX 40 another big upgrade? The FP8 data type is much more stable than the Int8 data type and its easy to use it in functions like layer norm or non-linear functions, which are difficult to do with Integer data types. This will make it very straightforward to use it in training and inference. I think this will make FP8 training and inference relatively common in a couple of months.

If you want to read more about the advantages of Float vs Integer data types you can read my recent paper about k-bit inference scaling laws. Below you can see one relevant main result for Float vs Integer data types from this paper. We can see that bit-by-bit, the FP4 data type preserve more information than Int4 data type and thus improves the mean LLM zeroshot accuracy across 4 tasks.


4-bit Inference scaling laws for Pythia Large Language Models for different data types. We see that bit-by-bit, 4-bit float data types have better zeroshot accuracy compared to the Int4 data types.
Raw Performance Ranking of GPUs
Below we see a chart of raw relevative performance across all GPUs. We see that there is a gigantic gap in 8-bit performance of H100 GPUs and old cards that are optimized for 16-bit performance.


Shown is raw relative transformer performance of GPUs. For example, an RTX 4090 has about 0.33x performance of a H100 SMX for 8-bit inference. In other words, a H100 SMX is three times faster for 8-bit inference compared to a RTX 4090.
For this data, I did not model 8-bit compute for older GPUs. I did so, because 8-bit Inference and training are much more effective on Ada/Hopper GPUs because of the 8-bit Float data type and Tensor Memory Accelerator (TMA) which saves the overhead of computing read/write indices which is particularly helpful for 8-bit matrix multiplication. Ada/Hopper also have FP8 support, which makes in particular 8-bit training much more effective.

I did not model numbers for 8-bit training because to model that I need to know the latency of L1 and L2 caches on Hopper/Ada GPUs, and they are unknown and I do not have access to such GPUs. On Hopper/Ada, 8-bit training performance can well be 3-4x of 16-bit training performance if the caches are as fast as rumored.

But even with the new FP8 tensor cores there are some additional issues which are difficult to take into account when modeling GPU performance. For example, FP8 tensor cores do not support transposed matrix multiplication which means backpropagation needs either a separate transpose before multiplication or one needs to hold two sets of weights — one transposed and one non-transposed — in memory. I used two sets of weight when I experimented with Int8 training in my LLM.int8() project and this reduced the overall speedups quite significantly. I think one can do better with the right algorithms/software, but this shows that missing features like a transposed matrix multiplication for tensor cores can affect performance.

For old GPUs, Int8 inference performance is close to the 16-bit inference performance for models below 13B parameters. Int8 performance on old GPUs is only relevant if you have relatively large models with 175B parameters or more. If you are interested in 8-bit performance of older GPUs, you can read the Appendix D of my LLM.int8() paper where I benchmark Int8 performance.

GPU Deep Learning Performance per Dollar
Below we see the chart for the performance per US dollar for all GPUs sorted by 8-bit inference performance. How to use the chart to find a suitable GPU for you is as follows:

Determine the amount of GPU memory that you need (rough heuristic: at least 12 GB for image generation; at least 24 GB for work with transformers)
While 8-bit inference and training is experimental, it will become standard within 6 months. You might need to do some extra difficult coding to work with 8-bit in the meantime. Is that OK for you? If not, select for 16-bit performance.
Using the metric determined in (2), find the GPU with the highest relative performance/dollar that has the amount of memory you need.
We can see that the RTX 4070 Ti is most cost-effective for 8-bit and 16-bit inference while the RTX 3080 remains most cost-effective for 16-bit training. While these GPUs are most cost-effective, they are not necessarily recommended as they do not have sufficient memory for many use-cases. However, it might be the ideal cards to get started on your deep learning journey. Some of these GPUs are excellent for Kaggle competition where one can often rely on smaller models. Since to do well in Kaggle competitions the method of how you work is more important than the models size, many of these smaller GPUs are excellent for Kaggle competitions.

The best GPUs for academic and startup servers seem to be A6000 Ada GPUs (not to be confused with A6000 Turing). The H100 SXM GPU is also very cost effective and has high memory and very strong performance. If I would build a small cluster for a company/academic lab, I would use 66-80% A6000 GPUs and 20-33% H100 SXM GPUs. If I get a good deal on L40 GPUs, I would also pick them instead of A6000, so you can always ask for a quote on these.


Shown is relative performance per US Dollar of GPUs normalized by the cost for a desktop computer and the average Amazon and eBay price for each GPU. Additionally, the electricity cost of ownership for 5 years is added with an electricity price of 0.175 USD per kWh and a 15% GPU utilization rate. The electricity cost for a RTX 4090 is about $100 per year. How to read and interpret the chart: a desktop computer with RTX 4070 Ti cards owned for 5 years yields about 2x more 8-bit inference performance per dollar compared to a RTX 3090 GPU.
GPU Recommendations
I have a create a recommendation flow-chart that you can see below (click here for interactive app from Nan Xiao). While this chart will help you in 80% of cases, it might not quite work for you because the options might be too expensive. In that case, try to look at the benchmarks above and pick the most cost effective GPU that still has enough GPU memory for your use-case. You can estimate the GPU memory needed by running your problem in the vast.ai or Lambda Cloud for a while so you know what you need. The vast.ai or Lambda Cloud might also work well if you only need a GPU very sporadically (every couple of days for a few hours) and you do not need to download and process large dataset to get started. However, cloud GPUs are usually not a good option if you use your GPU for many months with a high usage rate each day (12 hours each day). You can use the example in the “When is it better to use the cloud vs a dedicated GPU desktop/server?” section below to determine if cloud GPUs are good for you.


GPU recommendation chart for Ada/Hopper GPUs. Follow the answers to the Yes/No questions to find the GPU that is most suitable for you. While this chart works well in about 80% of cases, you might end up with a GPU that is too expensive. Use the cost/performance charts above to make a selection instead. [interactive app]
Is it better to wait for future GPUs for an upgrade? The future of GPUs.
To understand if it makes sense to skip this generation and buy the next generation of GPUs, it makes sense to talk a bit about what improvements in the future will look like.

In the past it was possible to shrink the size of transistors to improve speed of a processor. This is coming to an end now. For example, while shrinking SRAM increased its speed (smaller distance, faster memory access), this is no longer the case. Current improvements in SRAM do not improve its performance anymore and might even be negative. While logic such as Tensor Cores get smaller, this does not necessarily make GPU faster since the main problem for matrix multiplication is to get memory to the tensor cores which is dictated by SRAM and GPU RAM speed and size. GPU RAM still increases in speed if we stack memory modules into high-bandwidth modules (HBM3+), but these are too expensive to manufacture for consumer applications. The main way to improve raw speed of GPUs is to use more power and more cooling as we have seen in the RTX 30s and 40s series. But this cannot go on for much longer.

Chiplets such as used by AMD CPUs are another straightforward way forward. AMD beat Intel by developing CPU chiplets. Chiplets are small chips that are fused together with a high speed on-chip network. You can think about them as two GPUs that are so physically close together that you can almost consider them a single big GPU. They are cheaper to manufacture, but more difficult to combine into one big chip. So you need know-how and fast connectivity between chiplets. AMD has a lot of experience with chiplet design. AMD’s next generation GPUs are going to be chiplet designs, while NVIDIA currently has no public plans for such designs. This may mean that the next generation of AMD GPUs might be better in terms of cost/performance compared to NVIDIA GPUs.

However, the main performance boost for GPUs is currently specialized logic. For example, the asynchronous copy hardware units on the Ampere generation (RTX 30 / A100 / RTX 40) or the extension, the Tensor Memory Accelerator (TMA), both reduce the overhead of copying memory from the slow global memory to fast shared memory (caches) through specialized hardware and so each thread can do more computation. The TMA also reduces overhead by performing automatic calculations of read/write indices which is particularly important for 8-bit computation where one has double the elements for the same amount of memory compared to 16-bit computation. So specialized hardware logic can accelerate matrix multiplication further.
Low-bit precision is another straightforward way forward for a couple of years. We will see widespread adoption of 8-bit inference and training in the next months. We will see widespread 4-bit inference in the next year. Currently, the technology for 4-bit training does not exists, but research looks promising and I expect the first high performance FP4 Large Language Model (LLM) with competitive predictive performance to be trained in 1-2 years time.

Going to 2-bit precision for training currently looks pretty impossible, but it is a much easier problem than shrinking transistors further. So progress in hardware mostly depends on software and algorithms that make it possible to use specialized features offered by the hardware.

We will probably be able to still improve the combination of algorithms + hardware to the year 2032, but after that will hit the end of GPU improvements (similar to smartphones). The wave of performance improvements after 2032 will come from better networking algorithms and mass hardware. It is uncertain if consumer GPUs will be relevant at this point. It might be that you need an RTX 9090 to run run Super HyperStableDiffusion Ultra Plus 9000 Extra or OpenChatGPT 5.0, but it might also be that some company will offer a high-quality API that is cheaper than the electricity cost for a RTX 9090 and you want to use a laptop + API for image generation and other tasks.

Overall, I think investing into a 8-bit capable GPU will be a very solid investment for the next 9 years. Improvements at 4-bit and 2-bit are likely small and other features like Sort Cores would only become relevant once sparse matrix multiplication can be leveraged well. We will probably see some kind of other advancement in 2-3 years which will make it into the next GPU 4 years from now, but we are running out of steam if we keep relying on matrix multiplication. This makes investments into new GPUs last longer.

Question & Answers & Misconceptions
Do I need PCIe 4.0 or PCIe 5.0?
Generally, no. PCIe 5.0 or 4.0 is great if you have a GPU cluster. It is okay if you have an 8x GPU machine, but otherwise, it does not yield many benefits. It allows better parallelization and a bit faster data transfer. Data transfers are not a bottleneck in any application. In computer vision, in the data transfer pipeline, the data storage can be a bottleneck, but not the PCIe transfer from CPU to GPU. So there is no real reason to get a PCIe 5.0 or 4.0 setup for most people. The benefits will be maybe 1-7% better parallelization in a 4 GPU setup.

Do I need 8x/16x PCIe lanes?
Same as with PCIe 4.0 — generally, no. PCIe lanes are needed for parallelization and fast data transfers, which are seldom a bottleneck. Operating GPUs on 4x lanes is fine, especially if you only have 2 GPUs. For a 4 GPU setup, I would prefer 8x lanes per GPU, but running them at 4x lanes will probably only decrease performance by around 5-10% if you parallelize across all 4 GPUs.

How do I fit 4x RTX 4090 or 3090 if they take up 3 PCIe slots each?
You need to get one of the two-slot variants, or you can try to spread them out with PCIe extenders. Besides space, you should also immediately think about cooling and a suitable PSU.

PCIe extenders might also solve both space and cooling issues, but you need to make sure that you have enough space in your case to spread out the GPUs. Make sure your PCIe extenders are long enough!

How do I cool 4x RTX 3090 or 4x RTX 3080?
See the previous section.

Can I use multiple GPUs of different GPU types?
Yes, you can! But you cannot parallelize efficiently across GPUs of different types since you will often go at the speed of the slowest GPU (data and fully sharded parallelism). So different GPUs work just fine, but parallelization across those GPUs will be inefficient since the fastest GPU will wait for the slowest GPU to catch up to a synchronization point (usually gradient update).

What is NVLink, and is it useful?
Generally, NVLink is not useful. NVLink is a high speed interconnect between GPUs. It is useful if you have a GPU cluster with +128 GPUs. Otherwise, it yields almost no benefits over standard PCIe transfers.

I do not have enough money, even for the cheapest GPUs you recommend. What can I do?
Definitely buy used GPUs. You can buy a small cheap GPU for prototyping and testing and then roll out for full experiments to the cloud like vast.ai or Lambda Cloud. This can be cheap if you train/fine-tune/inference on large models only every now and then and spent more time protoyping on smaller models.

What is the carbon footprint of GPUs? How can I use GPUs without polluting the environment?
I built a carbon calculator for calculating your carbon footprint for academics (carbon from flights to conferences + GPU time). The calculator can also be used to calculate a pure GPU carbon footprint. You will find that GPUs produce much, much more carbon than international flights. As such, you should make sure you have a green source of energy if you do not want to have an astronomical carbon footprint. If no electricity provider in our area provides green energy, the best way is to buy carbon offsets. Many people are skeptical about carbon offsets. Do they work? Are they scams?

I believe skepticism just hurts in this case, because not doing anything would be more harmful than risking the probability of getting scammed. If you worry about scams, just invest in a portfolio of offsets to minimize risk.

I worked on a project that produced carbon offsets about ten years ago. The carbon offsets were generated by burning leaking methane from mines in China. UN officials tracked the process, and they required clean digital data and physical inspections of the project site. In that case, the carbon offsets that were produced were highly reliable. I believe many other projects have similar quality standards.

What do I need to parallelize across two machines?
If you want to be on the safe side, you should get at least +50Gbits/s network cards to gain speedups if you want to parallelize across machines. I recommend having at least an EDR Infiniband setup, meaning a network card with at least 50 GBit/s bandwidth. Two EDR cards with cable are about $500 on eBay.

In some cases, you might be able to get away with 10 Gbit/s Ethernet, but this is usually only the case for special networks (certain convolutional networks) or if you use certain algorithms (Microsoft DeepSpeed).

Is the sparse matrix multiplication features suitable for sparse matrices in general?
It does not seem so. Since the granularity of the sparse matrix needs to have 2 zero-valued elements, every 4 elements, the sparse matrices need to be quite structured. It might be possible to adjust the algorithm slightly, which involves that you pool 4 values into a compressed representation of 2 values, but this also means that precise arbitrary sparse matrix multiplication is not possible with Ampere GPUs.

Do I need an Intel CPU to power a multi-GPU setup?
I do not recommend Intel CPUs unless you heavily use CPUs in Kaggle competitions (heavy linear algebra on the CPU). Even for Kaggle competitions AMD CPUs are still great, though. AMD CPUs are cheaper and better than Intel CPUs in general for deep learning. For a 4x GPU built, my go-to CPU would be a Threadripper. We built dozens of systems at our university with Threadrippers, and they all work great — no complaints yet. For 8x GPU systems, I would usually go with CPUs that your vendor has experience with. CPU and PCIe/system reliability is more important in 8x systems than straight performance or straight cost-effectiveness.

Does computer case design matter for cooling?
No. GPUs are usually perfectly cooled if there is at least a small gap between GPUs. Case design will give you 1-3 C better temperatures, space between GPUs will provide you with 10-30 C improvements. The bottom line, if you have space between GPUs, cooling does not matter. If you have no space between GPUs, you need the right cooler design (blower fan) or another solution (water cooling, PCIe extenders), but in either case, case design and case fans do not matter.

Will AMD GPUs + ROCm ever catch up with NVIDIA GPUs + CUDA?
Not in the next 1-2 years. It is a three-way problem: Tensor Cores, software, and community.

AMD GPUs are great in terms of pure silicon: Great FP16 performance, great memory bandwidth. However, their lack of Tensor Cores or the equivalent makes their deep learning performance poor compared to NVIDIA GPUs. Packed low-precision math does not cut it. Without this hardware feature, AMD GPUs will never be competitive. Rumors show that some data center card with Tensor Core equivalent is planned for 2020, but no new data emerged since then. Just having data center cards with a Tensor Core equivalent would also mean that few would be able to afford such AMD GPUs, which would give NVIDIA a competitive advantage.

Let’s say AMD introduces a Tensor-Core-like-hardware feature in the future. Then many people would say, “But there is no software that works for AMD GPUs! How am I supposed to use them?” This is mostly a misconception. The AMD software via ROCm has come to a long way, and support via PyTorch is excellent. While I have not seen many experience reports for AMD GPUs + PyTorch, all the software features are integrated. It seems, if you pick any network, you will be just fine running it on AMD GPUs. So here AMD has come a long way, and this issue is more or less solved.

However, if you solve software and the lack of Tensor Cores, AMD still has a problem: the lack of community. If you have a problem with NVIDIA GPUs, you can Google the problem and find a solution. That builds a lot of trust in NVIDIA GPUs. You have the infrastructure that makes using NVIDIA GPUs easy (any deep learning framework works, any scientific problem is well supported). You have the hacks and tricks that make usage of NVIDIA GPUs a breeze (e.g., apex). You can find experts on NVIDIA GPUs and programming around every other corner while I knew much less AMD GPU experts.

In the community aspect, AMD is a bit like Julia vs Python. Julia has a lot of potential, and many would say, and rightly so, that it is the superior programming language for scientific computing. Yet, Julia is barely used compared to Python. This is because the Python community is very strong. Numpy, SciPy, Pandas are powerful software packages that a large number of people congregate around. This is very similar to the NVIDIA vs AMD issue.

Thus, it is likely that AMD will not catch up until Tensor Core equivalent is introduced (1/2 to 1 year?) and a strong community is built around ROCm (2 years?). AMD will always snatch a part of the market share in specific subgroups (e.g., cryptocurrency mining, data centers). Still, in deep learning, NVIDIA will likely keep its monopoly for at least a couple more years.

When is it better to use the cloud vs a dedicated GPU desktop/server?
Rule-of-thumb: If you expect to do deep learning for longer than a year, it is cheaper to get a desktop GPU. Otherwise, cloud instances are preferable unless you have extensive cloud computing skills and want the benefits of scaling the number of GPUs up and down at will.

Numbers in the following paragraphs are going to change, but it serves as a scenario that helps you to understand the rough costs. You can use similar math to determine if cloud GPUs are the best solution for you.

For the exact point in time when a cloud GPU is more expensive than a desktop depends highly on the service that you are using, and it is best to do a little math on this yourself. Below I do an example calculation for an AWS V100 spot instance with 1x V100 and compare it to the price of a desktop with a single RTX 3090 (similar performance). The desktop with RTX 3090 costs $2,200 (2-GPU barebone + RTX 3090). Additionally, assuming you are in the US, there is an additional $0.12 per kWh for electricity. This compares to $2.14 per hour for the AWS on-demand instance.

At 15% utilization per year, the desktop uses:

(350 W (GPU) + 100 W (CPU))*0.15 (utilization) * 24 hours * 365 days = 591 kWh per year

So 591 kWh of electricity per year, that is an additional $71.

The break-even point for a desktop vs a cloud instance at 15% utilization (you use the cloud instance 15% of time during the day), would be about 300 days ($2,311 vs $2,270):

$2.14/h * 0.15 (utilization) * 24 hours * 300 days = $2,311

So if you expect to run deep learning models after 300 days, it is better to buy a desktop instead of using AWS on-demand instances.

You can do similar calculations for any cloud service to make the decision if you go for a cloud service or a desktop.

Common utilization rates are the following:

PhD student personal desktop: < 15%
PhD student slurm GPU cluster: > 35%
Company-wide slurm research cluster: > 60%
In general, utilization rates are lower for professions where thinking about cutting edge ideas is more important than developing practical products. Some areas have low utilization rates (interpretability research), while other areas have much higher rates (machine translation, language modeling). In general, the utilization of personal machines is almost always overestimated. Commonly, most personal systems have a utilization rate between 5-10%. This is why I would highly recommend slurm GPU clusters for research groups and companies instead of individual desktop GPU machines.

Version History
2023-01-30: Improved font and recommendation chart. Added 5 years cost of ownership electricity perf/USD chart. Updated Async copy and TMA functionality. Slight update to FP8 training. General improvements.
2023-01-16: Added Hopper and Ada GPUs. Added GPU recommendation chart. Added information about the TMA unit and L2 cache.
2020-09-20: Added discussion of using power limiting to run 4x RTX 3090 systems. Added older GPUs to the performance and cost/performance charts. Added figures for sparse matrix multiplication.
2020-09-07: Added NVIDIA Ampere series GPUs. Included lots of good-to-know GPU details.
2019-04-03: Added RTX Titan and GTX 1660 Ti. Updated TPU section. Added startup hardware discussion.
2018-11-26: Added discussion of overheating issues of RTX cards.
2018-11-05: Added RTX 2070 and updated recommendations. Updated charts with hard performance data. Updated TPU section.
2018-08-21: Added RTX 2080 and RTX 2080 Ti; reworked performance analysis
2017-04-09: Added cost-efficiency analysis; updated recommendation with NVIDIA Titan Xp
2017-03-19: Cleaned up blog post; added GTX 1080 Ti
2016-07-23: Added Titan X Pascal and GTX 1060; updated recommendations
2016-06-25: Reworked multi-GPU section; removed simple neural network memory section as no longer relevant; expanded convolutional memory section; truncated AWS section due to not being efficient anymore; added my opinion about the Xeon Phi; added updates for the GTX 1000 series
2015-08-20: Added section for AWS GPU instances; added GTX 980 Ti to the comparison relation
2015-04-22: GTX 580 no longer recommended; added performance relationships between cards
2015-03-16: Updated GPU recommendations: GTX 970 and GTX 580
2015-02-23: Updated GPU recommendations and memory calculations
2014-09-28: Added emphasis for memory requirement of CNNs
Acknowledgments
I thank Suhail for making me aware of outdated prices on H100 GPUs, Gjorgji Kjosev for pointing out font issues, Anonymous for pointing out that the TMA unit does not exist on Ada GPUs, Scott Gray for pointing out that FP8 tensor cores have no transposed matrix multiplication, and reddit and HackerNews users for pointing out many other improvements.

For past updates of this blog post, I want to thank Mat Kelcey for helping me to debug and test custom code for the GTX 970; I want to thank Sander Dieleman for making me aware of the shortcomings of my GPU memory advice for convolutional nets; I want to thank Hannes Bretschneider for pointing out software dependency problems for the GTX 580; and I want to thank Oliver Griesel for pointing out notebook solutions for AWS instances. I want to thank Brad Nemire for providing me with an RTX Titan for benchmarking purposes. I want to thank Agrin Hilmkil, Ari Holtzman, Gabriel Ilharco, Nam Pho for their excellent feedback on the previous version of this blog post.",In what contexts is BERT mentioned?,"It is mentioned that for BERT large during training, the input and weight matrix of any matrix multiplication fit neatly into the L2 cache of Ada (but not other Us). The author also mentions that they benchmarked the time for 500 mini-batches for BERT Large during inference (excluding the softmax layer) on the 4x RTX 2080 Ti system. They chose BERT Large inference since, from their experience, this is the deep learning model that stresses the GPU the most.","BERT is discussed in the context of using the Ada GPU's L2 cache during training and in inference testing, particularly noting its demand on GPU resources.","BERT is analyzed extensively for its architectural design, focusing on how its complexity affects GPU temperature regulation during extended operations."
4,"Recipes
This page includes code snippets or “recipes” for a variety of common tasks. Use them as building blocks or examples when making your own notebooks.

In these recipes, each code block represents a cell.

Control Flow
Show an output conditionally
Use cases. Hide an output until a condition is met (e.g., until algorithm parameters are valid), or show different outputs depending on the value of a UI element or some other Python object

Recipe.

Use an if expression to choose which output to show.

# condition is a boolean, True of False
condition = True
""condition is True"" if condition else None
Run a cell on a timer
Use cases.

Load new data periodically, and show updated plots or other outputs. For example, in a dashboard monitoring a training run, experiment trial, real-time weather data, …

Run a job periodically

Recipe.

Import packages

import marimo as mo
Create a mo.ui.refresh timer that fires once a second:

refresh = mo.ui.refresh(default_interval=""1s"")
# This outputs a timer that fires once a second
refresh
Reference the timer by name to make this cell run once a second

import random

# This cell will run once a second!
refresh

mo.md(""#"" + """" * random.randint(1, 10))
Require form submission before sending UI value
Use cases. UI elements automatically send their values to the Python when they are interacted with, and run all cells referencing the elements. This makes marimo notebooks responsive, but it can be an issue when the downstream cells are expensive, or when the input (such as a text box) needs to be filled out completely before it is considered valid. Forms let you gate submission of UI element values on manual confirmation, via a button press.

Recipe.

Import packages

import marimo as mo
Create a submittable form.

form = mo.ui.text(label=""Your name"").form()
form
Get the value of the form.

form.value
Stop execution of a cell and its descendants
Use cases. For example, don’t run a cell or its descendants if a form is unsubmitted.

Recipe.

Import packages

import marimo as mo
Create a submittable form.

form = mo.ui.text(label=""Your name"").form()
form
Use mo.stop to stop execution when the form is unsubmitted.

mo.stop(form.value is None, mo.md(""Submit the form to continue""))

mo.md(f""Hello, {form.value}!"")
Grouping UI elements together
Create an array of UI elements
Use cases. In order to synchronize UI elements between the frontend and backend (Python), marimo requires you to assign UI elements to global variables. But sometimes you don’t know the number of elements to make until runtime: for example, maybe you want o make a list of sliders, and the number of sliders to make depends on the value of some other UI element.

You might be tempted to create a Python list of UI elements, such as l = [mo.ui.slider(1, 10) for i in range(number.value)]: however, this won’t work, because the sliders are not bound to global variables.

For such cases, marimo provides the “higher-order” UI element mo.ui.array, which lets you make a new UI element out of a list of UI elements: l = mo.ui.array([mo.ui.slider(1, 10) for i in range(number.value)]). The value of an array element is a list of the values of the elements it wraps (in this case, a list of the slider values). Any time you interact with any of the UI elements in the array, all cells referencing the array by name (in this case, “l”) will run automatically.

Recipe.

Import packages.

import marimo as mo
Use mo.ui.array to group together many UI elements into a list.

import random

# instead of random.randint, in your notebook you'd use the value of
# an upstream UI element or other Python object
array = mo.ui.array([mo.ui.text() for i in range(random.randint(1, 10))])
array
Get the value of the UI elements using array.value

array.value
Create a dictionary of UI elements
Use cases. Same as for creating an array of UI elements, but lets you name each of the wrapped elements with a string key.

Recipe.

Import packages.

import marimo as mo
Use mo.ui.dictionary to group together many UI elements into a list.

import random

# instead of random.randint, in your notebook you'd use the value of
# an upstream UI element or other Python object
dictionary = mo.ui.dictionary({str(i): mo.ui.text() for i in range(random.randint(1, 10))})
dictionary
Get the value of the UI elements using dictionary.value

dictionary.value
Embed a dynamic number of UI elements in another output
Use cases. When you want to embed a dynamic number of UI elements in other outputs (like tables or markdown).

Recipe.

Import packages

import marimo as mo
Group the elements with mo.ui.dictionary or mo.ui.array, then retrieve them from the container and display them elsewhere.

import random

n_items = random.randint(2, 5)

# Create a dynamic number of elements using `mo.ui.dictionary` and
# `mo.ui.array`
elements = mo.ui.dictionary(
    {
        ""checkboxes"": mo.ui.array([mo.ui.checkbox() for _ in range(n_items)]),
        ""texts"": mo.ui.array(
            [mo.ui.text(placeholder=""task ..."") for _ in range(n_items)]
        ),
    }
)

mo.md(
    f""""""
    Here's a TODO list of {n_items} items\n\n
    """"""
    + ""\n\n"".join(
        # Iterate over the elements and embed them in markdown
        [
            f""{checkbox} {text}""
            for checkbox, text in zip(
                elements[""checkboxes""], elements[""texts""]
            )
        ]
    )
)
Get the value of the elements

elements.value
Create a hstack (or vstack) of UI elements with on_change handlers
Use cases. Arrange a dynamic number of UI elements in a hstack or vstack, for example some number of buttons, and execute some side-effect when an element is interacted with, e.g. when a button is clicked.

Recipe.

Import packages

import marimo as mo
Create buttons in mo.ui.array and pass them to hstack – a regular Python list won’t work. Make sure to assign the array to a global variable.

import random


# Create a state object that will store the index of the
# clicked button
get_state, set_state = mo.state(None)

# Create an mo.ui.array of buttons - a regular Python list won't work.
buttons = mo.ui.array(
    [
        mo.ui.button(
            label=""button "" + str(i), on_change=lambda v, i=i: set_state(i)
        )
        for i in range(random.randint(2, 5))
    ]
)

mo.hstack(buttons)
Get the state value

get_state()
Create a table column of buttons with on_change handlers
Use cases. Arrange a dynamic number of UI elements in a column of a table, and execute some side-effect when an element is interacted with, e.g. when a button is clicked.

Recipe.

Import packages

import marimo as mo
Create buttons in mo.ui.array and pass them to mo.ui.table. Make sure to assign the table and array to global variables

import random


# Create a state object that will store the index of the
# clicked button
get_state, set_state = mo.state(None)

# Create an mo.ui.array of buttons - a regular Python list won't work.
buttons = mo.ui.array(
    [
        mo.ui.button(
            label=""button "" + str(i), on_change=lambda v, i=i: set_state(i)
        )
        for i in range(random.randint(2, 5))
    ]
)

# Put the buttons array into the table
table = mo.ui.table(
    {
        ""Action"": [""Action Name""] * len(buttons),
        ""Trigger"": list(buttons),
    }
)
table
Get the state value

get_state()
Create a form with multiple UI elements
Use cases. Combine multiple UI elements into a form so that submission of the form sends all its elements to Python.

Recipe.

Import packages.

import marimo as mo
Use mo.ui.form and Html.batch to create a form with multiple elements.

form = mo.md(
   r""""""
   Choose your algorithm parameters:

   - $\epsilon$: {epsilon}
   - $\delta$: {delta}
   """"""
).batch(epsilon=mo.ui.slider(0.1, 1, step=0.1), delta=mo.ui.number(1, 10)).form()
form
Get the submitted form value.

form.value
Working with buttons
Create a button that triggers computation when clicked
Use cases. To trigger a computation on button click and only on button click, use mo.ui.run_button().

Recipe.

Import packages

import marimo as mo
Create a run button

button = mo.ui.run_button()
button
Run something only if the button has been clicked.

mo.stop(not button.value, ""Click 'run' to generate a random number"")

import random
random.randint(0, 1000)
Create a counter button
Use cases. A counter button, i.e. a button that counts the number of times it has been clicked, is a helpful building block for reacting to button clicks (see other recipes in this section).

Recipe.

Import packages

import marimo as mo
Use mo.ui.button and its on_click argument to create a counter button.

# Initialize the button value to 0, increment it on every click
button = mo.ui.button(value=0, on_click=lambda count: count + 1)
button
Get the button value

button.value
Create a toggle button
Use cases. Toggle between two states using a button with a button that toggles between True and False. (Tip: you can also just use mo.ui.switch.)

Recipe.

Import packages

import marimo as mo
Use mo.ui.button and its on_click argument to create a toggle button.

# Initialize the button value to False, flip its value on every click.
button = mo.ui.button(value=False, on_click=lambda value: not value)
button
Toggle between two outputs using the button value.

mo.md(""True!"") if button.value else mo.md(""False!"")
Re-run a cell when a button is pressed
Use cases. For example, you have a cell showing a random sample of data, and you want to resample on button press.

Recipe.

Import packages

import marimo as mo
Create a button without a value, to function as a trigger.

button = mo.ui.button()
button
Reference the button in another cell.

# the button acts as a trigger: every time it is clicked, this cell is run
button

# Replace with your custom lgic
import random
random.randint(0, 100)
Run a cell when a button is pressed, but not before
Use cases. Wait for confirmation before executing downstream cells (similar to a form).

Recipe.

Import packages

import marimo as mo
Create a counter button.

button = mo.ui.button(value=0, on_click=lambda count: count + 1)
button
Only execute when the count is greater than 0.

# Don't run this cell if the button hasn't been clicked, using mo.stop.
# Alternatively, use an if expression.
mo.stop(button.value == 0)

mo.md(f""The button was clicked {button.value} times"")
Reveal an output when a button is pressed
Use cases. Incrementally reveal a user interface.

Recipe.

Import packages

import marimo as mo
Create a counter button.

button = mo.ui.button(value=0, on_click=lambda count: count + 1)
button
Show an output after the button is clicked.

mo.md(""#"" + """" * button.value) if button.value > 0 else None
Caching
Cache expensive computations
Use case. Because marimo runs cells automatically as code and UI elements change, it can be helpful to cache expensive intermediate computations. For example, perhaps your notebook computes t-SNE, UMAP, or PyMDE embeddings, and exposes their parameters as UI elements. Caching the embeddings for different configurations of the elements would greatly speed up your notebook.

Recipe.

Use functools to cache function outputs given inputs.

import functools

@functools.cache
def compute_predictions(problem_parameters):
   # replace with your own function/parameters
   ...
Whenever compute_predictions is called with a value of problem_parameters it has not seen, it will compute the predictions and store them in a cache. The next time it is called with the same parameters, instead of recomputing the predictions, it will return the previously computed value from the cache.

See our best practices guide to learn more.",How do I make a button?,"import marimo as mo

button = mo.ui.run_button()
button

mo.stop(not button.value, ""Click 'run' to generate a random number"")

import random
random.randint(0, 1000).","import marimo as mo

button = mo.ui.run_button()
button

mo.stop(not button.value, ""Press 'run' to produce a random number"")

import random
random.randint(0, 1000)","import marimo as mo

button = mo.ui.start_button()
button

mo.stop(not button.value, ""Click 'start' to create a random number"")

import random
random.randint(1000, 2000)"
10,"manicfesto proposals
26m tonnes of waste plastic bottles are discarded every year in the UK of which only 45% are recycled. The Loony Party has the answer.. Stop making them..

Before you ask…We have found an alternative. Its called glass.

Some of our Proposals for other elections
Along with the existing Government policy for levelling up the North with the South             we will provide free Spirit Levels to all

We will reduce inflation by giving everyone free pins.

To make trains safer, we will fit them all with cushions on the front.

Any possible schemes thought up by Government, Council , NHS etc,  such as closure of Hosptitals, workplace parking levy etc will be preceded with a Public Consultation which we will then ignore.

We will combat corruption in public life by taking part in it openly, we will                              introduce the Board of Bribery who will set standardised rates?. #sleaze for the many not just the few

We propose to prevent identity theft instantly by calling everyone Chris.

All political and electoral leaflets will be printed on soft paper so that it may be recycled in the appropriate manner.

In an effort to reduce the problems faced by the NHS , it is proposed to reduce                   pregnancy from nine to seven months ?

To protect pets and people of a nervous disposition we would introduce silent fireworks.

With Government helped finance, AstraZeneca should buy out Pfizer, then, as we would have the rights to Viagra, the economy may stay up longer.

Redundant Red Phones boxes will be converted to bijou accommodation to ease the housing shortage.

To make things fairer we will introduce a Court of Human Lefts.

General Election 2022 Manicfesto
General Election 2022 Manicfesto  —— For the Manic, Not the Few

We pledge to fight this election on an invisible platform so that people cannot see the floors in our policies.

Once in Government, we will replace the Foreign Secretary with a British one!

Waitng Lists

We will reduce hospital waiting lists by using a smaller font.

Immigration

We will reduce net migration by making sure that any nets are secured more firmly to the ground.

Inflation

We will reduce inflation by giving everyone free pins

Government Policy

When formulating Policies the Government relies heavily on Expert Advise. Remember  – Experts built the Titanic

The Loony Party will also take into account the opinion of “Dave on Facebook”

Energy Policy

We will get rid of the Energy Price Cap and replace it with a Top Hat (This will also help our Millenery Industry)
2. We will get rid of all Standing Charges. (We are quite capable of sitting down and freezing to death)
3. All the hot air spoken in Parliament will be redirected to the Gas Distribution Networks.
Stressful times in the House
In order to calm down the passions and stresses currently exhibited in Parliament, the Loony Party would make all M.P’s have half an hours compulsory Tai chi everyday.
This would counteract the other 23 ½ hours Chi Ting they do for the rest of the time

Corruption

We in The Loony Party are quite willing to accept bribes , and inducements from the Government in exchange that we don’t stand in the election.
We will combat corruption in public life by taking part in it openly, we will also introduce the Board of Bribery who will set standardised rates?
Northern Powerhouse

The Loony party will invest millions in the Northern Powerhouse.
For clarification all parties agree that, as normal, the North starts at Hadrians Wall and ends where Scotland starts

Brexit

The Border in Northern Ireland would be made out of sponge to prevent a Hard Border
We will renegotiate to stay and lead the E.U and then sack the other 27 countries
Identity Theft

We propose to prevent identity theft instantly by calling everyone Dave.

Play Grounds

We will redevelop Playgrounds for all age groups.

Civil Service

The Civil Service will be extended to all branches of government, because a little politeness goes a long way.

Culture

The British Museum should have a Daddy’s section alongside the current Mummy exhibition.??

Transport

We will only paint yellow lines where you CAN park. Potholes deeper than 3 inches will be marked with a yellow plastic duck .

Elections

All political and electoral leaflets will be printed on soft Toilet paper so that it may be recycled in the appropriate manner. ??

NHS

In an effort to reduce the problems faced by the NHS , it is proposed to reduce pregnancy from nine to seven months ?

Animal Welfare

To protect pets and people of a nervous disposition we would introduce silent fireworks.?

General Election 2019 Manicfesto
General Election 2019 Manicfesto  —— For the Manic, Not the Few

We pledge to fight this election on an invisible platform so that people cannot see the floors in our policies.

Stressful times in the House
In order to calm down the passions and stresses currently exhibited in Parliament, the Loony Party would make all M.P’s have half an hours compulsory Tai chi everyday.
This would counteract the other 23 ½ hours Chi Ting they do for the rest of the time

Corruption

We in The Loony Party are quite willing to accept bribes , and inducements from the Government in exchange that we don’t stand in the election.
We will combat corruption in public life by taking part in it openly, we will also introduce the Board of Bribery who will set standardised rates?
Northern Powerhouse

The Loony party will invest millions in the Northern Powerhouse.
For clarification all parties agree that, as normal, the North starts at Hadrians Wall and ends where Scotland starts

Brexit

The Border in Northern Ireland would be made out of sponge to prevent a Hard Border
We will renegotiate to stay and lead the E.U and then sack the other 27 countries
Identity Theft

We propose to prevent identity theft instantly by calling everyone Dave.

Play Grounds

We will redevelop Playgrounds for all age groups.

Civil Service

The Civil Service will be extended to all branches of government, because a little politeness goes a long way.

Culture

The British Museum should have a Daddy’s section alongside the current Mummy exhibition.??

Transport

We will rename the current Oyster cards, ‘Sardine Cards’ to better reflect the experience when travelling on public transport
2. We will only paint yellow lines where you CAN park. Potholes deeper than 3 inches will be marked with a yellow plastic duck .
Elections

All political and electoral leaflets will be printed on soft Toilet paper so that it may be recycled in the appropriate manner. ??

NHS

In an effort to reduce the problems faced by the NHS , it is proposed to reduce pregnancy from nine to seven months ?

Animal Welfare

To protect pets and people of a nervous disposition we would introduce silent fireworks.?

Policies
We encourage everyone, even current politicians, to submit ideas to our world famous #Manicfesto! The following are some of the most recent from our wonderful Twitter followers…

Once in Government, anyone applying for 7 figure salary positions with the World Health Organisation or as Govt Health Advisors, will have to answer 15 correct questions on “WHO wants to be a Millionaire”.
In Brexit Trade Deals: Germany will be required to pay for treatment of Measles, and Spain will be required to pay for cases of Spanish Flu. The French will pay for all accidents resulting from kissing & broken letters & the Dutch will split all future expenses 50/50.
We will place in law measures to stop panic buying as COVID19 restrictions take hold. Shoppers will only be permitted to buy one panic per person.
It is evident that the 10pm pub curfew is not working , We propose that pubs ask people to leave in alphabetical order.
Shamefully Lord Sutch has never been allowed to take his place in the House of Lords. Nor were Duke Ellington, Count Basie or Lord Rockingham We will end this discrimination against musicians.
To unite the population, we will surround the UK with a large cardboard box so people can be both in and/or out of the EU. This will be known as Schrodinger’s Brexit.
To get more children reading, fish and chips will once again be wrapped in newspaper.
Once in Government we will introduce the Ministry of Clarity. The role of this Ministry will ensure that only the clearest clarity is made clear and the unclear clarity is cleared out. We hope that our position on this is now clear to all.
In Government, we will complete a 5 year Parliament in only 4 years. This policy not only ensures a 20% saving for the public purse but also gives everyone in the UK a year off from listening to our politicians.
The MOT is an annual test to ensure that your car is roadworthy. We will introduce a ROT, an annual test to make sure all roads are car worthy.
And from 1st January 2021, passports will be issued in the colour of political voting. Tories will be Blue, Labour will be Red, Greens will be green. Official Loonies will have leopard spots, and Lib Dem’s will be invisible.
Chinners

Foreign Policy
We will Admit Shamima Begum back to the country only when she accepts Screaming Lord Sutch as her saviour.

Ministry of Info
We will create a New Ministry of Information. It shall consist of the former board of directors of Cambridge Analytica. They already know everything.

Brexit Proposals
We will Send Noel Edmonds to negotiate Brexit because he understands Deal or No Deal.
There will be no need for a backstop to the Brexit negotiations. We’ll have Alec Stewart as wicket-keeper.
James Wallace

Educational Funding
The Loony Party proposes that all Schools would have a Jumble sale or fete or other fundraising event at least twice per month to help raise funds for those little extras. . . such as Desks, Books, paper, pens , etc
R.U. Seerius

Pensions – triple lock
In keeping with the Labour Party’s latest bid to get one or two pensioners to vote for them they have brought out a new policy guaranteeing the Triple lock on pensions until 2025 if they get voted in.
The Loony party of course will go one better and buy a padlock, and as its now safer than a bank,  new mattresses for all pensioners on less than 20p per week.
R.U. Seerius",What is the proposed change for the British museum,The British Museum should have a Daddy’s section alongside the current Mummy exhibition.,The British Museum will add a Daddy section next to the Mummy exhibition.,The British Museum plans to create a Nanny section with the current Mummy items.
2,"Semantic and Textual Inference Chatbot Interface (STICI-Note) - Part 1: Planning and Prototyping

The start of my RAG to riches story

STICI-note

Published: Mon, 27 May 2024

Last modified: Tue, 04 Jun 2024

Introduction

In this three-part series, I will be talking you through how I built the Semantic and Textual Inference Chatbot Interface (or STICI-note for short), a locally run RAG chatbot that uses unstructured text documents to enhance its responses. I came up with the name when I was discussing this project with a friend and asked him whether he had any ideas of what to call it. He said, ""You should call it sticky because it sounds funny."" The name... stuck...

The code for this project is available here.

In this part, I will be planning the project from the tech stack to the techniques I will use, and I will be building a prototype. I will be discussing all of the choices I made and all of the choices I didn’t make, so I hope you find this insightful. Without further ado, let’s get started.

The Problem

In my spare time, I occasionally play Dungeons and Dragons (DnD), a tabletop roleplaying game, and the stories are often told over several months, so details can be easily lost or forgotten over time. I can write notes on my laptop, but sometimes regular text search does not always provide me with the results I want when trying to search for specific notes. Some common examples include when a keyword is used often (e.g., I might write a lot about the actions of “Miles Lawson,” but only one segment of text might describe who he is, making searching for information on his character like finding a needle in a haystack) or when I simply cannot think of the correct keyword to search (e.g., what if I search “silver” instead of “gold”?).

One day, I thought to myself that it’d be great if I had a tool that I could write my DnD notes into in an unstructured way and retrieve the information at any time with simple questions like “Who is Miles Lawson?” or “How much silver did I pay for a stay in ye olde tavern?”. This tool could be extended to be used for querying my notes on many things that are not available online (and therefore not searchable on a search engine), such as documentation on software that I build, notes on things that I’m learning about, such as AWS cloud infrastructure, and my diary of my deepest thoughts and feelings (at least I hope this is not available online). And thus, I decided to start working on STICI-note because the tools available online that do this cost money and run on the cloud, and I’m a tight-fisted guy who’s very sceptical about company promises to not sell your data.

Narrowing Down Features

As with all projects, I began by deciding what features I needed from this tool.

Required features:

Chatbot that you can ask questions and get answers in response (conversational memory is not required).
Information is taken from an unstructured text file.
It must be able to tell me if it doesn’t know the answer to my question.
Fast.
Efficient enough to run on my MacBook with other programs without any performance issues.
Locally run for privacy and to ensure it will always be free, runnable, and consistent.
Conversational memory is the memory of previous interactions given to an LLM. I decided not to require it as a feature because I just need the AI to answer my questions about the given text. It might be added as a feature in the future if I feel like I need it, but I do not plan to include it in the initial version of STICI-note.

I knew that limiting it to running on my M1 MacBook with 8 GB of memory would greatly limit the performance of the tool as I would not be able to access truly large language models like GPT-4 and Claude 3 Opus, but I decided to do it anyway primarily for privacy but also to remove dependencies on external organisations to reduce the maintenance required for the tool in the future.

Planning How to Evaluate and Compare Solutions

If you don’t evaluate a solution, how do you know whether it’s an effective solution? You don’t.

I next planned how I would evaluate different variations of the tool. While I do not evaluate anything in this part, I decided to sketch out a rough plan of how I would evaluate different solutions to encourage designing a testable AI in the same way that Test-Driven Development (TDD) encourages you to write testable code.

At first, I considered using Wikipedia pages as the data source and making my own questions about the content of the pages before I realised that this would lead to data leakage as many LLMs are trained on Wikipedia data.

An alternative dataset that I considered using for evaluation is the TREC 2024 RAG Corpus. This is a 28 GB corpus of text documents scraped from the internet. This corpus comes with thousands of queries, and the relevant documents for each query have been tagged as such. This is an amazing corpus for training and evaluating vector DataBase (DBs). Ignoring the fact that its questions do not come with answers, meaning I would have to write my own answers to use the document, there is one glaring flaw that makes it unusable for my use case: the documents are generally relatively short and describe a large variety of things. In my use case, I expect documents to be long and typically written about the same topic. If I were to use the corpus, I would have to stick documents together to present a realistic challenge in the semantic search of the vector DB vector space, but as each document will likely be about very different topics (e.g., one might be about aviation while another might be about economics), context retrieval would be unrealistically easy.

Another alternative evaluation dataset that I considered using was a synthetic dataset. By following a method like this, I can use an LLM to generate synthetic context and questions automatically. I decided not to do this as I was concerned that this would produce bad-quality data with a massive bias towards things an LLM might already know, despite the use case expecting data that the LLM does not already know.

Because the documents in my evaluation corpus need to be thousands of words in length while staying relevant to a topic and they need to include information that will not be in the LLM’s training data, I decided that it would be best to manually curate a small dataset to evaluate my models. I plan to create documents from sources on the internet like videogame wikis, people’s blogs, and scientific journals and write my own pairs of questions and answers about them. I will then evaluate the difference between the model’s answer and my answer using a semantic similarity score.

RAG vs a Really Big Context Window vs Infinite Context

To be able to answer questions about documents, the LLM would need to have access to information from the documents. I thought of three potential solutions for this:

Retrieval Augmented Generation (RAG)
An LLM with a really big context window
An LLM that supports infinite context length
Using an LLM with a really big context window such as Anthropic’s Claude 3 and Google’s Gemini 1.5 would certainly give me the best results as it would allow inference using completely unfiltered and uncompressed context as they can handle inputs of over 700,000 words, but these models are closed-source, and there is absolutely no chance of a model of this size fitting into my tiny M1 MacBook with 8 GB of memory.

By “an LLM that supports infinite context length,” I mean models like Mamba, Megalodon, and Infini-attention that compress context into a finite space. I decided not to use a model like this for two main reasons. Firstly, I have concerns about the performance. These architectures are in their infancy, and I do not expect them to outperform equivalently-sized traditional transformers. Secondly, as these architectures are very new and experimental, I do not expect much support for them, especially for Apple’s M-series of chips, which have their own graphics API, metal, that is required for GPU acceleration on my MacBook. These architectures are very interesting, and I would love to try them out, but for this project, I will have to settle for a more tried-and-tested approach.

The more tried and tested approach that I settled with is RAG. It is an incredibly popular technique for allowing LLMs to make use of information that is too big to fit in their context windows. This technique is known to perform very well, is incredibly well supported by LLM frameworks like LangChain and llamaindex, and works well in resource-constrained environments like on my laptop. Given all this, RAG was an obvious choice.

Optimising Models for Limited Memory Environments

Next, I decided to investigate what kinds of optimisation strategies were available to use to try to fit bigger models into my M1 chip, as bigger LLMs typically perform better (I know, a groundbreaking revelation). To optimise the LLMs that I use, I considered four different techniques:

Quantisation
Model pruning
Model/knowledge distillation
AirLLM
Quantisation is the most common method for making ML models smaller (and therefore faster and more capable of fitting into smaller spaces). It’s well known for improving speed and memory usage with little loss in accuracy in return, which makes it very popular for production-level AI. Quantising a model would require being able to fit it into your GPU, but I’m trying to quantise a model so that it can fit into my GPU, so without additional computing power, it’s a bit of a chicken and egg problem. Luckily, because this is such a popular technique, there are many quantised versions of large, high-performance LLMs available on HuggingFace that I can use, so there is no need to do this myself.

Model pruning is a less common method for reducing model sizes, but it is not a technique that one should overlook. This is a technique that can be combined with quantisation (or used on its own) to further reduce models at the expense of accuracy, but I do not plan to apply it myself due to its complexity and the fact that quantisation has the same effect. There are pruned models available on HuggingFace, but they don’t typically perform as well as equivalently sized quantised models, so I do not plan to use any unless they have particularly good evaluation results on a common LLM benchmark.

Model/knowledge distillation is another size reduction technique that I considered. Unlike the previous techniques, model distillation can actually improve accuracy in domain-specific tasks while making a smaller model. As with quantisation and model pruning, I will use pre-distiled models, but I will not distil any models myself due to the computing power it requires (which admittedly is far less than training a model from scratch) and the complexity it would add to the project.

The final optimisation technique that I considered, AirLLM, is quite different from the others in that instead of optimising the model weights, it optimises the model inference. Typically, LLMs are loaded onto the GPU in their entirety, requiring a lot of VRAM to run the larger, better-performing models. AirLLM is an open-source library that tackles this problem by using layered inference, an inference technique that involves loading layers individually when they are needed instead of all at once. This allows larger models to fit into smaller memory spaces without degrading performance. This method definitely has a high potential for accuracy, but I decided not to use it as I am concerned about compatibility and reliability issues as it is a new tool and the GitHub repo has been developed by a single person, so support for it is likely to be limited. Additionally, my M1 chip only has 8 GB of memory shared between the CPU and GPU, which is excellent for reducing data loading overhead costs, but it means that larger models that require AirLLM will be loaded directly from the SSD, so I am concerned that the model layer loading and unloading will become a massive bottleneck when doing inference on larger models. I will reconsider this option if I find that the models that can run on my MacBook do not have satisfactory accuracy.

What Models Even Run on My MacBook?

After getting an idea of what kinds of optimisation techniques were available, I decided to conduct some tests to find out what LLMs would actually run on my MacBook. You could argue that since I am only building a prototype right now, I only need to find one LLM that performs well on my MacBook, but I decided to find five models instead to give me an idea of what kinds of models I will be able to use. In particular, I wanted to know how big the models I could run were and what precision the weights would likely be.

I tested models that I had heard were good or showed decent results on the Hugging Face H4 Open LLM Leaderboard. I found LM Studio incredibly useful for testing out LLMs without having to write any code, which saved me a lot of time. Below are the five suitable models that I found that could run on my MacBook and were fast enough to satisfy me:

tinyllama-1.1b-chat-v1.0 Q6_K
Phi 3 Q4_K_M
bartowski/dolphin-2.8-experiment26-7b-GGUF Q3_K_L
mgonzs13/Mistroll-7B-v2.2-GGU
QuantFactory/Meta-Llama-3-8B-Instruct Q3_K_M
These models range from 1.17 GB up to 4.02 GB in size. I chose not to use any models that were any larger than 4 GB, as with only 8 GB of memory available, I expect that models that are any bigger would seriously impact the other applications that the user (i.e., me) is running on their device.

I will likely test out more models than this while testing out different configurations for the tool, but for the prototype, this is enough.

A Model Without a Framework is Like a Car Engine Without a Chassis

To run my models, I could have written a framework for loading, unloading, and executing the models, passing context and queries to the models, and integrating the vector DB (more on that later) with the inference model from scratch, but I didn’t because I’m not insane and I am not trying to learn how to make ML frameworks. A lot of university students (myself included) are conditioned to try to build things from scratch for fear of plagiarism and because they are used to building things from scratch as a learning exercise (a very effective one in my opinion), so it’s difficult to unlearn the DIY mindset, but it’s simply a lot quicker and a lot more reliable to use libraries than to reinvent the wheel. Saying that, I decided to use a relatively simple tech stack.

Python was an obvious choice for me, given that I have a lot of experience with it and that it has an abundance of support for machine learning applications. I decided to use LangChain to orchestrate my RAG process from the vector DB to the inference, as it is a flexible tool for composing NLP pipelines. It is very popular and reliable, and it includes a lot of tools that make developing NLP applications easier. I considered using LlamaIndex as it is built more specifically for RAG applications, but LangChain is more general-purpose, which I expect will make it more extensible for times when I might want to add more features in the future. Additionally, I am more likely to use LangChain again for other applications in the future, so the experience will be more useful. I also considered using LitGPT, but I had some issues getting it to work with the M1 chip’s Metal Performance Shaders (MPS), so I decided not to use it for fear of incompatibility. LitGPT is also intended more for training and fine-tuning LLMs, so it is likely not the best tool for simply deploying them in an application.

To run inference on my models, I will need another library to actually execute the model. As I am using a range of pre-trained models, I will mainly use HuggingFace’s transformers library and the Python bindings for llama.cpp library to load and execute models, as these provide simple interfaces for inference, and I don’t need the additional control that deep learning frameworks like TensorFlow, PyTorch, and JAX provide as I’m using pre-trained models. As I mentioned earlier, AirLLM is still on the table if I need better performance, but I will find out while evaluating models whether this is necessary.

Magnitude + Direction DBs

Since I was using RAG, I needed a vector DB. Deciding which one to use was the final step of the research and also the most difficult one, as vector DBs are the technology that I am least familiar with. For the vector DB, my main requirements were simple: it needed to be lightweight, locally runnable on a laptop, fast, and compatible with my MacBook. Lightweight and locally runnable sound like similar things, but I mean different things by each phrase. The locally runnable one is quite self-explanatory, but by lightweight, I mean quite minimal computation requirements that don’t add features like heavy amounts of redundancy and heavy caching, which are useful for large-scale systems, but will simply drain resources in my application that is designed to run alongside an LLM and the user’s other applications on 8 GB of memory shared between the CPU and GPU.

I considered sixteen different vector DBs, but there were three different solutions that stood out to me for my use case: Chroma, Qdrant, and Vespa. These were all lightweight vector DBs that fit all of my requirements, but I decided to pick Chroma out of the three of them because it has a very batteries included approach, which is very useful for getting an application working quickly.

Below is an overview of my planned tech stack. I did not include any UI, as there are many options for this, and I plan to decide on the UI when building the final product.

The tech stack and data flow that I plan to use for STICI-note.
The tech stack and data flow that I plan to use for STICI-note.

Making the Prototype (A.K.A. the Easy Part)

The final step was to actually build the prototype/proof of concept (PoC) to find out whether this idea can actually be implemented using the tech stack that I have picked. I decided to implement it using the smallest of the 5 models that I had found earlier, tinyllama-1.1b-chat-v1.0 Q6_K, to minimise the chances of having any memory issues.

You can find my prototype code here.

For the prototype, I decided to make very basic configurations for everything to develop it quickly, and I tested it by asking a question about Grace Hopper, one of the most influential programmers to have ever lived, in two versions of the prototype: one with Grace Hopper’s Wikipedia page in its vector DB and one with Alan Turing’s Wikipedia page in its vector DB.

The question was:

“What programming language was Grace Hopper known for creating?”

As expected, the version with Alan Turing’s Wikipedia page failed miserably, hallucinating its entire response:

Grace Hopper was a computer scientist who is best known for her work on developing an early version of BASIC, which was one of the first low-level programming languages designed for mainframe computers. Hopper worked at Digital Equipment Corporation (DEC) in the mid-1960s and was responsible for creating several key BASIC versions that were used by DEC's mainframe computers. In 1973, she left DEC to work on a new low-level programming language called PASCAL, which became one of the most popular programming languages of its time. However, her contributions to BASIC are still remembered today as it was one of the first widely used and easy-to-understand programming languages for mainframe computers.

This behaviour of hallucinating will need to be fixed in the final product, likely through prompt engineering.

As expected, the version with Grace Hopper’s Wikipedia page gave a much more accurate response but it unexpectedly contained far more spelling errors:

Grace Hopper is credited with creating the first computer programming languaige called FLOW-MATIC. This language was developed in 1954 and was based on English words. Hopper's work on this languaige led to a machine-indepenent programming language, COBOL, which used English words instead of symbols for input and output. Her compiler, A-0, also utilized the FLOW-MATIIC language as its basis for compiling programs into executable code. In 1952, Hopper published her first paper on the topic of compiler design, ""The Compiler"" in the IEEE Transactions on Computers, in which she discussed her work with A-0 and other programming languaiges.

Unfortunately, this response was not free from hallucinations either. Hopper’s A-0 compiler did not use the FLOW-MATIC programming language, and she never published a paper called “The Compiler” in IEEE Transactions on Computers (a real journal that is not mentioned in the Wikipedia page). It looks like hallucinations are likely to be a major issue for this tool, but that is a problem I will solve when refining the AI.

On the bright side, inference was ~120 tokens/second, so at least this model will output words much faster than I can read them.

Conclusion

In this blog, I built a locally run prototype for my chatbot for querying unstructured text documents. It doesn’t have a UI, and it hallucinates a lot, but it is nonetheless capable of querying unstructured text.

It’s such a shame that after I had done the research and written all of the code, while I was writing this blog, I read about llmware, a very promising Python framework for building RAG pipelines with small models (sound familiar?). It was even chosen for GitHub Accelerator 2024, a competition for open-source projects on GitHub where chosen projects are given funding, mentorship, and access to resources to help them grow their project. Since I had already built the prototype in LangChain, it didn’t make much sense to tear it down and rebuild it in a fancy new framework that wasn’t as tried-and-tested. I’d love to try the framework out one day if I build another RAG application after this one.

In the next part of the STICI-note blog series, I will be building an evaluation suite to test and compare different inference models and vector DB configurations, so stay tuned and follow me on LinkedIn to be notified when it comes out!",What data did was used to test the prototype?,Grace Hopper's Wikipedia page and Alan Turing's Wikipedia page were used to test the prototype.,Wikipedia pages of Grace Hopper and Alan Turing were used to test the prototype.,The prototype was tested using a selection of academic papers and blog posts about early computer scientists.
5,"How to Maximize Your Impact as a Data Scientist

One of the hardest pills to swallow as an Individual Contributor (IC) at work is that nobody cares about the hard work you put in. They don’t even care about your output; they care about the impact you drive.

What’s the difference? Your output is the analysis you deliver, or the lines of code you write. Your impact is the decision your analysis helps the CEO make, or the revenue the new product feature is generating.


Image by author
If you want to establish yourself as a high performer and accelerate your career as a Data Scientist, it’s key to focus on impact.

In this post I’ll go over the following:
Why prioritizing impact matters not just for managers, but also ICs
Why focusing on impact is hard
How to maximize your impact
How to overcome common challenges in driving real impact
Let’s dive in.

Get an email whenever Torsten Walbaum publishes.
Get an email whenever Torsten Walbaum publishes. By signing up, you will create a Medium account if you don't already…
medium.com

Why should I focus on impact; isn’t that my manager’s job?
Of course you can leave it to your manager to worry about impact. But stepping up comes with some real benefits for your career:

Reduced frustration & burn-out: Putting a lot of work into a project and then feeling like it didn’t move the needle is one of the most frustrating feelings in any job.
Promotions: Promotions are heavily tied to impact. And if you want to become a manager, you’ll need to show that you understand what drives business outcomes and can allocate resources accordingly.
Internal opportunities: People around you notice if you are having an outsized impact, and you’ll increase your chances of receiving internal offers. My promotion to Director happened because the CMO noticed my work on the BizOps team and asked me to move into the Marketing org to build out a Strategy & Analytics team.
External opportunities: Prospective employers don’t focus on what responsibilities you had, but what your impact was. After all, they are trying to figure out how you can help their business.
Why isn’t everyone doing this?
Because it’s hard.

We are used to thinking about inputs and outputs rather than impact in our daily lives (“I went to the gym” or “I did three loads of laundry”) and we carry that mindset over to our jobs.

More importantly, it gives us a sense of control. It’s fully under your control to work hard on the project, and maybe to create the final deliverable, but you can’t guarantee that it will actually move the business forward.

It can also feel like we’re doing someone else’s job. You built the dashboard; now it’s the other team’s problem how they’re going use it and get value from it. You can definitely take this stance; but don’t you want to see your work move the needle?

Lastly, sometimes it’s unclear what impact even looks like for our role because we feel too disconnected from the business outcomes; I’ll get into this below.

How can I become more impact-focused?
Step 1: Understand what impact looks like for your role and measure your success accordingly
Stop thinking about productivity metrics like “I launched 5 experiments” or “I built this model” and hold yourself accountable to driving impact.

But what does that look like for a Data Scientist? For other roles it’s easy; Account Executives have sales quotas and Growth Marketing Managers have lead generation targets.

But Data Science, at its core, is a function that supports other teams. As a result, there are two levels of impact:


Image by author
Did your work change anything for the better for your business partners? E.g.:

Did your analysis change the roll-out strategy of the new product?
Did your model improve forecast accuracy?
Does your dashboard save the team hours every week that they used to spend on manual data pulls?
Did your work help move the needle on downstream business metrics? E.g.:

You’re a Marketing Data Scientist? Assume you’re on the hook for hitting lead and opportunity targets, and improving Marketing efficiency
You’re doing Analytics for the Customer Support org? Start obsessing about response times and satisfaction scores.
You don’t have to be solely responsible for something in order to take (partial) credit for it. If you provided the analysis that resulted in a pricing change that saved the company millions, then you deserve part of the credit for that impact.

You might not feel the consequences of missing these downstream targets as immediately as your stakeholders, but since your long-term career trajectory is still tied to driving impact, it helps to adopt this outcome-focused mindset.

Once you start doing this, you’ll notice more inefficiencies you can help address, or new opportunities for growth.

Step 2: Ensure your work solves a real business problem
You’ll likely know this situation: Instead of approaching you with a problem, people ask you for a specific deliverable. An analysis, a model, a dashboard.

If you blindly execute what they ask, you might realize too late that it won’t lead to tangible business impact. Maybe the problem they are trying to solve is not that important in the grand scheme of things, or there is a better way to approach it.

So what can you do?
Act like an owner. Understand the actual problem behind the request, and ask yourself what business priority this supports.

If you are early in your career then your manager should ideally help with this. But don’t rely on this: Managers don’t always do a perfect job, and you’ll be the one to feel the consequences of badly scoped work.

This requires you to understand company level priorities and the priorities of other orgs and teams. Take notes during All Hands meetings etc. to understand the big picture, and get your hands on other team’s planning materials to get an idea of what they’re trying to accomplish in the next 1–2 quarters.

Step 3: Ensure there is buy-in for your work
Even if your work directly supports company-level priorities, you’ll be in for a bad time if key stakeholders are not bought in.

You don’t want to be in a situation where you finish the work and then realize that another team is blocking the implementation because they have concerns you didn’t address. To avoid this, you’ll:

Need to understand whose support you need, and
Get them onboard from the get-go
This is a complex topic in itself; I’ll write a separate deep dive on how to drive alignment and get buy-in from other teams in the near future.

Step 4: Focus your time on the highest-impact thing
No matter what role you’re in, you’re likely juggling multiple priorities. To maximize your impact, you need to ensure you spend the majority of your time on the most important thing.

As with many things, this is easier said than done though, so let’s talk about what that looks like concretely.

Ad-hoc requests vs. strategic work
It’s easy to get caught up in the craziness of daily business only to realize you didn’t make any progress on the big, strategic project you actually care about.

This is all too common; none of us get to sit in our ivory tower and chip away at our projects undisturbed. Plus, ad-hoc work is impactful, too; while it’s less exciting than strategic projects, it’s what keeps the business running.

Still, if you find yourself spending the majority of your time fielding these ad-hoc issues, it’s time to talk to your manager. I’m sure your manager would rather help protect your bandwidth than have you 1) miss your deadlines on your key projects and 2) quit eventually from frustration.


Image by author
Don’t cry over spilled milk
Another common challenge comes from the sunk cost fallacy. You invested a lot of time into a project, but it doesn’t seem to be going anywhere. Maybe you realized the premise didn’t make as much sense as you thought, or the priorities of the business have changed since you started the work.

Instead of talking to your manager and stakeholders about changing the scope of the project or abandoning it altogether, you’re doubling down to get it over the finish line. After all, you don’t want all of your effort to go to waste. Sound familiar?

Economists (and Poker players) figured out a long time ago that this is a dangerous trap. When prioritizing your time, ignore how much effort your already put in and focus on where the next hour of work will yield the most impact.

Things to watch out for (“impact killers”)
How do you minimize the odds of wasting time on a project that won’t lead to impact? There are a few warning signs:

“Academic” projects: Any time a project is pitched to you along the lines of “This would be interesting to understand” you should be careful; projects that purely improve the understanding of an issue without tying it back to the business are a waste of time and source of frustration in my experience
Overly ambitious project scope: At Uber, everyone always wanted to understand what the “best” driver incentive type is. Many people worked on this over the years, but it never led anywhere. There was no simple “one-size-fits-all” answer to this question, and the projects that led to actual impact were much more concrete, tactical optimizations
The customer or deliverable are not defined: If it’s not clear who the end user of your work is (are you doing this for your manager, leadership, or another team?), or you’re unsure what exactly you’re supposed to deliver, it should raise a red flag. This is typically a sign that the project needs more scoping work before someone should start running with it
Common Challenges and How to Address Them
We talked about general frameworks to maximize impact. But how do you make actual, specific projects more impactful?

Many times, projects fail close to the finish line. Impact doesn’t materialize automatically, so you need to put in the final bit of work to ensure your work gets adopted. Doing this has an extremely high return on the time you invest since you already did the hard work to produce the deliverable and “only” need to close the loop with stakeholders.


Image by author
To make things more tangible, I am going to go through a few types of common deliverables, touch on where they typically fail to create impact and propose what you can do about it:

1. You create a comprehensive analysis but nobody is acting on it
Problem: This is common with analyses that don’t have a clear recommendation. If you simply outline the data and potential paths forward, you are expecting your audience to do all of the heavy lifting.

Solution: Your work starts adding real value for them once you take that work off their plate. Always give a clear recommendation; you can caveat it and show alternatives in the appendix, but you need to take a stance.

2. You ran an experiment but nobody is using the results
Problem: Many experiments conclude with a metrics read-out by Data Science. More often than not, this is a “metrics dump” with a lot of information, but little interpretation or context.

Solution: Help your business partners interpret the results, and tell them how it affects what they care about.

How should they think about the statistical significance or lack thereof?
Is the observed lift good compared to other changes you tested and shipped?
What is your recommendation for next steps? What does the experiment result mean for this person or team specifically?
Remember, you are the subject matter expert and shouldn’t expect non-analytical audiences to interpret raw experiment data. Telling your stakeholders what the result means for them will increase chances they will act on it.

3. You built a predictive model, but the team you built it for is not using it
Problem: When predictive models don’t get used, it’s often because of a lack of trust in the model output.

ML models themselves tend to be black boxes, and if teams don’t understand how the outputs were generated and whether they are reliable, they are hesitant to rely on them. Even if your model is not using ML and lives in a spreadsheet: If people don’t know how it works, they’ll be suspicious.

Solution: It’s all about involving stakeholders in the process and building trust.

Involve stakeholders in the model development from the get-go to get them comfortable and address any concerns early on
Demystify the output; for example, you can extract the top model features and explain them
Sanity-check predictions and compare them to intuition. For example, if you forecast sales but your model predicts a different seasonality pattern from previous years, you’ll need to be able to explain why, or you’ll lose trust. In my experience, this is more impactful than just sharing performance metrics like the accuracy of the model
Having a structured playbook for how to do this will make your life easier, so I’ll cover this in a separate post in the near future.

4. You created a dashboard but nobody is looking at it
Problem: If a dashboard doesn’t get used, it’s likely one of these things is true:

The dashboard doesn’t directly address an urgent business use case
You didn’t involve your stakeholders along the way (e.g. by sharing mock-ups and drafts for feedback) and the final product is not what they were hoping for
The dashboard is complex and your users don’t understand how to get what they need
Solution: To address #1 and #2, start with user research to understand pain points and potential use cases of the dashboard, and involve your stakeholders during development.

With regards to #3, a simpler dashboard that users are comfortable with beats a more advanced one that doesn’t get used. If you cannot (or don’t want to) simplify the dash further, you’ll need to train your users on the functionality and shadow them to understand any points of friction.

A dashboard is not done when you ship it for the first time, but needs to be improved over time based on users’ needs and feedback.

Closing Thoughts
Focusing on impact is scary since we leave the world of controllable inputs behind, but it’s what ultimately gets you promotions and new job opportunities.

And isn’t it nice when your work actually feels like it moves the needle?

For more hands-on analytics advice, consider following me here on Medium, on LinkedIn or on Substack.",What are the given examples of common challenges?,"The given examples of common challenges are: ""you create a comprehensive analysis but nobody is acting on it""; ""you ran an experiment but nobody is using the results""; ""you built a predictive model, but the team you built it for is not using it""; and ""you created a dashboard but nobody is looking at it"".","Some examples include creating an analysis without action, running experiments with unused results, building models that aren't trusted, and dashboards going unviewed.","The challenges include having incomplete analysis, unsuccessful experiments, malfunctioning predictive models, and dashboards breaking down."
2,"Semantic and Textual Inference Chatbot Interface (STICI-Note) - Part 1: Planning and Prototyping

The start of my RAG to riches story

STICI-note

Published: Mon, 27 May 2024

Last modified: Tue, 04 Jun 2024

Introduction

In this three-part series, I will be talking you through how I built the Semantic and Textual Inference Chatbot Interface (or STICI-note for short), a locally run RAG chatbot that uses unstructured text documents to enhance its responses. I came up with the name when I was discussing this project with a friend and asked him whether he had any ideas of what to call it. He said, ""You should call it sticky because it sounds funny."" The name... stuck...

The code for this project is available here.

In this part, I will be planning the project from the tech stack to the techniques I will use, and I will be building a prototype. I will be discussing all of the choices I made and all of the choices I didn’t make, so I hope you find this insightful. Without further ado, let’s get started.

The Problem

In my spare time, I occasionally play Dungeons and Dragons (DnD), a tabletop roleplaying game, and the stories are often told over several months, so details can be easily lost or forgotten over time. I can write notes on my laptop, but sometimes regular text search does not always provide me with the results I want when trying to search for specific notes. Some common examples include when a keyword is used often (e.g., I might write a lot about the actions of “Miles Lawson,” but only one segment of text might describe who he is, making searching for information on his character like finding a needle in a haystack) or when I simply cannot think of the correct keyword to search (e.g., what if I search “silver” instead of “gold”?).

One day, I thought to myself that it’d be great if I had a tool that I could write my DnD notes into in an unstructured way and retrieve the information at any time with simple questions like “Who is Miles Lawson?” or “How much silver did I pay for a stay in ye olde tavern?”. This tool could be extended to be used for querying my notes on many things that are not available online (and therefore not searchable on a search engine), such as documentation on software that I build, notes on things that I’m learning about, such as AWS cloud infrastructure, and my diary of my deepest thoughts and feelings (at least I hope this is not available online). And thus, I decided to start working on STICI-note because the tools available online that do this cost money and run on the cloud, and I’m a tight-fisted guy who’s very sceptical about company promises to not sell your data.

Narrowing Down Features

As with all projects, I began by deciding what features I needed from this tool.

Required features:

Chatbot that you can ask questions and get answers in response (conversational memory is not required).
Information is taken from an unstructured text file.
It must be able to tell me if it doesn’t know the answer to my question.
Fast.
Efficient enough to run on my MacBook with other programs without any performance issues.
Locally run for privacy and to ensure it will always be free, runnable, and consistent.
Conversational memory is the memory of previous interactions given to an LLM. I decided not to require it as a feature because I just need the AI to answer my questions about the given text. It might be added as a feature in the future if I feel like I need it, but I do not plan to include it in the initial version of STICI-note.

I knew that limiting it to running on my M1 MacBook with 8 GB of memory would greatly limit the performance of the tool as I would not be able to access truly large language models like GPT-4 and Claude 3 Opus, but I decided to do it anyway primarily for privacy but also to remove dependencies on external organisations to reduce the maintenance required for the tool in the future.

Planning How to Evaluate and Compare Solutions

If you don’t evaluate a solution, how do you know whether it’s an effective solution? You don’t.

I next planned how I would evaluate different variations of the tool. While I do not evaluate anything in this part, I decided to sketch out a rough plan of how I would evaluate different solutions to encourage designing a testable AI in the same way that Test-Driven Development (TDD) encourages you to write testable code.

At first, I considered using Wikipedia pages as the data source and making my own questions about the content of the pages before I realised that this would lead to data leakage as many LLMs are trained on Wikipedia data.

An alternative dataset that I considered using for evaluation is the TREC 2024 RAG Corpus. This is a 28 GB corpus of text documents scraped from the internet. This corpus comes with thousands of queries, and the relevant documents for each query have been tagged as such. This is an amazing corpus for training and evaluating vector DataBase (DBs). Ignoring the fact that its questions do not come with answers, meaning I would have to write my own answers to use the document, there is one glaring flaw that makes it unusable for my use case: the documents are generally relatively short and describe a large variety of things. In my use case, I expect documents to be long and typically written about the same topic. If I were to use the corpus, I would have to stick documents together to present a realistic challenge in the semantic search of the vector DB vector space, but as each document will likely be about very different topics (e.g., one might be about aviation while another might be about economics), context retrieval would be unrealistically easy.

Another alternative evaluation dataset that I considered using was a synthetic dataset. By following a method like this, I can use an LLM to generate synthetic context and questions automatically. I decided not to do this as I was concerned that this would produce bad-quality data with a massive bias towards things an LLM might already know, despite the use case expecting data that the LLM does not already know.

Because the documents in my evaluation corpus need to be thousands of words in length while staying relevant to a topic and they need to include information that will not be in the LLM’s training data, I decided that it would be best to manually curate a small dataset to evaluate my models. I plan to create documents from sources on the internet like videogame wikis, people’s blogs, and scientific journals and write my own pairs of questions and answers about them. I will then evaluate the difference between the model’s answer and my answer using a semantic similarity score.

RAG vs a Really Big Context Window vs Infinite Context

To be able to answer questions about documents, the LLM would need to have access to information from the documents. I thought of three potential solutions for this:

Retrieval Augmented Generation (RAG)
An LLM with a really big context window
An LLM that supports infinite context length
Using an LLM with a really big context window such as Anthropic’s Claude 3 and Google’s Gemini 1.5 would certainly give me the best results as it would allow inference using completely unfiltered and uncompressed context as they can handle inputs of over 700,000 words, but these models are closed-source, and there is absolutely no chance of a model of this size fitting into my tiny M1 MacBook with 8 GB of memory.

By “an LLM that supports infinite context length,” I mean models like Mamba, Megalodon, and Infini-attention that compress context into a finite space. I decided not to use a model like this for two main reasons. Firstly, I have concerns about the performance. These architectures are in their infancy, and I do not expect them to outperform equivalently-sized traditional transformers. Secondly, as these architectures are very new and experimental, I do not expect much support for them, especially for Apple’s M-series of chips, which have their own graphics API, metal, that is required for GPU acceleration on my MacBook. These architectures are very interesting, and I would love to try them out, but for this project, I will have to settle for a more tried-and-tested approach.

The more tried and tested approach that I settled with is RAG. It is an incredibly popular technique for allowing LLMs to make use of information that is too big to fit in their context windows. This technique is known to perform very well, is incredibly well supported by LLM frameworks like LangChain and llamaindex, and works well in resource-constrained environments like on my laptop. Given all this, RAG was an obvious choice.

Optimising Models for Limited Memory Environments

Next, I decided to investigate what kinds of optimisation strategies were available to use to try to fit bigger models into my M1 chip, as bigger LLMs typically perform better (I know, a groundbreaking revelation). To optimise the LLMs that I use, I considered four different techniques:

Quantisation
Model pruning
Model/knowledge distillation
AirLLM
Quantisation is the most common method for making ML models smaller (and therefore faster and more capable of fitting into smaller spaces). It’s well known for improving speed and memory usage with little loss in accuracy in return, which makes it very popular for production-level AI. Quantising a model would require being able to fit it into your GPU, but I’m trying to quantise a model so that it can fit into my GPU, so without additional computing power, it’s a bit of a chicken and egg problem. Luckily, because this is such a popular technique, there are many quantised versions of large, high-performance LLMs available on HuggingFace that I can use, so there is no need to do this myself.

Model pruning is a less common method for reducing model sizes, but it is not a technique that one should overlook. This is a technique that can be combined with quantisation (or used on its own) to further reduce models at the expense of accuracy, but I do not plan to apply it myself due to its complexity and the fact that quantisation has the same effect. There are pruned models available on HuggingFace, but they don’t typically perform as well as equivalently sized quantised models, so I do not plan to use any unless they have particularly good evaluation results on a common LLM benchmark.

Model/knowledge distillation is another size reduction technique that I considered. Unlike the previous techniques, model distillation can actually improve accuracy in domain-specific tasks while making a smaller model. As with quantisation and model pruning, I will use pre-distiled models, but I will not distil any models myself due to the computing power it requires (which admittedly is far less than training a model from scratch) and the complexity it would add to the project.

The final optimisation technique that I considered, AirLLM, is quite different from the others in that instead of optimising the model weights, it optimises the model inference. Typically, LLMs are loaded onto the GPU in their entirety, requiring a lot of VRAM to run the larger, better-performing models. AirLLM is an open-source library that tackles this problem by using layered inference, an inference technique that involves loading layers individually when they are needed instead of all at once. This allows larger models to fit into smaller memory spaces without degrading performance. This method definitely has a high potential for accuracy, but I decided not to use it as I am concerned about compatibility and reliability issues as it is a new tool and the GitHub repo has been developed by a single person, so support for it is likely to be limited. Additionally, my M1 chip only has 8 GB of memory shared between the CPU and GPU, which is excellent for reducing data loading overhead costs, but it means that larger models that require AirLLM will be loaded directly from the SSD, so I am concerned that the model layer loading and unloading will become a massive bottleneck when doing inference on larger models. I will reconsider this option if I find that the models that can run on my MacBook do not have satisfactory accuracy.

What Models Even Run on My MacBook?

After getting an idea of what kinds of optimisation techniques were available, I decided to conduct some tests to find out what LLMs would actually run on my MacBook. You could argue that since I am only building a prototype right now, I only need to find one LLM that performs well on my MacBook, but I decided to find five models instead to give me an idea of what kinds of models I will be able to use. In particular, I wanted to know how big the models I could run were and what precision the weights would likely be.

I tested models that I had heard were good or showed decent results on the Hugging Face H4 Open LLM Leaderboard. I found LM Studio incredibly useful for testing out LLMs without having to write any code, which saved me a lot of time. Below are the five suitable models that I found that could run on my MacBook and were fast enough to satisfy me:

tinyllama-1.1b-chat-v1.0 Q6_K
Phi 3 Q4_K_M
bartowski/dolphin-2.8-experiment26-7b-GGUF Q3_K_L
mgonzs13/Mistroll-7B-v2.2-GGU
QuantFactory/Meta-Llama-3-8B-Instruct Q3_K_M
These models range from 1.17 GB up to 4.02 GB in size. I chose not to use any models that were any larger than 4 GB, as with only 8 GB of memory available, I expect that models that are any bigger would seriously impact the other applications that the user (i.e., me) is running on their device.

I will likely test out more models than this while testing out different configurations for the tool, but for the prototype, this is enough.

A Model Without a Framework is Like a Car Engine Without a Chassis

To run my models, I could have written a framework for loading, unloading, and executing the models, passing context and queries to the models, and integrating the vector DB (more on that later) with the inference model from scratch, but I didn’t because I’m not insane and I am not trying to learn how to make ML frameworks. A lot of university students (myself included) are conditioned to try to build things from scratch for fear of plagiarism and because they are used to building things from scratch as a learning exercise (a very effective one in my opinion), so it’s difficult to unlearn the DIY mindset, but it’s simply a lot quicker and a lot more reliable to use libraries than to reinvent the wheel. Saying that, I decided to use a relatively simple tech stack.

Python was an obvious choice for me, given that I have a lot of experience with it and that it has an abundance of support for machine learning applications. I decided to use LangChain to orchestrate my RAG process from the vector DB to the inference, as it is a flexible tool for composing NLP pipelines. It is very popular and reliable, and it includes a lot of tools that make developing NLP applications easier. I considered using LlamaIndex as it is built more specifically for RAG applications, but LangChain is more general-purpose, which I expect will make it more extensible for times when I might want to add more features in the future. Additionally, I am more likely to use LangChain again for other applications in the future, so the experience will be more useful. I also considered using LitGPT, but I had some issues getting it to work with the M1 chip’s Metal Performance Shaders (MPS), so I decided not to use it for fear of incompatibility. LitGPT is also intended more for training and fine-tuning LLMs, so it is likely not the best tool for simply deploying them in an application.

To run inference on my models, I will need another library to actually execute the model. As I am using a range of pre-trained models, I will mainly use HuggingFace’s transformers library and the Python bindings for llama.cpp library to load and execute models, as these provide simple interfaces for inference, and I don’t need the additional control that deep learning frameworks like TensorFlow, PyTorch, and JAX provide as I’m using pre-trained models. As I mentioned earlier, AirLLM is still on the table if I need better performance, but I will find out while evaluating models whether this is necessary.

Magnitude + Direction DBs

Since I was using RAG, I needed a vector DB. Deciding which one to use was the final step of the research and also the most difficult one, as vector DBs are the technology that I am least familiar with. For the vector DB, my main requirements were simple: it needed to be lightweight, locally runnable on a laptop, fast, and compatible with my MacBook. Lightweight and locally runnable sound like similar things, but I mean different things by each phrase. The locally runnable one is quite self-explanatory, but by lightweight, I mean quite minimal computation requirements that don’t add features like heavy amounts of redundancy and heavy caching, which are useful for large-scale systems, but will simply drain resources in my application that is designed to run alongside an LLM and the user’s other applications on 8 GB of memory shared between the CPU and GPU.

I considered sixteen different vector DBs, but there were three different solutions that stood out to me for my use case: Chroma, Qdrant, and Vespa. These were all lightweight vector DBs that fit all of my requirements, but I decided to pick Chroma out of the three of them because it has a very batteries included approach, which is very useful for getting an application working quickly.

Below is an overview of my planned tech stack. I did not include any UI, as there are many options for this, and I plan to decide on the UI when building the final product.

The tech stack and data flow that I plan to use for STICI-note.
The tech stack and data flow that I plan to use for STICI-note.

Making the Prototype (A.K.A. the Easy Part)

The final step was to actually build the prototype/proof of concept (PoC) to find out whether this idea can actually be implemented using the tech stack that I have picked. I decided to implement it using the smallest of the 5 models that I had found earlier, tinyllama-1.1b-chat-v1.0 Q6_K, to minimise the chances of having any memory issues.

You can find my prototype code here.

For the prototype, I decided to make very basic configurations for everything to develop it quickly, and I tested it by asking a question about Grace Hopper, one of the most influential programmers to have ever lived, in two versions of the prototype: one with Grace Hopper’s Wikipedia page in its vector DB and one with Alan Turing’s Wikipedia page in its vector DB.

The question was:

“What programming language was Grace Hopper known for creating?”

As expected, the version with Alan Turing’s Wikipedia page failed miserably, hallucinating its entire response:

Grace Hopper was a computer scientist who is best known for her work on developing an early version of BASIC, which was one of the first low-level programming languages designed for mainframe computers. Hopper worked at Digital Equipment Corporation (DEC) in the mid-1960s and was responsible for creating several key BASIC versions that were used by DEC's mainframe computers. In 1973, she left DEC to work on a new low-level programming language called PASCAL, which became one of the most popular programming languages of its time. However, her contributions to BASIC are still remembered today as it was one of the first widely used and easy-to-understand programming languages for mainframe computers.

This behaviour of hallucinating will need to be fixed in the final product, likely through prompt engineering.

As expected, the version with Grace Hopper’s Wikipedia page gave a much more accurate response but it unexpectedly contained far more spelling errors:

Grace Hopper is credited with creating the first computer programming languaige called FLOW-MATIC. This language was developed in 1954 and was based on English words. Hopper's work on this languaige led to a machine-indepenent programming language, COBOL, which used English words instead of symbols for input and output. Her compiler, A-0, also utilized the FLOW-MATIIC language as its basis for compiling programs into executable code. In 1952, Hopper published her first paper on the topic of compiler design, ""The Compiler"" in the IEEE Transactions on Computers, in which she discussed her work with A-0 and other programming languaiges.

Unfortunately, this response was not free from hallucinations either. Hopper’s A-0 compiler did not use the FLOW-MATIC programming language, and she never published a paper called “The Compiler” in IEEE Transactions on Computers (a real journal that is not mentioned in the Wikipedia page). It looks like hallucinations are likely to be a major issue for this tool, but that is a problem I will solve when refining the AI.

On the bright side, inference was ~120 tokens/second, so at least this model will output words much faster than I can read them.

Conclusion

In this blog, I built a locally run prototype for my chatbot for querying unstructured text documents. It doesn’t have a UI, and it hallucinates a lot, but it is nonetheless capable of querying unstructured text.

It’s such a shame that after I had done the research and written all of the code, while I was writing this blog, I read about llmware, a very promising Python framework for building RAG pipelines with small models (sound familiar?). It was even chosen for GitHub Accelerator 2024, a competition for open-source projects on GitHub where chosen projects are given funding, mentorship, and access to resources to help them grow their project. Since I had already built the prototype in LangChain, it didn’t make much sense to tear it down and rebuild it in a fancy new framework that wasn’t as tried-and-tested. I’d love to try the framework out one day if I build another RAG application after this one.

In the next part of the STICI-note blog series, I will be building an evaluation suite to test and compare different inference models and vector DB configurations, so stay tuned and follow me on LinkedIn to be notified when it comes out!",Which large language models and vector databases were shortlisted for this project?,"The tinyllama-1.1b-chat-v1.0 Q6_K, Phi 3 Q4_K_M"", bartowski/dolphin-2.8-experiment26-7b-GGUF Q3_K_L, mgonzs13/Mistroll-7B-v2.2-GGU, and QuantFactory/Meta-Llama-3-8B-Instruct Q3_K_M large language models and the Chroma, Qdrant, and Vespa vector databases were shortlisted for this project.","The large language models shortlisted were tinyllama, Phi 3, bartowski/dolphin, Mistroll, and QuantFactory/Meta-Llama. The vector databases considered were Chroma, Qdrant, and Vespa.","The shortlisted large language models and vector databases were GPT-4, Claude 3 Opus, Anthropic’s Claude 3, and the TREC 2024 RAG Corpus, Vespa, and Qdrant."
